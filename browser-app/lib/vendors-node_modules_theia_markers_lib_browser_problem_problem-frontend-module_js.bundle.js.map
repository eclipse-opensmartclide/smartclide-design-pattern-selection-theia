{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/core/shared/vscode-languageserver-types.js","webpack://browser-app/../node_modules/@theia/markers/src/browser/style/index.css","webpack://browser-app/../node_modules/@theia/markers/src/browser/marker-tree-label-provider.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/marker-tree-model.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/marker-tree.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-container.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-contribution.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-decorator.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-frontend-module.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-layout-migrations.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-preferences.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-selection.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-tabbar-decorator.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-tree-model.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-utils.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-widget-tab-bar-decorator.ts","webpack://browser-app/../node_modules/@theia/markers/src/browser/problem/problem-widget.tsx","webpack://browser-app/../node_modules/@theia/markers/src/browser/style/index.css?def6"],"names":["module"],"mappings":"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","file":"vendors-node_modules_theia_markers_lib_browser_problem_problem-frontend-module_js.bundle.js","sourcesContent":["module.exports = require('vscode-languageserver-types');\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2017 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-marker-container {\\n    font-size: var(--theia-ui-font-size1);\\n}\\n\\n.theia-side-panel .theia-marker-container .noMarkers {\\n    padding-left: 19px;\\n}\\n\\n.theia-marker-container .markerNode,\\n.theia-marker-container .markerFileNode {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n.theia-marker-container .markerNode div,\\n.theia-marker-container .markerFileNode div:not(.file-icon) {\\n    display: flex;\\n    margin-right: 5px;\\n}\\n\\n.theia-marker-container .markerFileNode .name,\\n.theia-marker-container .markerFileNode .path {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .markerFileNode .path {\\n    font-size: var(--theia-ui-font-size0);\\n    align-self: flex-end;\\n    white-space: nowrap;\\n}\\n\\n.theia-marker-container .error {\\n    color: var(--theia-editorError-foreground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .warning {\\n    color: var(--theia-editorWarning-foreground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .information {\\n    color: var(--theia-editorInfo-foreground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .hint {\\n    color: var(--theia-successBackground);\\n    opacity: 1;\\n}\\n\\n.theia-marker-container .markerNode .position,\\n.theia-marker-container .markerNode .owner {\\n    white-space: nowrap;\\n    margin-left: 5px;\\n}\\n\\n.theia-marker-container .markerNode .message {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.theia-marker-container .row-button-container {\\n    display: none;\\n}\\n\\n.theia-marker-container .theia-TreeNodeContent:hover .row-button-container {\\n    display: flex;\\n    justify-content: flex-end;\\n    flex: 1;\\n    align-items: center;\\n    align-self: center;\\n}\\n\", \"\"]);\n\n// exports\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { LabelProvider, LabelProviderContribution, DidChangeLabelEvent } from '@theia/core/lib/browser/label-provider';\nimport { MarkerInfoNode } from './marker-tree';\nimport { TreeLabelProvider } from '@theia/core/lib/browser/tree/tree-label-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n@injectable()\nexport class MarkerTreeLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(TreeLabelProvider)\n    protected readonly treeLabelProvider: TreeLabelProvider;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    canHandle(element: object): number {\n        return MarkerInfoNode.is(element) ?\n            this.treeLabelProvider.canHandle(element) + 1 :\n            0;\n    }\n\n    getIcon(node: MarkerInfoNode): string {\n        return this.labelProvider.getIcon(node.uri);\n    }\n\n    getName(node: MarkerInfoNode): string {\n        return this.labelProvider.getName(node.uri);\n    }\n\n    getLongName(node: MarkerInfoNode): string {\n        const description: string[] = [];\n        const rootUri = this.workspaceService.getWorkspaceRootUri(node.uri);\n        // In a multiple-root workspace include the root name to the label before the parent directory.\n        if (this.workspaceService.isMultiRootWorkspaceOpened && rootUri) {\n            description.push(this.labelProvider.getName(rootUri));\n        }\n        // If the given resource is not at the workspace root, include the parent directory to the label.\n        if (rootUri && rootUri.toString() !== node.uri.parent.toString()) {\n            description.push(this.labelProvider.getLongName(node.uri.parent));\n        }\n        // Get the full path of a resource which does not exist in the given workspace.\n        if (!rootUri) {\n            description.push(this.labelProvider.getLongName(node.uri.parent.withScheme('markers')));\n        }\n        return description.join(' ● ');\n    }\n\n    getDescription(node: MarkerInfoNode): string {\n        return this.labelProvider.getLongName(node.uri.parent);\n    }\n\n    affects(node: MarkerInfoNode, event: DidChangeLabelEvent): boolean {\n        return event.affects(node.uri) || event.affects(node.uri.parent);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MarkerNode } from './marker-tree';\nimport { TreeModelImpl, OpenerService, open, TreeNode, OpenerOptions } from '@theia/core/lib/browser';\n\n@injectable()\nexport class MarkerTreeModel extends TreeModelImpl {\n\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n\n    protected doOpenNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, this.getOpenerOptionsByMarker(node));\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    protected getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        return undefined;\n    }\n\n    /**\n     * Reveal the corresponding node at the marker.\n     * @param node {TreeNode} the tree node.\n     */\n    revealNode(node: TreeNode): void {\n        if (MarkerNode.is(node)) {\n            open(this.openerService, node.uri, { ...this.getOpenerOptionsByMarker(node), mode: 'reveal' });\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { TreeImpl, CompositeTreeNode, TreeNode, SelectableTreeNode, ExpandableTreeNode } from '@theia/core/lib/browser';\nimport { MarkerManager } from './marker-manager';\nimport { Marker } from '../common/marker';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport URI from '@theia/core/lib/common/uri';\nimport { ProblemSelection } from './problem/problem-selection';\n\nexport const MarkerOptions = Symbol('MarkerOptions');\nexport interface MarkerOptions {\n    readonly kind: string;\n}\n\n@injectable()\nexport abstract class MarkerTree<T extends object> extends TreeImpl {\n\n    constructor(\n        protected readonly markerManager: MarkerManager<T>,\n        protected readonly markerOptions: MarkerOptions\n    ) {\n        super();\n\n        this.toDispose.push(markerManager.onDidChangeMarkers(uri => this.refreshMarkerInfo(uri)));\n\n        this.root = <MarkerRootNode>{\n            visible: false,\n            id: 'theia-' + markerOptions.kind + '-marker-widget',\n            name: 'MarkerTree',\n            kind: markerOptions.kind,\n            children: [],\n            parent: undefined\n        };\n    }\n\n    protected async refreshMarkerInfo(uri: URI): Promise<void> {\n        const id = uri.toString();\n        const existing = this.getNode(id);\n        const markers = this.markerManager.findMarkers({ uri });\n        if (markers.length <= 0) {\n            if (MarkerInfoNode.is(existing)) {\n                CompositeTreeNode.removeChild(existing.parent, existing);\n                this.removeNode(existing);\n                this.fireChanged();\n            }\n            return;\n        }\n        const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n        CompositeTreeNode.addChild(node.parent, node);\n        const children = this.getMarkerNodes(node, markers);\n        node.numberOfMarkers = markers.length;\n        this.setChildren(node, children);\n    }\n\n    protected async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (MarkerRootNode.is(parent)) {\n            const nodes: MarkerInfoNode[] = [];\n            for (const id of this.markerManager.getUris()) {\n                const uri = new URI(id);\n                const existing = this.getNode(id);\n                const markers = this.markerManager.findMarkers({ uri });\n                const node = MarkerInfoNode.is(existing) ? existing : this.createMarkerInfo(id, uri);\n                node.children = this.getMarkerNodes(node, markers);\n                node.numberOfMarkers = node.children.length;\n                nodes.push(node);\n            }\n            return nodes;\n        }\n        return super.resolveChildren(parent);\n    }\n\n    protected createMarkerInfo(id: string, uri: URI): MarkerInfoNode {\n        return {\n            children: [],\n            expanded: true,\n            uri,\n            id,\n            parent: this.root as MarkerRootNode,\n            selected: false,\n            numberOfMarkers: 0\n        };\n    }\n\n    protected getMarkerNodes(parent: MarkerInfoNode, markers: Marker<T>[]): MarkerNode[] {\n        return markers.map((marker, index) =>\n            this.createMarkerNode(marker, index, parent)\n        );\n    }\n    protected createMarkerNode(marker: Marker<T>, index: number, parent: MarkerInfoNode): MarkerNode {\n        const id = parent.id + '_' + index;\n        const existing = this.getNode(id);\n        if (MarkerNode.is(existing)) {\n            existing.marker = marker;\n            return existing;\n        }\n        return {\n            id,\n            name: 'marker',\n            parent,\n            selected: false,\n            uri: parent.uri,\n            marker\n        };\n    }\n}\n\nexport interface MarkerNode extends UriSelection, SelectableTreeNode, ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace MarkerNode {\n    export function is(node: TreeNode | undefined): node is MarkerNode {\n        return UriSelection.is(node) && SelectableTreeNode.is(node) && ProblemSelection.is(node);\n    }\n}\n\nexport interface MarkerInfoNode extends UriSelection, SelectableTreeNode, ExpandableTreeNode {\n    parent: MarkerRootNode;\n    numberOfMarkers: number;\n}\nexport namespace MarkerInfoNode {\n    export function is(node: Object | undefined): node is MarkerInfoNode {\n        return ExpandableTreeNode.is(node) && UriSelection.is(node) && 'numberOfMarkers' in node;\n    }\n}\n\nexport interface MarkerRootNode extends CompositeTreeNode {\n    kind: string;\n}\nexport namespace MarkerRootNode {\n    export function is(node: TreeNode | undefined): node is MarkerRootNode {\n        return CompositeTreeNode.is(node) && 'kind' in node;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { MarkerOptions } from '../marker-tree';\nimport { ProblemWidget } from './problem-widget';\nimport { ProblemTreeModel, ProblemTree } from './problem-tree-model';\nimport { TreeWidget, TreeProps, defaultTreeProps, TreeModel, createTreeContainer, TreeModelImpl, TreeImpl, Tree } from '@theia/core/lib/browser';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\n\nexport const PROBLEM_TREE_PROPS = <TreeProps>{\n    ...defaultTreeProps,\n    contextMenuPath: [PROBLEM_KIND],\n    globalSelection: true\n};\n\nexport const PROBLEM_OPTIONS = <MarkerOptions>{\n    kind: 'problem'\n};\n\nexport function createProblemTreeContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n\n    child.unbind(TreeImpl);\n    child.bind(ProblemTree).toSelf();\n    child.rebind(Tree).toService(ProblemTree);\n\n    child.unbind(TreeWidget);\n    child.bind(ProblemWidget).toSelf();\n\n    child.unbind(TreeModelImpl);\n    child.bind(ProblemTreeModel).toSelf();\n    child.rebind(TreeModel).toService(ProblemTreeModel);\n\n    child.rebind(TreeProps).toConstantValue(PROBLEM_TREE_PROPS);\n    child.bind(MarkerOptions).toConstantValue(PROBLEM_OPTIONS);\n    return child;\n}\n\nexport function createProblemWidget(parent: interfaces.Container): ProblemWidget {\n    return createProblemTreeContainer(parent).get(ProblemWidget);\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { FrontendApplication, FrontendApplicationContribution, CompositeTreeNode, SelectableTreeNode, Widget, codicon } from '@theia/core/lib/browser';\nimport { StatusBar, StatusBarAlignment } from '@theia/core/lib/browser/status-bar/status-bar';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { PROBLEM_KIND, ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager, ProblemStat } from './problem-manager';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { MenuPath, MenuModelRegistry } from '@theia/core/lib/common/menu';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { ProblemSelection } from './problem-selection';\n\nexport const PROBLEMS_CONTEXT_MENU: MenuPath = [PROBLEM_KIND];\n\nexport namespace ProblemsMenu {\n    export const CLIPBOARD = [...PROBLEMS_CONTEXT_MENU, '1_clipboard'];\n    export const PROBLEMS = [...PROBLEMS_CONTEXT_MENU, '2_problems'];\n}\n\nexport namespace ProblemsCommands {\n    export const COLLAPSE_ALL: Command = {\n        id: 'problems.collapse.all'\n    };\n    export const COLLAPSE_ALL_TOOLBAR: Command = {\n        id: 'problems.collapse.all.toolbar',\n        iconClass: codicon('collapse-all')\n    };\n    export const COPY: Command = {\n        id: 'problems.copy'\n    };\n    export const COPY_MESSAGE: Command = {\n        id: 'problems.copy.message',\n    };\n    export const CLEAR_ALL: Command = {\n        id: 'problems.clear.all',\n        category: 'Problems',\n        label: 'Clear All',\n        iconClass: codicon('clear-all')\n    };\n}\n\n@injectable()\nexport class ProblemContribution extends AbstractViewContribution<ProblemWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n    @inject(StatusBar) protected readonly statusBar: StatusBar;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    constructor() {\n        super({\n            widgetId: PROBLEMS_WIDGET_ID,\n            widgetName: 'Problems',\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'problemsView:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+m'\n        });\n    }\n\n    onStart(app: FrontendApplication): void {\n        this.updateStatusBarElement();\n        this.problemManager.onDidChangeMarkers(this.updateStatusBarElement);\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    protected updateStatusBarElement = debounce(() => this.setStatusBarElement(this.problemManager.getProblemStat()), 10);\n    protected setStatusBarElement(problemStat: ProblemStat): void {\n        this.statusBar.setElement('problem-marker-status', {\n            text: problemStat.infos <= 0\n                ? `$(codicon-error) ${problemStat.errors} $(codicon-warning) ${problemStat.warnings}`\n                : `$(codicon-error) ${problemStat.errors} $(codicon-warning) ${problemStat.warnings} $(codicon-info) ${problemStat.infos}`,\n            alignment: StatusBarAlignment.LEFT,\n            priority: 10,\n            command: this.toggleCommand ? this.toggleCommand.id : undefined,\n            tooltip: this.getStatusBarTooltip(problemStat)\n        });\n    }\n\n    /**\n     * Get the tooltip to be displayed when hovering over the problem statusbar item.\n     * - Displays `No Problems` when no problems are present.\n     * - Displays a human-readable label which describes for each type of problem stat properties,\n     * their overall count and type when any one of these properties has a positive count.\n     * @param stat the problem stat describing the number of `errors`, `warnings` and `infos`.\n     *\n     * @return the tooltip to be displayed in the statusbar.\n     */\n    protected getStatusBarTooltip(stat: ProblemStat): string {\n        if (stat.errors <= 0 && stat.warnings <= 0 && stat.infos <= 0) {\n            return 'No Problems';\n        }\n        const tooltip: string[] = [];\n        if (stat.errors > 0) {\n            tooltip.push(`${stat.errors} Errors`);\n        }\n        if (stat.warnings > 0) {\n            tooltip.push(`${stat.warnings} Warnings`);\n        }\n        if (stat.infos > 0) {\n            tooltip.push(`${stat.infos} Infos`);\n        }\n        return tooltip.join(', ');\n\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL, {\n            execute: () => this.collapseAllProblems()\n        });\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL_TOOLBAR, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.collapseAllProblems())\n        });\n        commands.registerCommand(ProblemsCommands.COPY,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copy(selection)\n            })\n        );\n        commands.registerCommand(ProblemsCommands.COPY_MESSAGE,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copyMessage(selection)\n            })\n        );\n        commands.registerCommand(ProblemsCommands.CLEAR_ALL, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.problemManager.cleanAllMarkers())\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        super.registerMenus(menus);\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY.id,\n            label: 'Copy',\n            order: '0'\n        });\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY_MESSAGE.id,\n            label: 'Copy Message',\n            order: '1'\n        });\n        menus.registerMenuAction(ProblemsMenu.PROBLEMS, {\n            commandId: ProblemsCommands.COLLAPSE_ALL.id,\n            label: 'Collapse All',\n            order: '2'\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            command: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            tooltip: 'Collapse All',\n            priority: 0,\n        });\n        toolbarRegistry.registerItem({\n            id: ProblemsCommands.CLEAR_ALL.id,\n            command: ProblemsCommands.CLEAR_ALL.id,\n            tooltip: 'Clear All',\n            priority: 1,\n        });\n    }\n\n    protected async collapseAllProblems(): Promise<void> {\n        const { model } = await this.widget;\n        const root = model.root as CompositeTreeNode;\n        const firstChild = root.children[0];\n        root.children.forEach(child => CompositeTreeNode.is(child) && model.collapseAll(child));\n        if (SelectableTreeNode.is(firstChild)) {\n            model.selectNode(firstChild);\n        }\n    }\n\n    protected addToClipboard(content: string): void {\n        const handleCopy = (e: ClipboardEvent) => {\n            document.removeEventListener('copy', handleCopy);\n            if (e.clipboardData) {\n                e.clipboardData.setData('text/plain', content);\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('copy', handleCopy);\n        document.execCommand('copy');\n    }\n\n    protected copy(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        const serializedProblem = JSON.stringify({\n            resource: marker.uri,\n            owner: marker.owner,\n            code: marker.data.code,\n            severity: marker.data.severity,\n            message: marker.data.message,\n            source: marker.data.source,\n            startLineNumber: marker.data.range.start.line,\n            startColumn: marker.data.range.start.character,\n            endLineNumber: marker.data.range.end.line,\n            endColumn: marker.data.range.end.character\n        }, undefined, '\\t');\n\n        this.addToClipboard(serializedProblem);\n    }\n\n    protected copyMessage(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        this.addToClipboard(marker.data.message);\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (problems: ProblemWidget) => T): T | false {\n        if (widget instanceof ProblemWidget && widget.id === PROBLEMS_WIDGET_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Diagnostic, DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-types';\nimport URI from '@theia/core/lib/common/uri';\nimport { notEmpty } from '@theia/core/lib/common/objects';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Tree } from '@theia/core/lib/browser/tree/tree';\nimport { DepthFirstTreeIterator } from '@theia/core/lib/browser/tree/tree-iterator';\nimport { TreeDecorator, TreeDecoration } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { FileStatNode } from '@theia/filesystem/lib/browser';\nimport { Marker } from '../../common/marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemPreferences } from './problem-preferences';\nimport { ProblemUtils } from './problem-utils';\nimport { OpenEditorNode } from '@theia/navigator/lib/browser/open-editors-widget/navigator-open-editors-tree-model';\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\n\n@injectable()\nexport class ProblemDecorator implements TreeDecorator {\n\n    @inject(ProblemPreferences)\n    protected problemPreferences: ProblemPreferences;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    readonly id = 'theia-problem-decorator';\n\n    protected readonly emitter: Emitter<(tree: Tree) => Map<string, TreeDecoration.Data>>;\n\n    constructor(@inject(ProblemManager) protected readonly problemManager: ProblemManager) {\n        this.emitter = new Emitter();\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree)));\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.problemPreferences.onPreferenceChanged(event => {\n            if (event.preferenceName === 'problems.decorations.enabled') {\n                this.fireDidChangeDecorations(tree => this.collectDecorators(tree));\n            }\n        });\n        this.workspaceService.onWorkspaceChanged(() => {\n            this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree));\n        });\n        this.workspaceService.onWorkspaceLocationChanged(() => {\n            this.fireDidChangeDecorations((tree: Tree) => this.collectDecorators(tree));\n        });\n    }\n\n    async decorations(tree: Tree): Promise<Map<string, TreeDecoration.Data>> {\n        return this.collectDecorators(tree);\n    }\n\n    get onDidChangeDecorations(): Event<(tree: Tree) => Map<string, TreeDecoration.Data>> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(event: (tree: Tree) => Map<string, TreeDecoration.Data>): void {\n        this.emitter.fire(event);\n    }\n\n    protected collectDecorators(tree: Tree): Map<string, TreeDecoration.Data> {\n        const decorations = new Map<string, TreeDecoration.Data>();\n        // If the tree root is undefined or the preference for the decorations is disabled, return an empty result map.\n        if (tree.root === undefined || !this.problemPreferences['problems.decorations.enabled']) {\n            return decorations;\n        }\n        const markers = this.appendContainerMarkers(tree, this.collectMarkers(tree));\n        for (const node of new DepthFirstTreeIterator(tree.root)) {\n            const nodeUri = FileStatNode.getUri(node);\n            if (nodeUri) {\n                const marker = markers.get(nodeUri);\n                let decorator: TreeDecoration.Data | undefined;\n                if (marker) {\n                    decorator = this.toDecorator(marker);\n                }\n                if (OpenEditorNode.is(node)) {\n                    decorator = this.appendSuffixDecoration(node.uri, decorator);\n                }\n                if (decorator) {\n                    decorations.set(node.id, decorator);\n                }\n            }\n        }\n        return decorations;\n    }\n\n    protected appendSuffixDecoration(nodeURI: URI, existingDecorations?: TreeDecoration.Data): TreeDecoration.Data {\n        const workspaceAndPath = this.generateCaptionSuffix(nodeURI);\n        const color = existingDecorations?.fontData?.color;\n        const captionSuffix: WidgetDecoration.CaptionAffix = { data: workspaceAndPath };\n        if (color) {\n            Object.assign(captionSuffix, { fontData: { color } });\n        }\n        const suffixDecorations: TreeDecoration.Data = {\n            captionSuffixes: [captionSuffix]\n        };\n        const decorator = existingDecorations ?? {};\n        return Object.assign(decorator, suffixDecorations);\n    }\n\n    protected generateCaptionSuffix(nodeURI: URI): string {\n        const workspaceRoots = this.workspaceService.tryGetRoots();\n        const parentWorkspace = this.workspaceService.getWorkspaceRootUri(nodeURI);\n        let workspacePrefixString = '';\n        let separator = '';\n        let filePathString = '';\n        const nodeURIDir = nodeURI.parent;\n        if (parentWorkspace) {\n            const relativeDirFromWorkspace = parentWorkspace.relative(nodeURIDir);\n            workspacePrefixString = workspaceRoots.length > 1 ? this.labelProvider.getName(parentWorkspace) : '';\n            filePathString = relativeDirFromWorkspace?.toString() ?? '';\n            separator = filePathString && workspacePrefixString ? ' \\u2022 ' : ''; // add a bullet point between workspace and path\n        } else {\n            workspacePrefixString = nodeURIDir.path.toString();\n        }\n        return `${workspacePrefixString}${separator}${filePathString}`;\n    }\n\n    protected appendContainerMarkers(tree: Tree, markers: Marker<Diagnostic>[]): Map<string, Marker<Diagnostic>> {\n        const result: Map<string, Marker<Diagnostic>> = new Map();\n        // We traverse up and assign the diagnostic to the container directory.\n        // Note, instead of stopping at the WS root, we traverse up the driver root.\n        // We will filter them later based on the expansion state of the tree.\n        for (const [uri, marker] of new Map(markers.map(m => [new URI(m.uri), m] as [URI, Marker<Diagnostic>])).entries()) {\n            const uriString = uri.toString();\n            result.set(uriString, marker);\n            let parentUri: URI | undefined = uri.parent;\n            while (parentUri && !parentUri.path.isRoot) {\n                const parentUriString = parentUri.toString();\n                const existing = result.get(parentUriString);\n                // Make sure the highest diagnostic severity (smaller number) will be propagated to the container directory.\n                if (existing === undefined || this.compare(marker, existing) < 0) {\n                    result.set(parentUriString, {\n                        data: marker.data,\n                        uri: parentUriString,\n                        owner: marker.owner,\n                        kind: marker.kind\n                    });\n                    parentUri = parentUri.parent;\n                } else {\n                    parentUri = undefined;\n                }\n            }\n        }\n        return result;\n    }\n\n    protected collectMarkers(tree: Tree): Marker<Diagnostic>[] {\n        return Array.from(this.problemManager.getUris())\n            .map(uri => new URI(uri))\n            .map(uri => this.problemManager.findMarkers({ uri }))\n            .map(markers => markers.sort(this.compare.bind(this)))\n            .map(markers => markers.shift())\n            .filter(notEmpty)\n            .filter(this.filterMarker.bind(this));\n    }\n\n    protected toDecorator(marker: Marker<Diagnostic>): TreeDecoration.Data {\n        const position = TreeDecoration.IconOverlayPosition.BOTTOM_RIGHT;\n        const icon = this.getOverlayIcon(marker);\n        const color = this.getOverlayIconColor(marker);\n        const priority = this.getPriority(marker);\n        return {\n            priority,\n            fontData: {\n                color,\n            },\n            iconOverlay: {\n                position,\n                icon,\n                color,\n                background: {\n                    shape: 'circle',\n                    color: 'transparent'\n                }\n            },\n        };\n    }\n\n    protected getOverlayIcon(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'times-circle';\n            case 2: return 'exclamation-circle';\n            case 3: return 'info-circle';\n            default: return 'hand-o-up';\n        }\n    }\n\n    protected getOverlayIconColor(marker: Marker<Diagnostic>): TreeDecoration.Color {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'var(--theia-editorError-foreground)';\n            case 2: return 'var(--theia-editorWarning-foreground)';\n            case 3: return 'var(--theia-editorInfo-foreground)';\n            default: return 'var(--theia-successBackground)';\n        }\n    }\n\n    /**\n     * Get the decoration for a given marker diagnostic.\n     * Markers with higher severity have a higher priority and should be displayed.\n     * @param marker the diagnostic marker.\n     */\n    protected getPriority(marker: Marker<Diagnostic>): number {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 30; // Errors.\n            case 2: return 20; // Warnings.\n            case 3: return 10; // Infos.\n            default: return 0;\n        }\n    }\n\n    /**\n     * Returns `true` if the diagnostic (`data`) of the marker argument has `Error`, `Warning`, or `Information` severity.\n     * Otherwise, returns `false`.\n     */\n    protected filterMarker(marker: Marker<Diagnostic>): boolean {\n        const { severity } = marker.data;\n        return severity === DiagnosticSeverity.Error\n            || severity === DiagnosticSeverity.Warning\n            || severity === DiagnosticSeverity.Information;\n    }\n\n    protected compare(left: Marker<Diagnostic>, right: Marker<Diagnostic>): number {\n        return ProblemDecorator.severityCompare(left, right);\n    }\n\n}\n\nexport namespace ProblemDecorator {\n\n    // Highest severities (errors) come first, then the others. Undefined severities treated as the last ones.\n    export const severityCompare = ProblemUtils.severityCompare;\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../../src/browser/style/index.css';\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { ProblemContribution } from './problem-contribution';\nimport { createProblemWidget } from './problem-container';\nimport { FrontendApplicationContribution, bindViewContribution, ApplicationShellLayoutMigration, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { ProblemManager } from './problem-manager';\nimport { WidgetFactory } from '@theia/core/lib/browser/widget-manager';\nimport { NavigatorTreeDecorator } from '@theia/navigator/lib/browser/navigator-decorator-service';\nimport { ProblemDecorator } from './problem-decorator';\nimport { ProblemTabBarDecorator } from './problem-tabbar-decorator';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { ProblemLayoutVersion3Migration } from './problem-layout-migrations';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { bindProblemPreferences } from './problem-preferences';\nimport { MarkerTreeLabelProvider } from '../marker-tree-label-provider';\nimport { ProblemWidgetTabBarDecorator } from './problem-widget-tab-bar-decorator';\nimport { OpenEditorsTreeDecorator } from '@theia/navigator/lib/browser/open-editors-widget/navigator-open-editors-decorator-service';\n\nexport default new ContainerModule(bind => {\n    bindProblemPreferences(bind);\n\n    bind(ProblemManager).toSelf().inSingletonScope();\n\n    bind(ProblemWidget).toDynamicValue(ctx =>\n        createProblemWidget(ctx.container)\n    );\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: PROBLEMS_WIDGET_ID,\n        createWidget: () => context.container.get<ProblemWidget>(ProblemWidget)\n    }));\n    bind(ApplicationShellLayoutMigration).to(ProblemLayoutVersion3Migration).inSingletonScope();\n\n    bindViewContribution(bind, ProblemContribution);\n    bind(FrontendApplicationContribution).toService(ProblemContribution);\n    bind(TabBarToolbarContribution).toService(ProblemContribution);\n\n    bind(ProblemDecorator).toSelf().inSingletonScope();\n    bind(NavigatorTreeDecorator).toService(ProblemDecorator);\n    bind(OpenEditorsTreeDecorator).toService(ProblemDecorator);\n    bind(ProblemTabBarDecorator).toSelf().inSingletonScope();\n    bind(TabBarDecorator).toService(ProblemTabBarDecorator);\n\n    bind(MarkerTreeLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(MarkerTreeLabelProvider);\n\n    bind(ProblemWidgetTabBarDecorator).toSelf().inSingletonScope();\n    bind(TabBarDecorator).toService(ProblemWidgetTabBarDecorator);\n});\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { ApplicationShellLayoutMigration, WidgetDescription } from '@theia/core/lib/browser/shell/shell-layout-restorer';\nimport { PROBLEM_KIND } from '../../common/problem-marker';\nimport { PROBLEMS_WIDGET_ID } from './problem-widget';\n\n@injectable()\nexport class ProblemLayoutVersion3Migration implements ApplicationShellLayoutMigration {\n    readonly layoutVersion = 3.0;\n    onWillInflateWidget(desc: WidgetDescription): WidgetDescription | undefined {\n        if (desc.constructionOptions.factoryId === PROBLEM_KIND) {\n            desc.constructionOptions.factoryId = PROBLEMS_WIDGET_ID;\n            return desc;\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\n\nexport const ProblemConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'problems.decorations.enabled': {\n            'type': 'boolean',\n            'description': 'Show problem decorators (diagnostic markers) in tree widgets.',\n            'default': true,\n        },\n        'problems.decorations.tabbar.enabled': {\n            'type': 'boolean',\n            'description': 'Show problem decorators (diagnostic markers) in the tab bars.',\n            'default': true\n        },\n        'problems.autoReveal': {\n            'type': 'boolean',\n            'description': 'Controls whether Problems view should reveal markers when file is opened.',\n            'default': true\n        }\n    }\n};\n\nexport interface ProblemConfiguration {\n    'problems.decorations.enabled': boolean,\n    'problems.decorations.tabbar.enabled': boolean,\n    'problems.autoReveal': boolean\n}\n\nexport const ProblemPreferenceContribution = Symbol('ProblemPreferenceContribution');\nexport const ProblemPreferences = Symbol('ProblemPreferences');\nexport type ProblemPreferences = PreferenceProxy<ProblemConfiguration>;\n\nexport function createProblemPreferences(preferences: PreferenceService, schema: PreferenceSchema = ProblemConfigSchema): ProblemPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport const bindProblemPreferences = (bind: interfaces.Bind): void => {\n    bind(ProblemPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(ProblemPreferenceContribution);\n        return createProblemPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(ProblemPreferenceContribution).toConstantValue({ schema: ProblemConfigSchema });\n    bind(PreferenceContribution).toService(ProblemPreferenceContribution);\n};\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\nimport { Marker } from '../../common/marker';\nimport { ProblemMarker } from '../../common/problem-marker';\n\nexport interface ProblemSelection {\n    marker: Marker<object>;\n}\nexport namespace ProblemSelection {\n    export function is(arg: Object | undefined): arg is ProblemSelection {\n        return typeof arg === 'object' && ('marker' in arg) && ProblemMarker.is(arg['marker']);\n    }\n\n    export class CommandHandler extends SelectionCommandHandler<ProblemSelection> {\n\n        constructor(\n            protected readonly selectionService: SelectionService,\n            protected readonly options: SelectionCommandHandler.Options<ProblemSelection>\n        ) {\n            super(\n                selectionService,\n                arg => ProblemSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Diagnostic, DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-types';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Title, Widget } from '@theia/core/shared/@phosphor/widgets';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { Marker } from '../../common/marker';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemPreferences, ProblemConfiguration } from './problem-preferences';\nimport { PreferenceChangeEvent, Navigatable } from '@theia/core/lib/browser';\n\n@injectable()\nexport class ProblemTabBarDecorator implements TabBarDecorator {\n\n    readonly id = 'theia-problem-tabbar-decorator';\n\n    protected readonly emitter = new Emitter<void>();\n\n    @inject(ProblemPreferences)\n    protected readonly preferences: ProblemPreferences;\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations());\n        this.preferences.onPreferenceChanged(event => this.handlePreferenceChange(event));\n    }\n\n    decorate(title: Title<Widget>): WidgetDecoration.Data[] {\n        if (!this.preferences['problems.decorations.tabbar.enabled']) {\n            return [];\n        }\n        const widget = title.owner;\n        if (Navigatable.is(widget)) {\n            const resourceUri = widget.getResourceUri();\n            if (resourceUri) {\n                // Get the list of problem markers for the given resource URI.\n                const markers: Marker<Diagnostic>[] = this.problemManager.findMarkers({ uri: resourceUri });\n                // If no markers are available, return early.\n                if (markers.length === 0) {\n                    return [];\n                }\n                // Store the marker with the highest severity.\n                let maxSeverity: Marker<Diagnostic> | undefined;\n                // Iterate over available markers to determine that which has the highest severity.\n                // Only display a decoration if an error or warning marker is available.\n                for (const marker of markers) {\n                    // Break early if an error marker is present, since it represents the highest severity.\n                    if (marker.data.severity === DiagnosticSeverity.Error) {\n                        maxSeverity = marker;\n                        break;\n                    } else if (marker.data.severity === DiagnosticSeverity.Warning) {\n                        maxSeverity = marker;\n                    }\n                }\n                // Decorate the tabbar with the highest marker severity if available.\n                return maxSeverity ? [this.toDecorator(maxSeverity)] : [];\n            }\n        }\n        return [];\n    }\n\n    get onDidChangeDecorations(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(): void {\n        this.emitter.fire(undefined);\n    }\n\n    /**\n     * Handle changes in preference.\n     * @param {PreferenceChangeEvent<ProblemConfiguration>} event The event of the changes in preference.\n     */\n    protected async handlePreferenceChange(event: PreferenceChangeEvent<ProblemConfiguration>): Promise<void> {\n        const { preferenceName } = event;\n        if (preferenceName === 'problems.decorations.tabbar.enabled') {\n            this.fireDidChangeDecorations();\n        }\n    }\n\n    /**\n     * Convert a diagnostic marker to a decorator.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Data} The decoration data.\n     */\n    protected toDecorator(marker: Marker<Diagnostic>): WidgetDecoration.Data {\n        const position = WidgetDecoration.IconOverlayPosition.BOTTOM_RIGHT;\n        const icon = this.getOverlayIcon(marker);\n        const color = this.getOverlayIconColor(marker);\n        return {\n            iconOverlay: {\n                position,\n                icon,\n                color,\n                background: {\n                    shape: 'circle',\n                    color: 'transparent'\n                }\n            }\n        };\n    }\n\n    /**\n     * Get the appropriate overlay icon for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {string} A string representing the overlay icon class.\n     */\n    protected getOverlayIcon(marker: Marker<Diagnostic>): string {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'times-circle';\n            case 2: return 'exclamation-circle';\n            case 3: return 'info-circle';\n            default: return 'hand-o-up';\n        }\n    }\n\n    /**\n     * Get the appropriate overlay icon color for decoration.\n     * @param {Marker<Diagnostic>} marker A diagnostic marker.\n     * @returns {WidgetDecoration.Color} The decoration color.\n     */\n    protected getOverlayIconColor(marker: Marker<Diagnostic>): WidgetDecoration.Color {\n        const { severity } = marker.data;\n        switch (severity) {\n            case 1: return 'var(--theia-editorError-foreground)';\n            case 2: return 'var(--theia-editorWarning-foreground)';\n            case 3: return 'var(--theia-editorInfo-foreground)';\n            default: return 'var(--theia-successBackground)';\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager } from './problem-manager';\nimport { MarkerNode, MarkerTree, MarkerOptions, MarkerInfoNode } from '../marker-tree';\nimport { MarkerTreeModel } from '../marker-tree-model';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { OpenerOptions, TreeNode } from '@theia/core/lib/browser';\nimport { Marker } from '../../common/marker';\nimport { Diagnostic } from '@theia/core/shared/vscode-languageserver-types';\nimport { ProblemUtils } from './problem-utils';\n\n@injectable()\nexport class ProblemTree extends MarkerTree<Diagnostic> {\n\n    constructor(\n        @inject(ProblemManager) protected readonly problemManager: ProblemManager,\n        @inject(MarkerOptions) protected readonly markerOptions: MarkerOptions) {\n        super(problemManager, markerOptions);\n    }\n\n    protected getMarkerNodes(parent: MarkerInfoNode, markers: Marker<Diagnostic>[]): MarkerNode[] {\n        const nodes = super.getMarkerNodes(parent, markers);\n        return nodes.sort((a, b) => this.sortMarkers(a, b));\n    }\n\n    /**\n     * Sort markers based on the following rules:\n     * - Markers are fist sorted by `severity`.\n     * - Markers are sorted by `line number` if applicable.\n     * - Markers are sorted by `column number` if applicable.\n     * - Markers are then finally sorted by `owner` if applicable.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    protected sortMarkers(a: MarkerNode, b: MarkerNode): number {\n        const markerA = a.marker as Marker<Diagnostic>;\n        const markerB = b.marker as Marker<Diagnostic>;\n\n        // Determine the marker with the highest severity.\n        const severity = ProblemUtils.severityCompare(markerA, markerB);\n        if (severity !== 0) {\n            return severity;\n        }\n        // Determine the marker with the lower line number.\n        const lineNumber = ProblemUtils.lineNumberCompare(markerA, markerB);\n        if (lineNumber !== 0) {\n            return lineNumber;\n        }\n        // Determine the marker with the lower column number.\n        const columnNumber = ProblemUtils.columnNumberCompare(markerA, markerB);\n        if (columnNumber !== 0) {\n            return columnNumber;\n        }\n        // Sort by owner in alphabetical order.\n        const owner = ProblemUtils.ownerCompare(markerA, markerB);\n        if (owner !== 0) {\n            return owner;\n        }\n        return 0;\n    }\n\n}\n\n@injectable()\nexport class ProblemTreeModel extends MarkerTreeModel {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n\n    protected getOpenerOptionsByMarker(node: MarkerNode): OpenerOptions | undefined {\n        if (ProblemMarker.is(node.marker)) {\n            return {\n                selection: node.marker.data.range\n            };\n        }\n        return undefined;\n    }\n\n    removeNode(node: TreeNode): void {\n        if (MarkerInfoNode.is(node)) {\n            this.problemManager.cleanAllMarkers(node.uri);\n        }\n        if (MarkerNode.is(node)) {\n            const { uri } = node;\n            const { owner } = node.marker;\n            const diagnostics = this.problemManager.findMarkers({ uri, owner, dataFilter: data => node.marker.data !== data }).map(({ data }) => data);\n            this.problemManager.setMarkers(uri, owner, diagnostics);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Marker } from '../../common/marker';\nimport { Diagnostic } from '@theia/core/shared/vscode-languageserver-types';\n\nexport namespace ProblemUtils {\n\n    /**\n     * Comparator for severity.\n     * - The highest severity (`error`) come first followed by others.\n     * - `undefined` severities are treated as the last ones.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const severityCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number =>\n        (a.data.severity || Number.MAX_SAFE_INTEGER) - (b.data.severity || Number.MAX_SAFE_INTEGER);\n\n    /**\n     * Comparator for line numbers.\n     * - The lowest line number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const lineNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.line - b.data.range.start.line;\n\n    /**\n     * Comparator for column numbers.\n     * - The lowest column number comes first.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n    export const columnNumberCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.data.range.start.character - b.data.range.start.character;\n\n    /**\n     * Comparator for marker owner (source).\n     * - The order is alphabetical.\n     * @param a the first marker for comparison.\n     * @param b the second marker for comparison.\n     */\n     export const ownerCompare = (a: Marker<Diagnostic>, b: Marker<Diagnostic>): number => a.owner.localeCompare(b.owner);\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { ProblemManager } from './problem-manager';\nimport { TabBarDecorator } from '@theia/core/lib/browser/shell/tab-bar-decorator';\nimport { Title, Widget } from '@theia/core/lib/browser';\nimport { WidgetDecoration } from '@theia/core/lib/browser/widget-decoration';\n\n@injectable()\nexport class ProblemWidgetTabBarDecorator implements TabBarDecorator {\n\n    readonly id = 'theia-problems-widget-tabbar-decorator';\n    protected readonly emitter = new Emitter<void>();\n\n    @inject(ProblemManager)\n    protected readonly problemManager: ProblemManager;\n\n    @postConstruct()\n    protected init(): void {\n        this.problemManager.onDidChangeMarkers(() => this.fireDidChangeDecorations());\n    }\n\n    decorate(title: Title<Widget>): WidgetDecoration.Data[] {\n        if (title.owner.id === 'problems') {\n            const { infos, warnings, errors } = this.problemManager.getProblemStat();\n            const markerCount = infos + warnings + errors;\n            return markerCount > 0 ? [{ badge: markerCount }] : [];\n        } else {\n            return [];\n        }\n    }\n\n    get onDidChangeDecorations(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected fireDidChangeDecorations(): void {\n        this.emitter.fire(undefined);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ProblemManager } from './problem-manager';\nimport { ProblemMarker } from '../../common/problem-marker';\nimport { ProblemTreeModel } from './problem-tree-model';\nimport { MarkerInfoNode, MarkerNode, MarkerRootNode } from '../marker-tree';\nimport {\n    TreeWidget, TreeProps, ContextMenuRenderer, TreeNode, NodeProps, TreeModel,\n    ApplicationShell, Navigatable, ExpandableTreeNode, SelectableTreeNode, TREE_NODE_INFO_CLASS, codicon\n} from '@theia/core/lib/browser';\nimport { DiagnosticSeverity } from '@theia/core/shared/vscode-languageserver-types';\nimport * as React from '@theia/core/shared/react';\nimport { ProblemPreferences } from './problem-preferences';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\n\nexport const PROBLEMS_WIDGET_ID = 'problems';\n\n@injectable()\nexport class ProblemWidget extends TreeWidget {\n\n    protected readonly toDisposeOnCurrentWidgetChanged = new DisposableCollection();\n\n    @inject(ProblemPreferences)\n    protected readonly preferences: ProblemPreferences;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    constructor(\n        @inject(ProblemManager) protected readonly problemManager: ProblemManager,\n        @inject(TreeProps) readonly treeProps: TreeProps,\n        @inject(ProblemTreeModel) readonly model: ProblemTreeModel,\n        @inject(ContextMenuRenderer) readonly contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(treeProps, model, contextMenuRenderer);\n\n        this.id = PROBLEMS_WIDGET_ID;\n        this.title.label = 'Problems';\n        this.title.caption = 'Problems';\n        this.title.iconClass = codicon('warning');\n        this.title.closable = true;\n        this.addClass('theia-marker-container');\n\n        this.addClipboardListener(this.node, 'copy', e => this.handleCopy(e));\n    }\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.updateFollowActiveEditor();\n        this.toDispose.push(this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'problems.autoReveal') {\n                this.updateFollowActiveEditor();\n            }\n        }));\n    }\n\n    protected updateFollowActiveEditor(): void {\n        this.toDisposeOnCurrentWidgetChanged.dispose();\n        this.toDispose.push(this.toDisposeOnCurrentWidgetChanged);\n        if (this.preferences.get('problems.autoReveal')) {\n            this.followActiveEditor();\n        }\n    }\n\n    protected followActiveEditor(): void {\n        this.autoRevealFromActiveEditor();\n        this.toDisposeOnCurrentWidgetChanged.push(this.shell.onDidChangeCurrentWidget(() => this.autoRevealFromActiveEditor()));\n    }\n\n    protected autoRevealFromActiveEditor(): void {\n        const widget = this.shell.currentWidget;\n        if (widget && Navigatable.is(widget)) {\n            const uri = widget.getResourceUri();\n            const node = uri && this.model.getNode(uri.toString());\n            if (ExpandableTreeNode.is(node) && SelectableTreeNode.is(node)) {\n                this.model.expandNode(node);\n                this.model.selectNode(node);\n            }\n        }\n    }\n\n    storeState(): object {\n        // no-op\n        return {};\n    }\n    protected superStoreState(): object {\n        return super.storeState();\n    }\n    restoreState(state: object): void {\n        // no-op\n    }\n    protected superRestoreState(state: object): void {\n        super.restoreState(state);\n        return;\n    }\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        super.handleClickEvent(node, event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected handleCopy(event: ClipboardEvent): void {\n        const uris = this.model.selectedNodes.filter(MarkerNode.is).map(node => node.uri.toString());\n        if (uris.length > 0 && event.clipboardData) {\n            event.clipboardData.setData('text/plain', uris.join('\\n'));\n            event.preventDefault();\n        }\n    }\n\n    protected handleDown(event: KeyboardEvent): void {\n        const node = this.model.getNextSelectableNode();\n        super.handleDown(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected handleUp(event: KeyboardEvent): void {\n        const node = this.model.getPrevSelectableNode();\n        super.handleUp(event);\n        if (MarkerNode.is(node)) {\n            this.model.revealNode(node);\n        }\n    }\n\n    protected renderTree(model: TreeModel): React.ReactNode {\n        if (MarkerRootNode.is(model.root) && model.root.children.length > 0) {\n            return super.renderTree(model);\n        }\n        return <div className='theia-widget-noInfo noMarkers'>No problems have been detected in the workspace so far.</div>;\n    }\n\n    protected renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (MarkerInfoNode.is(node)) {\n            return this.decorateMarkerFileNode(node);\n        } else if (MarkerNode.is(node)) {\n            return this.decorateMarkerNode(node);\n        }\n        return 'caption';\n    }\n\n    protected renderTailDecorations(node: TreeNode, props: NodeProps): JSX.Element {\n        return <div className='row-button-container'>\n            {this.renderRemoveButton(node)}\n        </div>;\n    }\n\n    protected renderRemoveButton(node: TreeNode): React.ReactNode {\n        return <ProblemMarkerRemoveButton model={this.model} node={node} />;\n    }\n\n    protected decorateMarkerNode(node: MarkerNode): React.ReactNode {\n        if (ProblemMarker.is(node.marker)) {\n            let severityClass: string = '';\n            const problemMarker = node.marker;\n            if (problemMarker.data.severity) {\n                severityClass = this.getSeverityClass(problemMarker.data.severity);\n            }\n            return <div\n                className='markerNode'\n                title={`${problemMarker.data.message} (${problemMarker.data.range.start.line + 1}, ${problemMarker.data.range.start.character + 1})`}>\n                <div>\n                    <i className={`${severityClass} ${TREE_NODE_INFO_CLASS}`}></i>\n                </div>\n                <div className='message'>{problemMarker.data.message}\n                    <span className={'owner ' + TREE_NODE_INFO_CLASS}>\n                        {(problemMarker.data.source || problemMarker.owner)}\n                        {problemMarker.data.code ? `(${problemMarker.data.code})` : ''}\n                    </span>\n                    <span className={'position ' + TREE_NODE_INFO_CLASS}>\n                        {'[' + (problemMarker.data.range.start.line + 1) + ', ' + (problemMarker.data.range.start.character + 1) + ']'}\n                    </span>\n                </div>\n            </div>;\n        }\n        return '';\n    }\n\n    protected getSeverityClass(severity: DiagnosticSeverity): string {\n        switch (severity) {\n            case 1: return `${codicon('error')} error`;\n            case 2: return `${codicon('warning')} warning`;\n            case 3: return `${codicon('info')} information`;\n            default: return `${codicon('thumbsup')} hint`;\n        }\n    }\n\n    protected decorateMarkerFileNode(node: MarkerInfoNode): React.ReactNode {\n        const icon = this.toNodeIcon(node);\n        const name = this.toNodeName(node);\n        const description = this.toNodeDescription(node);\n        // Use a custom scheme so that we fallback to the `DefaultUriLabelProviderContribution`.\n        const path = this.labelProvider.getLongName(node.uri.withScheme('marker'));\n        return <div title={path} className='markerFileNode'>\n            {icon && <div className={icon + ' file-icon'}></div>}\n            <div className='name'>{name}</div>\n            <div className={'path ' + TREE_NODE_INFO_CLASS}>{description}</div>\n            <div className='notification-count-container'>\n                <span className='notification-count'>{node.numberOfMarkers.toString()}</span>\n            </div>\n        </div>;\n    }\n\n}\n\nexport class ProblemMarkerRemoveButton extends React.Component<{ model: ProblemTreeModel, node: TreeNode }> {\n\n    render(): React.ReactNode {\n        return <span className={codicon('close')} onClick={this.remove}></span>;\n    }\n\n    protected readonly remove = (e: React.MouseEvent<HTMLElement>) => this.doRemove(e);\n    protected doRemove(e: React.MouseEvent<HTMLElement>): void {\n        this.props.model.removeNode(this.props.node);\n        e.stopPropagation();\n    }\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/index.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}