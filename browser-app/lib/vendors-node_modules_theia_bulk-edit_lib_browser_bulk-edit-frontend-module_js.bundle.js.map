{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/style/bulk-edit.css","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-commands.ts","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-contribution.ts","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-frontend-module.ts","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-tree-label-provider.ts","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-tree/bulk-edit-node-selection.ts","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-tree/bulk-edit-tree-container.ts","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-tree/bulk-edit-tree-model.ts","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-tree/bulk-edit-tree-widget.tsx","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-tree/bulk-edit-tree.ts","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/bulk-edit-tree/index.ts","webpack://browser-app/../node_modules/@theia/monaco/src/browser/monaco-bulk-edit-service.ts","webpack://browser-app/../node_modules/@theia/workspace/src/browser/index.ts","webpack://browser-app/../node_modules/@theia/bulk-edit/src/browser/style/bulk-edit.css?ab63"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_bulk-edit_lib_browser_bulk-edit-frontend-module_js.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-bulk-edit-container {\\n  font-size: var(--theia-ui-font-size1);\\n}\\n\\n.theia-bulk-edit-container .bulkEditNode,\\n.theia-bulk-edit-container .bulkEditInfoNode {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.theia-bulk-edit-container .bulkEditNode,\\n.theia-bulk-edit-container .bulkEditInfoNode {\\n  width: calc(100% - 32px);\\n}\\n\\n.theia-bulk-edit-container .bulkEditNode div,\\n.theia-bulk-edit-container .bulkEditInfoNode div {\\n  margin-right: 5px;\\n}\\n\\n.theia-bulk-edit-container .bulkEditInfoNode .name,\\n.theia-bulk-edit-container .bulkEditInfoNode .path {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.theia-bulk-edit-container .bulkEditInfoNode .path {\\n  font-size: var(--theia-ui-font-size0);\\n  color: var(--theia-descriptionForeground);\\n  align-self: flex-end;\\n  white-space: nowrap;\\n}\\n\\n.theia-bulk-edit-container .bulkEditNode .message {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.theia-bulk-edit-container .bulkEditNode .message .replaced-text {\\n  text-decoration: line-through;\\n  background: var(--theia-diffEditor-removedTextBackground);\\n  border-color: var(--theia-diffEditor-removedTextBorder);\\n}\\n\\n.theia-bulk-edit-container .bulkEditNode .message .inserted-text {\\n  background: var(--theia-diffEditor-insertedTextBackground);\\n  border: 1p solid var(--theia-diffEditor-insertedTextBorder);\\n}\\n\", \"\"]);\n\n// exports\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Command } from '@theia/core/lib/common';\n\nexport namespace BulkEditCommands {\n    export const TOGGLE_VIEW: Command = {\n        id: 'bulk-edit:toggleView'\n    };\n\n    export const APPLY: Command = {\n        id: 'bulk-edit:apply',\n        iconClass: 'codicon codicon-check'\n    };\n\n    export const DISCARD: Command = {\n        id: 'bulk-edit:discard',\n        iconClass: 'clear-all'\n    };\n}\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { Widget } from '@theia/core/lib/browser/widgets/widget';\nimport { CommandRegistry } from '@theia/core/lib/common';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { BulkEditCommands } from './bulk-edit-commands';\nimport { MonacoBulkEditService } from '@theia/monaco/lib/browser/monaco-bulk-edit-service';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { BulkEditTreeWidget, BULK_EDIT_TREE_WIDGET_ID } from './bulk-edit-tree';\nimport { QuickViewService } from '@theia/core/lib/browser/quick-view-service';\n\nexport const BULK_EDIT_WIDGET_NAME = 'Refactor Preview';\n\n@injectable()\nexport class BulkEditContribution extends AbstractViewContribution<BulkEditTreeWidget> implements TabBarToolbarContribution {\n    private workspaceEdit: monaco.languages.WorkspaceEdit;\n\n    @inject(QuickViewService)\n    protected readonly quickView: QuickViewService;\n\n    constructor(private readonly bulkEditService: MonacoBulkEditService) {\n        super({\n            widgetId: BULK_EDIT_TREE_WIDGET_ID,\n            widgetName: BULK_EDIT_WIDGET_NAME,\n            defaultWidgetOptions: {\n                area: 'bottom'\n            }\n        });\n        this.bulkEditService.setPreviewHandler((edits: monaco.languages.WorkspaceEdit) => this.previewEdit(edits));\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        this.quickView.hideItem(BULK_EDIT_WIDGET_NAME);\n\n        registry.registerCommand(BulkEditCommands.APPLY, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.apply())\n        });\n        registry.registerCommand(BulkEditCommands.DISCARD, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.discard())\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: BulkEditCommands.APPLY.id,\n            command: BulkEditCommands.APPLY.id,\n            tooltip: 'Apply Refactoring',\n            priority: 0,\n        });\n        toolbarRegistry.registerItem({\n            id: BulkEditCommands.DISCARD.id,\n            command: BulkEditCommands.DISCARD.id,\n            tooltip: 'Discard Refactoring',\n            priority: 1,\n        });\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (bulkEdit: BulkEditTreeWidget) => T): T | false {\n        if (widget instanceof BulkEditTreeWidget) {\n            return cb(widget);\n        }\n        return false;\n    }\n\n    private async previewEdit(workspaceEdit: monaco.languages.WorkspaceEdit): Promise<monaco.languages.WorkspaceEdit> {\n        const widget = await this.openView({ activate: true });\n\n        if (widget) {\n            this.workspaceEdit = workspaceEdit;\n            await widget.initModel(workspaceEdit);\n        }\n\n        return workspaceEdit;\n    }\n\n    private apply(): void {\n        if (this.workspaceEdit?.edits) {\n            this.workspaceEdit.edits.forEach(edit => {\n                if (edit.metadata) {\n                    edit.metadata.needsConfirmation = false;\n                }\n            });\n            this.bulkEditService.apply(this.workspaceEdit);\n        }\n        this.closeView();\n    }\n\n    private discard(): void {\n        if (this.workspaceEdit) {\n            this.workspaceEdit.edits = [];\n        }\n        this.closeView();\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { WidgetFactory } from '@theia/core/lib/browser/widget-manager';\nimport { BulkEditTreeWidget, BULK_EDIT_TREE_WIDGET_ID, createBulkEditTreeWidget } from './bulk-edit-tree';\nimport { FrontendApplicationContribution, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { bindViewContribution } from '@theia/core/lib/browser';\nimport { BulkEditContribution } from './bulk-edit-contribution';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { BulkEditTreeLabelProvider } from './bulk-edit-tree-label-provider';\nimport '../../src/browser/style/bulk-edit.css';\n\nexport default new ContainerModule(bind => {\n    bind(BulkEditTreeWidget).toDynamicValue(ctx =>\n        createBulkEditTreeWidget(ctx.container)\n    );\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: BULK_EDIT_TREE_WIDGET_ID,\n        createWidget: () => context.container.get(BulkEditTreeWidget)\n    }));\n    bindViewContribution(bind, BulkEditContribution);\n    bind(FrontendApplicationContribution).toService(BulkEditContribution);\n    bind(TabBarToolbarContribution).toService(BulkEditContribution);\n\n    bind(BulkEditTreeLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(BulkEditTreeLabelProvider);\n});\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { LabelProvider, LabelProviderContribution, DidChangeLabelEvent } from '@theia/core/lib/browser/label-provider';\nimport { BulkEditInfoNode } from './bulk-edit-tree';\nimport { TreeLabelProvider } from '@theia/core/lib/browser/tree/tree-label-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n@injectable()\nexport class BulkEditTreeLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(TreeLabelProvider)\n    protected readonly treeLabelProvider: TreeLabelProvider;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    canHandle(element: object): number {\n        return BulkEditInfoNode.is(element) ?\n            this.treeLabelProvider.canHandle(element) + 1 :\n            0;\n    }\n\n    getIcon(node: BulkEditInfoNode): string {\n        return this.labelProvider.getIcon(node.uri);\n    }\n\n    getName(node: BulkEditInfoNode): string {\n        return this.labelProvider.getName(node.uri);\n    }\n\n    getLongName(node: BulkEditInfoNode): string {\n        const description: string[] = [];\n        const rootUri = this.workspaceService.getWorkspaceRootUri(node.uri);\n        // In a multiple-root workspace include the root name to the label before the parent directory.\n        if (this.workspaceService.isMultiRootWorkspaceOpened && rootUri) {\n            description.push(this.labelProvider.getName(rootUri));\n        }\n        // If the given resource is not at the workspace root, include the parent directory to the label.\n        if (rootUri?.toString() !== node.uri.parent.toString()) {\n            description.push(this.labelProvider.getLongName(node.uri.parent));\n        }\n        return description.join(' ● ');\n    }\n\n    getDescription(node: BulkEditInfoNode): string {\n        return this.labelProvider.getLongName(node.uri.parent);\n    }\n\n    affects(node: BulkEditInfoNode, event: DidChangeLabelEvent): boolean {\n        return event.affects(node.uri) || event.affects(node.uri.parent);\n    }\n\n}\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\n\nexport interface BulkEditNodeSelection {\n    bulkEdit: monaco.languages.WorkspaceTextEdit | monaco.languages.WorkspaceFileEdit;\n}\nexport namespace BulkEditNodeSelection {\n    export function is(arg: Object | undefined): arg is BulkEditNodeSelection {\n        return typeof arg === 'object' && ('bulkEdit' in arg);\n    }\n\n    export class CommandHandler extends SelectionCommandHandler<BulkEditNodeSelection> {\n\n        constructor(\n            protected readonly selectionService: SelectionService,\n            protected readonly options: SelectionCommandHandler.Options<BulkEditNodeSelection>\n        ) {\n            super(\n                selectionService,\n                arg => BulkEditNodeSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { BulkEditTreeWidget } from './bulk-edit-tree-widget';\nimport { BulkEditTree } from './bulk-edit-tree';\nimport { BulkEditTreeModel } from './bulk-edit-tree-model';\nimport { TreeWidget, TreeProps, defaultTreeProps, TreeModel, createTreeContainer, TreeModelImpl, TreeImpl, Tree } from '@theia/core/lib/browser';\n\nexport function createBulkEditContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n\n    child.unbind(TreeImpl);\n    child.bind(BulkEditTree).toSelf();\n    child.rebind(Tree).toService(BulkEditTree);\n\n    child.unbind(TreeWidget);\n    child.bind(BulkEditTreeWidget).toSelf();\n\n    child.unbind(TreeModelImpl);\n    child.bind(BulkEditTreeModel).toSelf();\n    child.rebind(TreeModel).toService(BulkEditTreeModel);\n    child.rebind(TreeProps).toConstantValue(defaultTreeProps);\n\n    return child;\n}\n\nexport function createBulkEditTreeWidget(parent: interfaces.Container): BulkEditTreeWidget {\n    return createBulkEditContainer(parent).get(BulkEditTreeWidget);\n}\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { BulkEditNode, BulkEditTree } from './bulk-edit-tree';\nimport { TreeModelImpl, OpenerService, open, TreeNode } from '@theia/core/lib/browser';\n\n@injectable()\nexport class BulkEditTreeModel extends TreeModelImpl {\n    @inject(BulkEditTree) protected readonly tree: BulkEditTree;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n\n    protected doOpenNode(node: TreeNode): void {\n        if (BulkEditNode.is(node)) {\n            open(this.openerService, node.uri, undefined);\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    revealNode(node: TreeNode): void {\n        this.doOpenNode(node);\n    }\n\n    async initModel(workspaceEdit: monaco.languages.WorkspaceEdit, fileContents: Map<string, string>): Promise<void> {\n        this.tree.initTree(workspaceEdit, fileContents);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport {\n    TreeWidget, TreeProps, ContextMenuRenderer, TreeNode, TreeModel,\n    CompositeTreeNode, NodeProps\n} from '@theia/core/lib/browser';\nimport * as React from '@theia/core/shared/react';\nimport { BulkEditInfoNode, BulkEditNode } from './bulk-edit-tree';\nimport { BulkEditTreeModel } from './bulk-edit-tree-model';\nimport { FileResourceResolver } from '@theia/filesystem/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorWidget, EditorManager, EditorOpenerOptions } from '@theia/editor/lib/browser';\nimport { DiffUris } from '@theia/core/lib/browser';\nimport { MEMORY_TEXT } from '@theia/core/lib/common';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { QuickViewService } from '@theia/core/lib/browser/quick-view-service';\n\nexport const BULK_EDIT_TREE_WIDGET_ID = 'bulkedit';\nexport const BULK_EDIT_WIDGET_NAME = 'Refactor Preview';\n\n@injectable()\nexport class BulkEditTreeWidget extends TreeWidget {\n    private editorWidgets: EditorWidget[] = [];\n\n    @inject(FileResourceResolver)\n    protected readonly fileResourceResolver: FileResourceResolver;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(QuickViewService)\n    protected readonly quickView: QuickViewService;\n\n    constructor(\n        @inject(TreeProps) readonly treeProps: TreeProps,\n        @inject(BulkEditTreeModel) readonly model: BulkEditTreeModel,\n        @inject(ContextMenuRenderer) readonly contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(treeProps, model, contextMenuRenderer);\n\n        this.id = BULK_EDIT_TREE_WIDGET_ID;\n        this.title.label = BULK_EDIT_WIDGET_NAME;\n        this.title.caption = BULK_EDIT_WIDGET_NAME;\n        this.title.closable = true;\n        this.addClass('theia-bulk-edit-container');\n\n        this.toDispose.push(Disposable.create(() => {\n            this.disposeEditors();\n        }));\n    }\n\n    async initModel(workspaceEdit: monaco.languages.WorkspaceEdit): Promise<void> {\n        await this.model.initModel(workspaceEdit, await this.getFileContentsMap(workspaceEdit));\n        this.quickView.showItem(BULK_EDIT_WIDGET_NAME);\n    }\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        super.handleClickEvent(node, event);\n        if (BulkEditNode.is(node)) {\n            this.doOpen(node);\n        }\n    }\n\n    protected handleDown(event: KeyboardEvent): void {\n        const node = this.model.getNextSelectableNode();\n        super.handleDown(event);\n        if (BulkEditNode.is(node)) {\n            this.doOpen(node);\n        }\n    }\n\n    protected handleUp(event: KeyboardEvent): void {\n        const node = this.model.getPrevSelectableNode();\n        super.handleUp(event);\n        if (BulkEditNode.is(node)) {\n            this.doOpen(node);\n        }\n    }\n\n    protected renderTree(model: TreeModel): React.ReactNode {\n        if (CompositeTreeNode.is(model.root) && model.root.children.length > 0) {\n            return super.renderTree(model);\n        }\n        return <div className='theia-widget-noInfo noEdits'>No edits have been detected in the workspace so far.</div>;\n    }\n\n    protected renderCaption(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (BulkEditInfoNode.is(node)) {\n            return this.decorateBulkEditInfoNode(node);\n        } else if (BulkEditNode.is(node)) {\n            return this.decorateBulkEditNode(node);\n        }\n        return 'caption';\n    }\n\n    protected decorateBulkEditNode(node: BulkEditNode): React.ReactNode {\n        if (node?.parent && node?.bulkEdit && ('edit' in node?.bulkEdit)) {\n            const bulkEdit = node.bulkEdit;\n            const parent = node.parent as BulkEditInfoNode;\n\n            if (parent?.fileContents) {\n                const lines = parent.fileContents.split('\\n');\n                const startLineNum = +bulkEdit.edit.range.startLineNumber;\n\n                if (lines.length > startLineNum) {\n                    const startColumn = +bulkEdit.edit.range.startColumn;\n                    const endColumn = +bulkEdit.edit.range.endColumn;\n                    const lineText = lines[startLineNum - 1];\n                    const beforeMatch = (startColumn > 26 ? '... ' : '') + lineText.substr(0, startColumn - 1).substr(-25);\n                    const replacedText = lineText.substring(startColumn - 1, endColumn - 1);\n                    const afterMatch = lineText.substr(startColumn - 1 + replacedText.length, 75);\n\n                    return <div className='bulkEditNode'>\n                        <div className='message'>\n                            {beforeMatch}\n                            <span className=\"replaced-text\">{replacedText}</span>\n                            <span className=\"inserted-text\">{bulkEdit.edit.text}</span>\n                            {afterMatch}\n                        </div>\n                    </div>;\n                }\n            }\n        }\n    }\n\n    protected decorateBulkEditInfoNode(node: BulkEditInfoNode): React.ReactNode {\n        const icon = this.toNodeIcon(node);\n        const name = this.toNodeName(node);\n        const description = this.toNodeDescription(node);\n        const path = this.labelProvider.getLongName(node.uri.withScheme('bulkedit'));\n        return <div title={path} className='bulkEditInfoNode'>\n            {icon && <div className={icon + ' file-icon'}></div>}\n            <div className='name'>{name}</div>\n            <div className='path'>{description}</div>\n        </div>;\n    }\n\n    private async getFileContentsMap(workspaceEdit: monaco.languages.WorkspaceEdit): Promise<Map<string, string>> {\n        const fileContentMap = new Map<string, string>();\n\n        if (workspaceEdit?.edits) {\n            for (const element of workspaceEdit.edits) {\n                if (element) {\n                    const filePath = (('newUri' in element) && element?.newUri?.path) || (('resource' in element) && element?.resource?.path);\n\n                    if (filePath && !fileContentMap.has(filePath)) {\n                        const fileUri = new URI(filePath).withScheme('file');\n                        const resource = await this.fileResourceResolver.resolve(fileUri);\n                        fileContentMap.set(filePath, await resource.readContents());\n                    }\n                }\n            }\n        }\n        return fileContentMap;\n    }\n\n    private async doOpen(node: BulkEditNode): Promise<void> {\n        if (node && node.parent && node.bulkEdit && ('edit' in node.bulkEdit)) {\n            const resultNode = node.parent as BulkEditInfoNode;\n            const leftUri = node.uri;\n            const rightUri = await this.createReplacePreview(resultNode);\n            const diffUri = DiffUris.encode(leftUri, rightUri);\n            const editorWidget = await this.editorManager.open(diffUri, this.getEditorOptions(node));\n            this.editorWidgets.push(editorWidget);\n        }\n    }\n\n    private async createReplacePreview(bulkEditInfoNode: BulkEditInfoNode): Promise<URI> {\n        const fileUri = bulkEditInfoNode.uri;\n        let lines: string[] = [];\n        if (bulkEditInfoNode?.fileContents) {\n            lines = bulkEditInfoNode.fileContents.split('\\n');\n            bulkEditInfoNode.children.map((node: BulkEditNode) => {\n                if (node.bulkEdit && ('edit' in node.bulkEdit)) {\n                    const startLineNum = node.bulkEdit.edit.range.startLineNumber;\n                    if (lines.length > startLineNum) {\n                        const startColumn = node.bulkEdit.edit.range.startColumn;\n                        const endColumn = node.bulkEdit.edit.range.endColumn;\n                        const lineText = lines[startLineNum - 1];\n                        const beforeMatch = lineText.substr(0, startColumn - 1);\n                        const replacedText = lineText.substring(startColumn - 1, endColumn - 1);\n                        const afterMatch = lineText.substr(startColumn - 1 + replacedText.length);\n                        lines[startLineNum - 1] = beforeMatch + node.bulkEdit.edit.text + afterMatch;\n                    }\n                }\n            });\n        }\n\n        return fileUri.withScheme(MEMORY_TEXT).withQuery(lines.join('\\n'));\n    }\n\n    private getEditorOptions(node: BulkEditNode): EditorOpenerOptions {\n        let options = {};\n        if (('edit' in node.bulkEdit) && node?.bulkEdit?.edit?.range) {\n            options = {\n                selection: {\n                    start: {\n                        line: node.bulkEdit.edit.range.startLineNumber - 1,\n                        character: node.bulkEdit.edit.range.startColumn - 1\n                    },\n                    end: {\n                        line: node.bulkEdit.edit.range.endLineNumber - 1,\n                        character: node.bulkEdit.edit.range.endColumn - 1\n                    }\n                }\n            };\n        }\n        return options;\n    }\n\n    private disposeEditors(): void {\n        this.editorWidgets.forEach(w => w.dispose());\n        this.quickView.hideItem(BULK_EDIT_WIDGET_NAME);\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { TreeNode, CompositeTreeNode, SelectableTreeNode, ExpandableTreeNode, TreeImpl } from '@theia/core/lib/browser';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport { BulkEditNodeSelection } from './bulk-edit-node-selection';\nimport URI from '@theia/core/lib/common/uri';\nimport { WorkspaceFileEdit, WorkspaceTextEdit } from '@theia/monaco/lib/browser/monaco-workspace';\n\n@injectable()\nexport class BulkEditTree extends TreeImpl {\n    public async initTree(workspaceEdit: monaco.languages.WorkspaceEdit, fileContents: Map<string, string>): Promise<void> {\n        this.root = <CompositeTreeNode>{\n            visible: false,\n            id: 'theia-bulk-edit-tree-widget',\n            name: 'BulkEditTree',\n            children: this.getChildren(workspaceEdit, fileContents),\n            parent: undefined\n        };\n    }\n\n    private getChildren(workspaceEdit: monaco.languages.WorkspaceEdit, fileContentsMap: Map<string, string>): BulkEditInfoNode[] {\n        let bulkEditInfos: BulkEditInfoNode[] = [];\n        if (workspaceEdit.edits) {\n            bulkEditInfos = workspaceEdit.edits\n                .map(edit => this.getResourcePath(edit))\n                .filter((path, index, arr) => path && arr.indexOf(path) === index)\n                .map((path: string) => this.createBulkEditInfo(path, new URI(path), fileContentsMap.get(path)))\n                .filter(Boolean);\n\n            if (bulkEditInfos.length > 0) {\n                bulkEditInfos.forEach(editInfo => {\n                    editInfo.children = workspaceEdit.edits.filter(edit => ((('resource' in edit) && edit?.resource?.path === editInfo.id)) ||\n                        (('newUri' in edit) && edit?.newUri?.path === editInfo.id))\n                        .map((edit, index) => this.createBulkEditNode(edit, index, editInfo));\n                });\n            }\n        }\n        return bulkEditInfos;\n    }\n\n    private createBulkEditNode(bulkEdit: monaco.languages.WorkspaceTextEdit | monaco.languages.WorkspaceFileEdit, index: number, parent: BulkEditInfoNode): BulkEditNode {\n        const id = parent.id + '_' + index;\n        const existing = this.getNode(id);\n        if (BulkEditNode.is(existing)) {\n            existing.bulkEdit = bulkEdit;\n            return existing;\n        }\n        return {\n            id,\n            name: 'bulkEdit',\n            parent,\n            selected: false,\n            uri: parent.uri,\n            bulkEdit\n        };\n    }\n\n    private createBulkEditInfo(id: string, uri: URI, fileContents: string | undefined): BulkEditInfoNode {\n        return {\n            id,\n            uri,\n            expanded: true,\n            selected: false,\n            parent: this.root as BulkEditInfoNode,\n            fileContents,\n            children: []\n        };\n    }\n\n    private getResourcePath(edit: monaco.languages.WorkspaceTextEdit | monaco.languages.WorkspaceFileEdit): string | undefined {\n        return WorkspaceTextEdit.is(edit) ? edit.resource.path : WorkspaceFileEdit.is(edit) && edit.newUri ? edit.newUri.path : undefined;\n    }\n}\n\nexport interface BulkEditNode extends UriSelection, SelectableTreeNode {\n    parent: CompositeTreeNode;\n    bulkEdit: monaco.languages.WorkspaceTextEdit | monaco.languages.WorkspaceFileEdit;\n}\nexport namespace BulkEditNode {\n    export function is(node: TreeNode | undefined): node is BulkEditNode {\n        return UriSelection.is(node) && SelectableTreeNode.is(node) && BulkEditNodeSelection.is(node);\n    }\n}\n\nexport interface BulkEditInfoNode extends UriSelection, SelectableTreeNode, ExpandableTreeNode {\n    parent: CompositeTreeNode;\n    fileContents?: string;\n}\nexport namespace BulkEditInfoNode {\n    export function is(node: Object | undefined): node is BulkEditInfoNode {\n        return ExpandableTreeNode.is(node) && UriSelection.is(node) && 'fileContents' in node;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './bulk-edit-tree';\nexport * from './bulk-edit-tree-model';\nexport * from './bulk-edit-node-selection';\nexport * from './bulk-edit-tree-widget';\nexport * from './bulk-edit-tree-container';\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { MonacoWorkspace } from './monaco-workspace';\n\n@injectable()\nexport class MonacoBulkEditService implements monaco.editor.IBulkEditService {\n\n    @inject(MonacoWorkspace)\n    protected readonly workspace: MonacoWorkspace;\n\n    private _previewHandler?: monaco.editor.IBulkEditPreviewHandler;\n\n    async apply(workspaceEdit: monaco.languages.WorkspaceEdit, options?: monaco.editor.IBulkEditOptions): Promise<monaco.editor.IBulkEditResult & { success: boolean }> {\n        if (this._previewHandler && (options?.showPreview || workspaceEdit.edits.some(value => value.metadata?.needsConfirmation))) {\n            workspaceEdit = await this._previewHandler(workspaceEdit, options);\n            return { ariaSummary: '', success: true };\n        } else {\n            return this.workspace.applyBulkEdit(workspaceEdit);\n        }\n    }\n\n    hasPreviewHandler(): boolean {\n        return Boolean(this._previewHandler);\n    }\n\n    setPreviewHandler(handler: monaco.editor.IBulkEditPreviewHandler): monaco.IDisposable {\n        this._previewHandler = handler;\n\n        const disposePreviewHandler = () => {\n            if (this._previewHandler === handler) {\n                this._previewHandler = undefined;\n            }\n        };\n\n        return {\n            dispose(): void {\n                disposePreviewHandler();\n            }\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/index.js!./bulk-edit.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}