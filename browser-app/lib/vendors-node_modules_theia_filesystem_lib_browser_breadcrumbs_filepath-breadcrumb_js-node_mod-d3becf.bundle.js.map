{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/core/src/common/selection-command-handler.ts","webpack://browser-app/../node_modules/@theia/filesystem/src/browser/breadcrumbs/filepath-breadcrumb.ts","webpack://browser-app/../node_modules/@theia/filesystem/src/browser/breadcrumbs/filepath-breadcrumbs-container.ts","webpack://browser-app/../node_modules/@theia/filesystem/src/browser/breadcrumbs/filepath-breadcrumbs-contribution.ts","webpack://browser-app/../node_modules/@theia/filesystem/src/browser/file-selection.ts","webpack://browser-app/../node_modules/@theia/filesystem/src/browser/filesystem-frontend-contribution.ts"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_filesystem_lib_browser_breadcrumbs_filepath-breadcrumb_js-node_mod-d3becf.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { CommandHandler } from './command';\nimport { SelectionService } from '../common/selection-service';\n\nexport class SelectionCommandHandler<S> implements CommandHandler {\n\n    constructor(\n        protected readonly selectionService: SelectionService,\n        protected readonly toSelection: (arg: any) => S | undefined,\n        protected readonly options: SelectionCommandHandler.Options<S>\n    ) { }\n\n    execute(...args: any[]): Object | undefined {\n        const selection = this.getSelection(...args);\n        return selection ? (this.options.execute as any)(selection, ...args) : undefined;\n    }\n\n    isVisible(...args: any[]): boolean {\n        const selection = this.getSelection(...args);\n        return !!selection && (!this.options.isVisible || (this.options.isVisible as any)(selection as any, ...args));\n    }\n\n    isEnabled(...args: any[]): boolean {\n        const selection = this.getSelection(...args);\n        return !!selection && (!this.options.isEnabled || (this.options.isEnabled as any)(selection as any, ...args));\n    }\n\n    protected isMulti(): boolean {\n        return this.options && !!this.options.multi;\n    }\n\n    protected getSelection(...args: any[]): S | S[] | undefined {\n        const givenSelection = args.length && this.toSelection(args[0]);\n        if (givenSelection) {\n            return this.isMulti() ? [givenSelection] : givenSelection;\n        }\n        const globalSelection = this.getSingleSelection(this.selectionService.selection);\n        if (this.isMulti()) {\n            return this.getMultiSelection(globalSelection);\n        }\n        return this.getSingleSelection(globalSelection);\n    }\n\n    protected getSingleSelection(arg: Object | undefined): S | undefined {\n        let selection = this.toSelection(arg);\n        if (selection) {\n            return selection;\n        }\n        if (Array.isArray(arg)) {\n            for (const element of arg) {\n                selection = this.toSelection(element);\n                if (selection) {\n                    return selection;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected getMultiSelection(arg: Object | undefined): S[] | undefined {\n        let selection = this.toSelection(arg);\n        if (selection) {\n            return [selection];\n        }\n        const result = [];\n        if (Array.isArray(arg)) {\n            for (const element of arg) {\n                selection = this.toSelection(element);\n                if (selection) {\n                    result.push(selection);\n                }\n            }\n        }\n        return result.length ? result : undefined;\n    }\n}\nexport namespace SelectionCommandHandler {\n    export type Options<S> = SelectionOptions<false, S> | SelectionOptions<true, S[]>;\n    export interface SelectionOptions<Multi extends boolean, T> {\n        multi: Multi;\n        execute(selection: T, ...args: any[]): any;\n        isEnabled?(selection: T, ...args: any[]): boolean;\n        isVisible?(selection: T, ...args: any[]): boolean;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Breadcrumb } from '@theia/core/lib/browser/breadcrumbs/breadcrumbs-constants';\nimport { FilepathBreadcrumbType } from './filepath-breadcrumbs-contribution';\n\nexport class FilepathBreadcrumb implements Breadcrumb {\n    constructor(\n        readonly uri: URI,\n        readonly label: string,\n        readonly longLabel: string,\n        readonly iconClass: string,\n        readonly containerClass: string,\n    ) { }\n\n    get id(): string {\n        return this.type.toString() + '_' + this.uri.toString();\n    }\n\n    get type(): symbol {\n        return FilepathBreadcrumbType;\n    }\n}\n\nexport namespace FilepathBreadcrumb {\n    export function is(breadcrumb: Breadcrumb): breadcrumb is FilepathBreadcrumb {\n        return 'uri' in breadcrumb;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container, interfaces, injectable, inject } from '@theia/core/shared/inversify';\nimport { TreeProps, ContextMenuRenderer, TreeNode, OpenerService, open, NodeProps, defaultTreeProps } from '@theia/core/lib/browser';\nimport { createFileTreeContainer, FileTreeWidget } from '../';\nimport { FileTreeModel, FileStatNode } from '../file-tree';\n\nconst BREADCRUMBS_FILETREE_CLASS = 'theia-FilepathBreadcrumbFileTree';\n\nexport function createFileTreeBreadcrumbsContainer(parent: interfaces.Container): Container {\n    const child = createFileTreeContainer(parent);\n    child.unbind(FileTreeWidget);\n    child.rebind(TreeProps).toConstantValue({ ...defaultTreeProps, virtualized: false });\n    child.bind(BreadcrumbsFileTreeWidget).toSelf();\n    return child;\n}\n\nexport function createFileTreeBreadcrumbsWidget(parent: interfaces.Container): BreadcrumbsFileTreeWidget {\n    return createFileTreeBreadcrumbsContainer(parent).get(BreadcrumbsFileTreeWidget);\n}\n\n@injectable()\nexport class BreadcrumbsFileTreeWidget extends FileTreeWidget {\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(FileTreeModel) readonly model: FileTreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(props, model, contextMenuRenderer);\n        this.addClass(BREADCRUMBS_FILETREE_CLASS);\n    }\n\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\n        const elementAttrs = super.createNodeAttributes(node, props);\n        return {\n            ...elementAttrs,\n            draggable: false\n        };\n    }\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        if (FileStatNode.is(node) && !node.fileStat.isDirectory) {\n            open(this.openerService, node.uri, { preview: true });\n        } else {\n            super.handleClickEvent(node, event);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Disposable, Emitter, Event } from '@theia/core';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Breadcrumb, BreadcrumbsContribution, CompositeTreeNode, LabelProvider, SelectableTreeNode, Widget } from '@theia/core/lib/browser';\nimport { FilepathBreadcrumb } from './filepath-breadcrumb';\nimport { BreadcrumbsFileTreeWidget } from './filepath-breadcrumbs-container';\nimport { DirNode } from '../file-tree';\nimport { FileService } from '../file-service';\nimport { FileStat } from '../../common/files';\n\nexport const FilepathBreadcrumbType = Symbol('FilepathBreadcrumb');\n\nexport interface FilepathBreadcrumbClassNameFactory {\n    (location: URI, index: number): string;\n}\n\n@injectable()\nexport class FilepathBreadcrumbsContribution implements BreadcrumbsContribution {\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(FileService)\n    protected readonly fileSystem: FileService;\n\n    @inject(BreadcrumbsFileTreeWidget)\n    protected readonly breadcrumbsFileTreeWidget: BreadcrumbsFileTreeWidget;\n\n    protected readonly onDidChangeBreadcrumbsEmitter = new Emitter<URI>();\n    get onDidChangeBreadcrumbs(): Event<URI> {\n        return this.onDidChangeBreadcrumbsEmitter.event;\n    }\n\n    readonly type = FilepathBreadcrumbType;\n    readonly priority: number = 100;\n\n    async computeBreadcrumbs(uri: URI): Promise<Breadcrumb[]> {\n        if (uri.scheme !== 'file') {\n            return [];\n        }\n        const getContainerClass = this.getContainerClassCreator(uri);\n        const getIconClass = this.getIconClassCreator(uri);\n        return uri.allLocations\n            .map((location, index) => {\n                const icon = getIconClass(location, index);\n                const containerClass = getContainerClass(location, index);\n                return new FilepathBreadcrumb(\n                    location,\n                    this.labelProvider.getName(location),\n                    this.labelProvider.getLongName(location),\n                    icon,\n                    containerClass,\n                );\n            })\n            .filter(b => this.filterBreadcrumbs(uri, b))\n            .reverse();\n    }\n\n    protected getContainerClassCreator(fileURI: URI): FilepathBreadcrumbClassNameFactory {\n        return (location, index) => location.isEqual(fileURI) ? 'file' : 'folder';\n    }\n\n    protected getIconClassCreator(fileURI: URI): FilepathBreadcrumbClassNameFactory {\n        return (location, index) => location.isEqual(fileURI) ? this.labelProvider.getIcon(location) + ' file-icon' : '';\n    }\n\n    protected filterBreadcrumbs(_: URI, breadcrumb: FilepathBreadcrumb): boolean {\n        return !breadcrumb.uri.path.isRoot;\n    }\n\n    async attachPopupContent(breadcrumb: Breadcrumb, parent: HTMLElement): Promise<Disposable | undefined> {\n        if (!FilepathBreadcrumb.is(breadcrumb)) {\n            return undefined;\n        }\n        const folderFileStat = await this.fileSystem.resolve(breadcrumb.uri.parent);\n        if (folderFileStat) {\n            const rootNode = await this.createRootNode(folderFileStat);\n            if (rootNode) {\n                const { model } = this.breadcrumbsFileTreeWidget;\n                await model.navigateTo({ ...rootNode, visible: false });\n                Widget.attach(this.breadcrumbsFileTreeWidget, parent);\n                const toDisposeOnTreePopulated = model.onChanged(() => {\n                    if (CompositeTreeNode.is(model.root) && model.root.children.length > 0) {\n                        toDisposeOnTreePopulated.dispose();\n                        const targetNode = model.getNode(breadcrumb.uri.path.toString());\n                        if (targetNode && SelectableTreeNode.is(targetNode)) {\n                            model.selectNode(targetNode);\n                        }\n                        this.breadcrumbsFileTreeWidget.activate();\n                    }\n                });\n                return {\n                    dispose: () => {\n                        // Clear model otherwise the next time a popup is opened the old model is rendered first\n                        // and is shown for a short time period.\n                        toDisposeOnTreePopulated.dispose();\n                        this.breadcrumbsFileTreeWidget.model.root = undefined;\n                        Widget.detach(this.breadcrumbsFileTreeWidget);\n                    }\n                };\n            }\n        }\n    }\n\n    protected async createRootNode(folderToOpen: FileStat): Promise<DirNode | undefined> {\n        const folderUri = folderToOpen.resource;\n        const rootUri = folderToOpen.isDirectory ? folderUri : folderUri.parent;\n        const rootStat = await this.fileSystem.resolve(rootUri);\n        if (rootStat) {\n            return DirNode.createRoot(rootStat);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { SelectionCommandHandler } from '@theia/core/lib/common/selection-command-handler';\nimport { FileStat } from '../common/files';\n\nexport interface FileSelection {\n    fileStat: FileStat\n}\nexport namespace FileSelection {\n    export function is(arg: Object | undefined): arg is FileSelection {\n        return typeof arg === 'object' && ('fileStat' in arg) && FileStat.is(arg['fileStat']);\n    }\n    export class CommandHandler extends SelectionCommandHandler<FileSelection> {\n\n        constructor(\n            protected readonly selectionService: SelectionService,\n            protected readonly options: SelectionCommandHandler.Options<FileSelection>\n        ) {\n            super(\n                selectionService,\n                arg => FileSelection.is(arg) ? arg : undefined,\n                options\n            );\n        }\n\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { environment } from '@theia/core/shared/@theia/application-package/lib/environment';\nimport { MaybePromise, SelectionService, isCancelled } from '@theia/core/lib/common';\nimport { Command, CommandContribution, CommandRegistry } from '@theia/core/lib/common/command';\nimport {\n    FrontendApplicationContribution, ApplicationShell,\n    NavigatableWidget, NavigatableWidgetOptions,\n    Saveable, WidgetManager, StatefulWidget, FrontendApplication, ExpandableTreeNode, waitForClosed,\n    CorePreferences\n} from '@theia/core/lib/browser';\nimport { MimeService } from '@theia/core/lib/browser/mime-service';\nimport { TreeWidgetSelection } from '@theia/core/lib/browser/tree/tree-widget-selection';\nimport { FileSystemPreferences } from './filesystem-preferences';\nimport { FileSelection } from './file-selection';\nimport { FileUploadService, FileUploadResult } from './file-upload-service';\nimport { FileService, UserFileOperationEvent } from './file-service';\nimport { FileChangesEvent, FileChangeType, FileOperation } from '../common/files';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\n\nexport namespace FileSystemCommands {\n\n    export const UPLOAD: Command = {\n        id: 'file.upload',\n        category: 'File',\n        label: 'Upload Files...'\n    };\n\n}\n\nexport interface NavigatableWidgetMoveSnapshot {\n    dirty?: object,\n    view?: object\n}\n\n@injectable()\nexport class FileSystemFrontendContribution implements FrontendApplicationContribution, CommandContribution {\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(WidgetManager)\n    protected readonly widgetManager: WidgetManager;\n\n    @inject(MimeService)\n    protected readonly mimeService: MimeService;\n\n    @inject(FileSystemPreferences)\n    protected readonly preferences: FileSystemPreferences;\n\n    @inject(CorePreferences)\n    protected readonly corePreferences: CorePreferences;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    @inject(FileUploadService)\n    protected readonly uploadService: FileUploadService;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    protected readonly userOperations = new Map<number, Deferred<void>>();\n    protected queueUserOperation(event: UserFileOperationEvent): void {\n        const moveOperation = new Deferred<void>();\n        this.userOperations.set(event.correlationId, moveOperation);\n        this.run(() => moveOperation.promise);\n    }\n    protected resolveUserOperation(event: UserFileOperationEvent): void {\n        const operation = this.userOperations.get(event.correlationId);\n        if (operation) {\n            this.userOperations.delete(event.correlationId);\n            operation.resolve();\n        }\n    }\n\n    initialize(): void {\n        this.fileService.onDidFilesChange(event => this.run(() => this.updateWidgets(event)));\n        this.fileService.onWillRunUserOperation(event => {\n            this.queueUserOperation(event);\n            event.waitUntil(this.runEach((uri, widget) => this.pushMove(uri, widget, event)));\n        });\n        this.fileService.onDidFailUserOperation(event => event.waitUntil((async () => {\n            await this.runEach((uri, widget) => this.revertMove(uri, widget, event));\n            this.resolveUserOperation(event);\n        })()));\n        this.fileService.onDidRunUserOperation(event => event.waitUntil((async () => {\n            await this.runEach((uri, widget) => this.applyMove(uri, widget, event));\n            this.resolveUserOperation(event);\n        })()));\n    }\n\n    onStart?(app: FrontendApplication): MaybePromise<void> {\n        this.updateAssociations();\n        this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'files.associations') {\n                this.updateAssociations();\n            }\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(FileSystemCommands.UPLOAD, new FileSelection.CommandHandler(this.selectionService, {\n            multi: false,\n            isEnabled: selection => this.canUpload(selection),\n            isVisible: selection => this.canUpload(selection),\n            execute: selection => this.upload(selection)\n        }));\n    }\n\n    protected canUpload({ fileStat }: FileSelection): boolean {\n        return !environment.electron.is() && fileStat.isDirectory;\n    }\n\n    protected async upload(selection: FileSelection): Promise<FileUploadResult | undefined> {\n        try {\n            const source = TreeWidgetSelection.getSource(this.selectionService.selection);\n            const fileUploadResult = await this.uploadService.upload(selection.fileStat.resource);\n            if (ExpandableTreeNode.is(selection) && source) {\n                await source.model.expandNode(selection);\n            }\n            return fileUploadResult;\n        } catch (e) {\n            if (!isCancelled(e)) {\n                console.error(e);\n            }\n        }\n    }\n\n    protected pendingOperation = Promise.resolve();\n    protected run(operation: () => MaybePromise<void>): Promise<void> {\n        return this.pendingOperation = this.pendingOperation.then(async () => {\n            try {\n                await operation();\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    protected async runEach(participant: (resourceUri: URI, widget: NavigatableWidget) => Promise<void>): Promise<void> {\n        const promises: Promise<void>[] = [];\n        for (const [resourceUri, widget] of NavigatableWidget.get(this.shell.widgets)) {\n            promises.push(participant(resourceUri, widget));\n        }\n        await Promise.all(promises);\n    }\n\n    protected readonly moveSnapshots = new Map<string, NavigatableWidgetMoveSnapshot>();\n\n    protected popMoveSnapshot(resourceUri: URI): NavigatableWidgetMoveSnapshot | undefined {\n        const snapshotKey = resourceUri.toString();\n        const snapshot = this.moveSnapshots.get(snapshotKey);\n        if (snapshot) {\n            this.moveSnapshots.delete(snapshotKey);\n        }\n        return snapshot;\n    }\n\n    protected applyMoveSnapshot(widget: NavigatableWidget, snapshot: NavigatableWidgetMoveSnapshot | undefined): void {\n        if (!snapshot) {\n            return undefined;\n        }\n        if (snapshot.dirty) {\n            const saveable = Saveable.get(widget);\n            if (saveable && saveable.applySnapshot) {\n                saveable.applySnapshot(snapshot.dirty);\n            }\n        }\n        if (snapshot.view && StatefulWidget.is(widget)) {\n            widget.restoreState(snapshot.view);\n        }\n    }\n\n    protected async pushMove(resourceUri: URI, widget: NavigatableWidget, event: UserFileOperationEvent): Promise<void> {\n        const newResourceUri = this.createMoveToUri(resourceUri, widget, event);\n        if (!newResourceUri) {\n            return;\n        }\n        const snapshot: NavigatableWidgetMoveSnapshot = {};\n        const saveable = Saveable.get(widget);\n        if (StatefulWidget.is(widget)) {\n            snapshot.view = widget.storeState();\n        }\n        if (saveable && saveable.dirty) {\n            if (saveable.createSnapshot) {\n                snapshot.dirty = saveable.createSnapshot();\n            }\n            if (saveable.revert) {\n                await saveable.revert({ soft: true });\n            }\n        }\n        this.moveSnapshots.set(newResourceUri.toString(), snapshot);\n    }\n\n    protected async revertMove(resourceUri: URI, widget: NavigatableWidget, event: UserFileOperationEvent): Promise<void> {\n        const newResourceUri = this.createMoveToUri(resourceUri, widget, event);\n        if (!newResourceUri) {\n            return;\n        }\n        const snapshot = this.popMoveSnapshot(newResourceUri);\n        this.applyMoveSnapshot(widget, snapshot);\n    }\n\n    protected async applyMove(resourceUri: URI, widget: NavigatableWidget, event: UserFileOperationEvent): Promise<void> {\n        const newResourceUri = this.createMoveToUri(resourceUri, widget, event);\n        if (!newResourceUri) {\n            return;\n        }\n\n        const snapshot = this.popMoveSnapshot(newResourceUri);\n\n        const description = this.widgetManager.getDescription(widget);\n        if (!description) {\n            return;\n        }\n        const { factoryId, options } = description;\n        if (!NavigatableWidgetOptions.is(options)) {\n            return;\n        }\n\n        const newWidget = await this.widgetManager.getOrCreateWidget<NavigatableWidget>(factoryId, <NavigatableWidgetOptions>{\n            ...options,\n            uri: newResourceUri.toString()\n        });\n        this.applyMoveSnapshot(newWidget, snapshot);\n        const area = this.shell.getAreaFor(widget) || 'main';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const pending: Promise<any>[] = [this.shell.addWidget(newWidget, {\n            area, ref: widget\n        })];\n        if (this.shell.activeWidget === widget) {\n            pending.push(this.shell.activateWidget(newWidget.id));\n        } else if (widget.isVisible) {\n            pending.push(this.shell.revealWidget(newWidget.id));\n        }\n        pending.push(this.shell.closeWidget(widget.id, { save: false }));\n        await Promise.all(pending);\n    }\n\n    protected createMoveToUri(resourceUri: URI, widget: NavigatableWidget, event: UserFileOperationEvent): URI | undefined {\n        if (event.operation !== FileOperation.MOVE) {\n            return undefined;\n        }\n        const path = event.source?.relative(resourceUri);\n        const targetUri = path && event.target.resolve(path);\n        return targetUri && widget.createMoveToUri(targetUri);\n    }\n\n    protected readonly deletedSuffix = ' (deleted)';\n    protected async updateWidgets(event: FileChangesEvent): Promise<void> {\n        if (!event.gotDeleted() && !event.gotAdded()) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const pending: Promise<any>[] = [];\n\n        const dirty = new Set<string>();\n        const toClose = new Map<string, NavigatableWidget[]>();\n        for (const [uri, widget] of NavigatableWidget.get(this.shell.widgets)) {\n            this.updateWidget(uri, widget, event, { dirty, toClose });\n        }\n        for (const [uriString, widgets] of toClose.entries()) {\n            if (!dirty.has(uriString) && this.corePreferences['workbench.editor.closeOnFileDelete']) {\n                for (const widget of widgets) {\n                    widget.close();\n                    pending.push(waitForClosed(widget));\n                }\n            }\n        }\n\n        await Promise.all(pending);\n    }\n    protected updateWidget(uri: URI, widget: NavigatableWidget, event: FileChangesEvent, { dirty, toClose }: {\n        dirty: Set<string>;\n        toClose: Map<string, NavigatableWidget[]>\n    }): void {\n        const label = widget.title.label;\n        const deleted = label.endsWith(this.deletedSuffix);\n        if (event.contains(uri, FileChangeType.DELETED)) {\n            const uriString = uri.toString();\n            if (Saveable.isDirty(widget)) {\n                dirty.add(uriString);\n            }\n            if (!deleted) {\n                widget.title.label += this.deletedSuffix;\n            }\n            const widgets = toClose.get(uriString) || [];\n            widgets.push(widget);\n            toClose.set(uriString, widgets);\n        } else if (event.contains(uri, FileChangeType.ADDED)) {\n            if (deleted) {\n                widget.title.label = widget.title.label.substr(0, label.length - this.deletedSuffix.length);\n            }\n        }\n    }\n\n    protected updateAssociations(): void {\n        const fileAssociations = this.preferences['files.associations'];\n        const mimeAssociations = Object.keys(fileAssociations).map(filepattern => ({ id: fileAssociations[filepattern], filepattern }));\n        this.mimeService.setAssociations(mimeAssociations);\n    }\n}\n"],"sourceRoot":""}