{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/core/src/browser/menu/browser-menu-plugin.ts"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_core_lib_browser_menu_browser-menu-plugin_js.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MenuBar, Menu as MenuWidget, Widget } from '@phosphor/widgets';\nimport { CommandRegistry as PhosphorCommandRegistry } from '@phosphor/commands';\nimport {\n    CommandRegistry, ActionMenuNode, CompositeMenuNode,\n    MenuModelRegistry, MAIN_MENU_BAR, MenuPath, DisposableCollection, Disposable, MenuNode\n} from '../../common';\nimport { KeybindingRegistry } from '../keybinding';\nimport { FrontendApplicationContribution, FrontendApplication } from '../frontend-application';\nimport { ContextKeyService } from '../context-key-service';\nimport { ContextMenuContext } from './context-menu-context';\nimport { waitForRevealed } from '../widgets';\nimport { ApplicationShell } from '../shell';\n\nexport abstract class MenuBarWidget extends MenuBar {\n    abstract activateMenu(label: string, ...labels: string[]): Promise<MenuWidget>;\n    abstract triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem>;\n}\n\n@injectable()\nexport class BrowserMainMenuFactory implements MenuWidgetFactory {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @inject(ContextMenuContext)\n    protected readonly context: ContextMenuContext;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(MenuModelRegistry)\n    protected readonly menuProvider: MenuModelRegistry;\n\n    createMenuBar(): MenuBarWidget {\n        const menuBar = new DynamicMenuBarWidget();\n        menuBar.id = 'theia:menubar';\n        this.fillMenuBar(menuBar);\n        const listener = this.keybindingRegistry.onKeybindingsChanged(() => {\n            menuBar.clearMenus();\n            this.fillMenuBar(menuBar);\n        });\n        menuBar.disposed.connect(() => listener.dispose());\n        return menuBar;\n    }\n\n    protected fillMenuBar(menuBar: MenuBarWidget): void {\n        const menuModel = this.menuProvider.getMenu(MAIN_MENU_BAR);\n        const menuCommandRegistry = this.createMenuCommandRegistry(menuModel);\n        for (const menu of menuModel.children) {\n            if (menu instanceof CompositeMenuNode) {\n                const menuWidget = this.createMenuWidget(menu, { commands: menuCommandRegistry });\n                menuBar.addMenu(menuWidget);\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    createContextMenu(path: MenuPath, args?: any[]): MenuWidget {\n        const menuModel = this.menuProvider.getMenu(path);\n        const menuCommandRegistry = this.createMenuCommandRegistry(menuModel, args).snapshot();\n        const contextMenu = this.createMenuWidget(menuModel, { commands: menuCommandRegistry });\n        return contextMenu;\n    }\n\n    createMenuWidget(menu: CompositeMenuNode, options: MenuWidget.IOptions & { commands: MenuCommandRegistry }): DynamicMenuWidget {\n        return new DynamicMenuWidget(menu, options, this.services);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected createMenuCommandRegistry(menu: CompositeMenuNode, args: any[] = []): MenuCommandRegistry {\n        const menuCommandRegistry = new MenuCommandRegistry(this.services);\n        this.registerMenu(menuCommandRegistry, menu, args);\n        return menuCommandRegistry;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected registerMenu(menuCommandRegistry: MenuCommandRegistry, menu: CompositeMenuNode, args: any[]): void {\n        for (const child of menu.children) {\n            if (child instanceof ActionMenuNode) {\n                menuCommandRegistry.registerActionMenu(child, args);\n                if (child.altNode) {\n                    menuCommandRegistry.registerActionMenu(child.altNode, args);\n                }\n            } else if (child instanceof CompositeMenuNode) {\n                this.registerMenu(menuCommandRegistry, child, args);\n            } else {\n                this.handleDefault(menuCommandRegistry, child, args);\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected handleDefault(menuCommandRegistry: MenuCommandRegistry, menuNode: MenuNode, args: any[]): void {\n        // NOOP\n    }\n\n    protected get services(): MenuServices {\n        return {\n            context: this.context,\n            contextKeyService: this.contextKeyService,\n            commandRegistry: this.commandRegistry,\n            keybindingRegistry: this.keybindingRegistry,\n            menuWidgetFactory: this\n        };\n    }\n\n}\n\nexport class DynamicMenuBarWidget extends MenuBarWidget {\n\n    /**\n     * We want to restore the focus after the menu closes.\n     */\n    protected previousFocusedElement: HTMLElement | undefined;\n\n    constructor() {\n        super();\n        // HACK we need to hook in on private method _openChildMenu. Don't do this at home!\n        DynamicMenuBarWidget.prototype['_openChildMenu'] = () => {\n            if (this.activeMenu instanceof DynamicMenuWidget) {\n                // `childMenu` is `null` if we open the menu. For example, menu is not shown and you click on `Edit`.\n                // However, the `childMenu` is set, when `Edit` was already open and you move the mouse over `Select`.\n                // We want to save the focus object for the former case only.\n                if (!this.childMenu) {\n                    const { activeElement } = document;\n                    if (activeElement instanceof HTMLElement) {\n                        this.previousFocusedElement = activeElement;\n                    }\n                }\n                this.activeMenu.aboutToShow({ previousFocusedElement: this.previousFocusedElement });\n            }\n            super['_openChildMenu']();\n        };\n    }\n\n    async activateMenu(label: string, ...labels: string[]): Promise<MenuWidget> {\n        const menu = this.menus.find(m => m.title.label === label);\n        if (!menu) {\n            throw new Error(`could not find '${label}' menu`);\n        }\n        this.activeMenu = menu;\n        this.openActiveMenu();\n        await waitForRevealed(menu);\n\n        const menuPath = [label];\n\n        let current = menu;\n        for (const itemLabel of labels) {\n            const item = current.items.find(i => i.label === itemLabel);\n            if (!item || !item.submenu) {\n                throw new Error(`could not find '${label}' submenu in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n            }\n            current.activeItem = item;\n            current.triggerActiveItem();\n            current = item.submenu;\n            await waitForRevealed(current);\n        }\n        return current;\n    }\n\n    async triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem> {\n        if (!labels.length) {\n            throw new Error('menu item label is not specified');\n        }\n        const menuPath = [label, ...labels.slice(0, labels.length - 1)];\n        const menu = await this.activateMenu(menuPath[0], ...menuPath.slice(1));\n        const item = menu.items.find(i => i.label === labels[labels.length - 1]);\n        if (!item) {\n            throw new Error(`could not find '${label}' item in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n        }\n        menu.activeItem = item;\n        menu.triggerActiveItem();\n        return item;\n    }\n\n}\n\nexport class MenuServices {\n    readonly commandRegistry: CommandRegistry;\n    readonly keybindingRegistry: KeybindingRegistry;\n    readonly contextKeyService: ContextKeyService;\n    readonly context: ContextMenuContext;\n    readonly menuWidgetFactory: MenuWidgetFactory;\n}\n\nexport interface MenuWidgetFactory {\n    createMenuWidget(menu: CompositeMenuNode, options: MenuWidget.IOptions & { commands: MenuCommandRegistry }): MenuWidget;\n}\n\n/**\n * A menu widget that would recompute its items on update.\n */\nexport class DynamicMenuWidget extends MenuWidget {\n\n    /**\n     * We want to restore the focus after the menu closes.\n     */\n    protected previousFocusedElement: HTMLElement | undefined;\n\n    constructor(\n        protected menu: CompositeMenuNode,\n        protected options: MenuWidget.IOptions & { commands: MenuCommandRegistry },\n        protected services: MenuServices\n    ) {\n        super(options);\n        if (menu.label) {\n            this.title.label = menu.label;\n        }\n        if (menu.iconClass) {\n            this.title.iconClass = menu.iconClass;\n        }\n        this.updateSubMenus(this, this.menu, this.options.commands);\n    }\n\n    // Hint: this is not called from the context menu use-case, but is not required.\n    // For the context menu the command registry state is calculated by the factory before `open`.\n    public aboutToShow({ previousFocusedElement }: { previousFocusedElement: HTMLElement | undefined }): void {\n        this.preserveFocusedElement(previousFocusedElement);\n        this.clearItems();\n        this.runWithPreservedFocusContext(() => {\n            this.options.commands.snapshot();\n            this.updateSubMenus(this, this.menu, this.options.commands);\n        });\n    }\n\n    public open(x: number, y: number, options?: MenuWidget.IOpenOptions): void {\n        const cb = () => {\n            this.restoreFocusedElement();\n            this.aboutToClose.disconnect(cb);\n        };\n        this.aboutToClose.connect(cb);\n        super.open(x, y, options);\n    }\n\n    private updateSubMenus(parent: MenuWidget, menu: CompositeMenuNode, commands: MenuCommandRegistry): void {\n        const items = this.buildSubMenus([], menu, commands);\n        for (const item of items) {\n            parent.addItem(item);\n        }\n    }\n\n    private buildSubMenus(items: MenuWidget.IItemOptions[], menu: CompositeMenuNode, commands: MenuCommandRegistry): MenuWidget.IItemOptions[] {\n        for (const item of menu.children) {\n            if (item instanceof CompositeMenuNode) {\n                if (item.children.length) { // do not render empty nodes\n                    if (item.isSubmenu) { // submenu node\n                        const submenu = this.services.menuWidgetFactory.createMenuWidget(item, this.options);\n                        if (!submenu.items.length) {\n                            continue;\n                        }\n                        items.push({\n                            type: 'submenu',\n                            submenu,\n                        });\n                    } else { // group node\n                        const submenu = this.buildSubMenus([], item, commands);\n                        if (!submenu.length) {\n                            continue;\n                        }\n                        if (items.length) { // do not put a separator above the first group\n                            items.push({\n                                type: 'separator'\n                            });\n                        }\n                        items.push(...submenu); // render children\n                    }\n                }\n            } else if (item instanceof ActionMenuNode) {\n                const { context, contextKeyService } = this.services;\n                const node = item.altNode && context.altPressed ? item.altNode : item;\n                const { when } = node.action;\n                if (!(commands.isVisible(node.action.commandId) && (!when || contextKeyService.match(when)))) {\n                    continue;\n                }\n                items.push({\n                    command: node.action.commandId,\n                    type: 'command'\n                });\n            } else {\n                items.push(...this.handleDefault(item));\n            }\n        }\n        return items;\n    }\n\n    protected handleDefault(menuNode: MenuNode): MenuWidget.IItemOptions[] {\n        return [];\n    }\n\n    protected preserveFocusedElement(previousFocusedElement: Element | null = document.activeElement): boolean {\n        if (!this.previousFocusedElement && previousFocusedElement instanceof HTMLElement) {\n            this.previousFocusedElement = previousFocusedElement;\n            return true;\n        }\n        return false;\n    }\n\n    protected restoreFocusedElement(): boolean {\n        if (this.previousFocusedElement) {\n            this.previousFocusedElement.focus({ preventScroll: true });\n            this.previousFocusedElement = undefined;\n            return true;\n        }\n        return false;\n    }\n\n    protected runWithPreservedFocusContext(what: () => void): void {\n        let focusToRestore: HTMLElement | undefined = undefined;\n        const { activeElement } = document;\n        if (this.previousFocusedElement && activeElement instanceof HTMLElement && this.previousFocusedElement !== activeElement) {\n            focusToRestore = activeElement;\n            this.previousFocusedElement.focus({ preventScroll: true });\n        }\n        try {\n            what();\n        } finally {\n            if (focusToRestore) {\n                focusToRestore.focus({ preventScroll: true });\n            }\n        }\n    }\n\n}\n\n@injectable()\nexport class BrowserMenuBarContribution implements FrontendApplicationContribution {\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    constructor(\n        @inject(BrowserMainMenuFactory) protected readonly factory: BrowserMainMenuFactory\n    ) { }\n\n    onStart(app: FrontendApplication): void {\n        const logo = this.createLogo();\n        app.shell.addWidget(logo, { area: 'top' });\n        const menu = this.factory.createMenuBar();\n        app.shell.addWidget(menu, { area: 'top' });\n    }\n\n    get menuBar(): MenuBarWidget | undefined {\n        return this.shell.topPanel.widgets.find(w => w instanceof MenuBarWidget) as MenuBarWidget | undefined;\n    }\n\n    protected createLogo(): Widget {\n        const logo = new Widget();\n        logo.id = 'theia:icon';\n        logo.addClass('theia-icon');\n        return logo;\n    }\n}\n\n/**\n * Stores Theia-specific action menu nodes instead of PhosphorJS commands with their handlers.\n */\nexport class MenuCommandRegistry extends PhosphorCommandRegistry {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected actions = new Map<string, [ActionMenuNode, any[]]>();\n    protected toDispose = new DisposableCollection();\n\n    constructor(protected services: MenuServices) {\n        super();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerActionMenu(menu: ActionMenuNode, args: any[]): void {\n        const { commandId } = menu.action;\n        const { commandRegistry } = this.services;\n        const command = commandRegistry.getCommand(commandId);\n        if (!command) {\n            return;\n        }\n        const { id } = command;\n        if (this.actions.has(id)) {\n            return;\n        }\n        this.actions.set(id, [menu, args]);\n    }\n\n    snapshot(): this {\n        this.toDispose.dispose();\n        for (const [menu, args] of this.actions.values()) {\n            this.toDispose.push(this.registerCommand(menu, args));\n        }\n        return this;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected registerCommand(menu: ActionMenuNode, args: any[]): Disposable {\n        const { commandRegistry, keybindingRegistry } = this.services;\n        const command = commandRegistry.getCommand(menu.action.commandId);\n        if (!command) {\n            return Disposable.NULL;\n        }\n        const { id } = command;\n        if (this.hasCommand(id)) {\n            // several menu items can be registered for the same command in different contexts\n            return Disposable.NULL;\n        }\n\n        // We freeze the `isEnabled`, `isVisible`, and `isToggled` states so they won't change.\n        const enabled = commandRegistry.isEnabled(id, ...args);\n        const visible = commandRegistry.isVisible(id, ...args);\n        const toggled = commandRegistry.isToggled(id, ...args);\n        const unregisterCommand = this.addCommand(id, {\n            execute: () => commandRegistry.executeCommand(id, ...args),\n            label: menu.label,\n            icon: menu.icon,\n            isEnabled: () => enabled,\n            isVisible: () => visible,\n            isToggled: () => toggled\n        });\n\n        const bindings = keybindingRegistry.getKeybindingsForCommand(id);\n        // Only consider the first keybinding.\n        if (bindings.length) {\n            const binding = bindings[0];\n            const keys = keybindingRegistry.acceleratorFor(binding);\n            this.addKeyBinding({\n                command: id,\n                keys,\n                selector: '.p-Widget' // We have the PhosphorJS dependency anyway.\n            });\n        }\n        return Disposable.create(() => unregisterCommand.dispose());\n    }\n\n}\n"],"sourceRoot":""}