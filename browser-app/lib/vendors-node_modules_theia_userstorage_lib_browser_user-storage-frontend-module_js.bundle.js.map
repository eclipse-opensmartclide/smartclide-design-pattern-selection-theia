{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/userstorage/src/browser/user-storage-contribution.ts","webpack://browser-app/../node_modules/@theia/userstorage/src/browser/user-storage-frontend-module.ts","webpack://browser-app/../node_modules/@theia/userstorage/src/browser/user-storage-uri.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,6HAAkE;AAClE,mHAA6C;AAC7C,wIAAyE;AACzE,uJAA0E;AAG1E,mNAA4G;AAC5G,6IAAoD;AAGpD;IAAA;IAyCA,CAAC;IApCG,6DAA2B,GAA3B,UAA4B,OAAoB;QAAhD,iBASC;QARG,OAAO,CAAC,gCAAgC,CAAC,eAAK;YAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,iCAAc,CAAC,MAAM,EAAE;gBACxC,KAAK,CAAC,SAAS,CAAC,CAAC;;;;oCACI,qBAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;;gCAA7C,QAAQ,GAAG,SAAkC;gCACnD,OAAO,CAAC,gBAAgB,CAAC,iCAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;;;qBAC7D,CAAC,EAAE,CAAC,CAAC;aACT;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEe,gDAAc,GAA9B,UAA+B,OAAoB;;;;;4BAC9B,qBAAM,OAAO,CAAC,gBAAgB,CAAC,MAAM,CAAC;;wBAAjD,QAAQ,GAAG,SAAsC;6BAC9B,aAAG;wBAAC,qBAAM,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;;wBAAhE,YAAY,GAAG,cAAI,aAAG,WAAC,SAAyC,KAAC;wBACvE,sBAAO,IAAI,8DAA4B,CAAC,QAAQ,EAAE;gCAC9C,YAAY,EAAE;oCACV,EAAE,EAAE,kBAAQ;wCACR,IAAM,YAAY,GAAG,iCAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wCACvD,IAAI,YAAY,EAAE;4CACd,OAAO,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,aAAa,EAAE,CAAC;yCAC7D;wCACD,OAAO,SAAS,CAAC;oCACrB,CAAC;oCACD,IAAI,EAAE,kBAAQ;wCACV,IAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wCACrD,IAAI,YAAY,EAAE;4CACd,OAAO,iCAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;yCAC/C;wCACD,OAAO,SAAS,CAAC;oCACrB,CAAC;iCACJ;6BACJ,EAAE,IAAI,iCAAoB,CACvB,QAAQ,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAClE,CAAC,EAAC;;;;KACN;IApCD;QADC,kBAAM,CAAC,kCAAkB,CAAC;;iEACyB;IAH3C,uBAAuB;QADnC,sBAAU,EAAE;OACA,uBAAuB,CAyCnC;IAAD,8BAAC;CAAA;AAzCY,0DAAuB;;;;;;;;;;;;;AC1BpC;;;;;;;;;;;;;;kFAckF;;AAElF,6HAAgE;AAChE,4JAAqF;AACrF,wKAAsE;AAEtE,kBAAe,IAAI,2BAAe,CAAC,cAAI;IACnC,IAAI,CAAC,mDAAuB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC1D,IAAI,CAAC,sCAAuB,CAAC,CAAC,SAAS,CAAC,mDAAuB,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACvBH;;;;;;;;;;;;;;kFAckF;;;AAElF,mHAA6C;AAEhC,sBAAc,GAAG,IAAI,aAAG,CAAC,oBAAoB,CAAC,CAAC","file":"vendors-node_modules_theia_userstorage_lib_browser_user-storage-frontend-module_js.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { FileSystemProvider } from '@theia/filesystem/lib/common/files';\nimport { FileService, FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { DelegatingFileSystemProvider } from '@theia/filesystem/lib/common/delegating-file-system-provider';\nimport { UserStorageUri } from './user-storage-uri';\n\n@injectable()\nexport class UserStorageContribution implements FileServiceContribution {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    registerFileSystemProviders(service: FileService): void {\n        service.onWillActivateFileSystemProvider(event => {\n            if (event.scheme === UserStorageUri.scheme) {\n                event.waitUntil((async () => {\n                    const provider = await this.createProvider(service);\n                    service.registerProvider(UserStorageUri.scheme, provider);\n                })());\n            }\n        });\n    }\n\n    protected async createProvider(service: FileService): Promise<FileSystemProvider> {\n        const delegate = await service.activateProvider('file');\n        const configDirUri = new URI(await this.environments.getConfigDirUri());\n        return new DelegatingFileSystemProvider(delegate, {\n            uriConverter: {\n                to: resource => {\n                    const relativePath = UserStorageUri.relative(resource);\n                    if (relativePath) {\n                        return configDirUri.resolve(relativePath).normalizePath();\n                    }\n                    return undefined;\n                },\n                from: resource => {\n                    const relativePath = configDirUri.relative(resource);\n                    if (relativePath) {\n                        return UserStorageUri.resolve(relativePath);\n                    }\n                    return undefined;\n                }\n            }\n        }, new DisposableCollection(\n            delegate.watch(configDirUri, { excludes: [], recursive: true })\n        ));\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule, } from '@theia/core/shared/inversify';\nimport { FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { UserStorageContribution } from './user-storage-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(UserStorageContribution).toSelf().inSingletonScope();\n    bind(FileServiceContribution).toService(UserStorageContribution);\n});\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport const UserStorageUri = new URI('user-storage:/user');\n"],"sourceRoot":""}