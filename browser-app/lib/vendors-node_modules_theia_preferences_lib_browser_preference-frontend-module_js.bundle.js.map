{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/preferences/src/browser/style/index.css","webpack://browser-app/../node_modules/@theia/preferences/src/browser/style/preference-array.css","webpack://browser-app/../node_modules/@theia/preferences/src/browser/style/preference-context-menu.css","webpack://browser-app/../node_modules/@theia/preferences/src/browser/style/preference-object.css","webpack://browser-app/../node_modules/@theia/preferences/src/browser/style/search-input.css","webpack://browser-app/../node_modules/@theia/core/shared/fuzzy.js","webpack://browser-app/../node_modules/@theia/preferences/src/browser/abstract-resource-preference-provider.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/folder-preference-provider.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/folders-preferences-provider.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/preference-bindings.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/preference-frontend-module.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/preference-tree-model.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/preferences-contribution.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/preferences-json-schema-contribution.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/preferences-monaco-contribution.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/section-preference-provider.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/user-configs-preference-provider.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/user-preference-provider.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/util/preference-scope-command-manager.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/util/preference-tree-generator.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/util/preference-tree-label-provider.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/util/preference-types.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/components/preference-array-input.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/components/preference-boolean-input.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/components/preference-json-input.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/components/preference-node-renderer.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/components/preference-number-input.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/components/preference-select-input.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/components/preference-string-input.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/preference-editor-widget.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/preference-scope-tabbar-widget.tsx","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/preference-searchbar-widget.tsx","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/preference-tree-widget.tsx","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/preference-widget-bindings.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/views/preference-widget.tsx","webpack://browser-app/../node_modules/@theia/preferences/src/browser/workspace-file-preference-provider.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/workspace-preference-provider.ts","webpack://browser-app/../node_modules/@theia/userstorage/src/browser/index.ts","webpack://browser-app/../node_modules/@theia/userstorage/src/browser/user-storage-contribution.ts","webpack://browser-app/../node_modules/@theia/userstorage/src/browser/user-storage-frontend-module.ts","webpack://browser-app/../node_modules/@theia/userstorage/src/browser/user-storage-uri.ts","webpack://browser-app/../node_modules/@theia/workspace/src/browser/index.ts","webpack://browser-app/../node_modules/@theia/preferences/src/browser/style/index.css?d51e"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_preferences_lib_browser_preference-frontend-module_js.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../../css-loader/index.js!./preference-context-menu.css\"), \"\");\nexports.i(require(\"-!../../../../../css-loader/index.js!./preference-array.css\"), \"\");\nexports.i(require(\"-!../../../../../css-loader/index.js!./preference-object.css\"), \"\");\nexports.i(require(\"-!../../../../../css-loader/index.js!./search-input.css\"), \"\");\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2019 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#preferences_container_widget .p-SplitPanel-handle {\\n    border-right: var(--theia-border-width) solid var(--theia-editorGroup-border);\\n}\\n\\n#preferences_container_widget .p-TabBar-tabIcon {\\n    align-items: center;\\n    display: flex;\\n    line-height: var(--theia-content-line-height) !important;\\n}\\n\\n/* UI View */\\n\\n.theia-settings-container {\\n    max-width: 1000px;\\n    padding-top: 11px;\\n    display: grid;\\n    grid-template-areas:\\n        \\\"header header\\\"\\n        \\\"tabbar tabbar\\\"\\n        \\\"navbar editor\\\";\\n    grid-template-columns: minmax(150px, 280px) 1fr;\\n    grid-template-rows: 45px 45px 1fr;\\n}\\n\\n.theia-settings-container .settings-main:not(.no-results) .settings-no-results-announcement {\\n    display: none;\\n}\\n\\n.theia-settings-container .settings-main .hidden {\\n    display: none;\\n}\\n\\n.theia-settings-container .settings-no-results-announcement {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size3);\\n    padding-left: var(--theia-ui-padding);\\n    margin: calc(2*var(--theia-ui-padding)) 0px;\\n}\\n\\n.theia-settings-container .preferences-searchbar-widget {\\n    grid-area: header;\\n    margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget {\\n    grid-area: tabbar;\\n    margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget.with-shadow {\\n    box-shadow: 0px 6px 5px -5px var(--theia-widget-shadow);\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget .preferences-scope-tab .p-TabBar-tabIcon:not(.preferences-folder-dropdown-icon) {\\n    display: none;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab {\\n    background: var(--theia-editor-background);\\n    border-right: unset;\\n    border-bottom: var(--theia-border-width) solid var(--theia-tab-unfocusedInactiveForeground);\\n}\\n\\n#theia-main-content-panel .theia-settings-container .tabbar-underline {\\n    width: 100%;\\n    position: absolute;\\n    top: calc(var(--theia-private-horizontal-tab-height) + var(--theia-private-horizontal-tab-scrollbar-rail-height) / 2 - 1px);\\n    border-top: 1px solid var(--theia-tab-unfocusedInactiveForeground);\\n    z-index: -1;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current {\\n    color: var(--theia-panelTitle-activeForeground);\\n    border-bottom: var(--theia-border-width) solid var(--theia-panelTitle-activeBorder);\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current:not(.theia-mod-active) {\\n    border-top: unset;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-tab .p-TabBar-tabLabel::after {\\n    content: 'Folder';\\n    padding-left: 4px;\\n    font-size: 0.8em;\\n    color: var(--theia-tab-inactiveForeground);\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-dropdown {\\n    position: relative;\\n    padding-right: 23px;\\n}\\n\\n.preferences-folder-dropdown-icon {\\n    width: 15px;\\n    height: 15px;\\n    position: absolute;\\n    right: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .preferences-editor-widget {\\n    grid-area: editor;\\n}\\n\\n.theia-settings-container .preferences-editor-widget.full-pane {\\n    grid-column-start: 1;\\n    grid-column-end: 3;\\n}\\n\\n.theia-settings-container .preferences-tree-widget {\\n    grid-area: navbar;\\n    padding-left: 31px;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-mod-selected {\\n    font-weight: bold;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-TreeNodeSegment {\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    max-width: 90%;\\n}\\n\\n.theia-settings-container .settings-main {\\n    height: 100%;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.theia-settings-container .settings-main-scroll-container {\\n    position: relative;\\n    box-sizing: border-box;\\n    width: 100%;\\n    padding: 0 24px;\\n    flex: 1 1 auto;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    flex: 0 1 50px;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc .json-button>i {\\n    display: inline-block;\\n    background: var(--theia-icon-open-json) no-repeat;\\n    background-position-y: 1px;\\n    -webkit-filter: invert(1);\\n    filter: invert(1);\\n    height: var(--theia-icon-size);\\n    width: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .settings-scope>label {\\n    margin-right: 12px;\\n}\\n\\n.theia-settings-container .settings-section {\\n    padding-left: 0;\\n    padding-top: var(--theia-ui-padding);\\n    margin-top: calc(var(--theia-ui-padding) * -1);\\n}\\n\\n.theia-settings-container .settings-section a {\\n    border: none;\\n    color: var(--theia-foreground);\\n    font-weight: 500;\\n    outline: 0;\\n    text-decoration: none;\\n}\\n\\n.theia-settings-container .settings-section a:hover {\\n    text-decoration: underline;\\n}\\n\\n.theia-settings-container .settings-section-category-title {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size3);\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n}\\n\\n.theia-settings-container .settings-section-subcategory-title {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size2);\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n}\\n\\n.theia-settings-container .settings-section>li {\\n    list-style-type: none;\\n    margin: var(--theia-ui-padding) 0px;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: justify;\\n    -ms-flex-pack: justify;\\n    justify-content: space-between;\\n    -webkit-box-align: start;\\n    -ms-flex-align: start;\\n    align-items: start;\\n}\\n\\n.theia-settings-container li.single-pref {\\n    list-style-type: none;\\n    margin: 12px 0 18px 0;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    box-sizing: border-box;\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n    position: relative;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter {\\n    position: absolute;\\n    height: 100%;\\n    left: -16px;\\n    padding-right: 4px;\\n    border-right: 2px hidden;\\n}\\n\\n.theia-settings-container .settings-context-menu-btn {\\n    opacity: 0;\\n    transition: opacity .5s;\\n}\\n\\n.theia-settings-container .single-pref:focus-within .pref-context-gutter .settings-context-menu-btn,\\n.theia-settings-container .pref-name:hover+.pref-context-gutter .settings-context-menu-btn,\\n.theia-settings-container .pref-context-gutter:hover .settings-context-menu-btn,\\n.theia-settings-container .pref-context-gutter.show-cog .settings-context-menu-btn {\\n    opacity: 1;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter.theia-mod-item-modified {\\n    border-right: 2px solid var(--theia-settings-modifiedItemIndicator);\\n}\\n\\n.theia-settings-container li.single-pref input[type=\\\"text\\\"] {\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n}\\n\\n.theia-settings-container .settings-main {\\n    margin: 0;\\n}\\n\\n.theia-settings-container .settings-main-sticky {\\n    top: 0;\\n    padding-top: calc(var(--theia-ui-padding));\\n    margin-top: calc(var(--theia-ui-padding) * -1);\\n    background-color: var(--theia-editor-background);\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n    z-index: 1000;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-around;\\n}\\n\\n.theia-settings-container .pref-name {\\n    padding: 0;\\n    font-weight: bold;\\n}\\n\\n.theia-settings-container .preference-leaf-headline-prefix {\\n    color: var(--theia-descriptionForeground);\\n}\\n\\n.preferences-tree-spacer {\\n    padding-left: calc(var(--theia-ui-padding)/2);\\n    padding-right: calc(var(--theia-ui-padding)/2);\\n    min-width: var(--theia-icon-size);\\n    min-height: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .pref-description {\\n    padding: var(--theia-ui-padding) 0;\\n    color: var(--theia-descriptionForeground);\\n    line-height: 18px;\\n}\\n\\n.theia-settings-container .theia-select:focus {\\n    outline-width: 1px;\\n    outline-style: solid;\\n    outline-offset: -1px;\\n    opacity: 1 !important;\\n    outline-color: var(--theia-focusBorder);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"text\\\"] {\\n    border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"checkbox\\\"]:focus,\\n.theia-settings-container .theia-input[type=\\\"number\\\"]:focus {\\n    outline-width: 2px;\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"checkbox\\\"] {\\n    margin-left: 0;\\n}\\n\\n/* Remove the spinners from input[type = number] on Firefox. */\\n.theia-settings-container .theia-input[type=\\\"number\\\"] {\\n    -webkit-appearance: textfield;\\n    border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n/* Remove the webkit spinners from input[type = number] on all browsers except Firefox. */\\n.theia-settings-container input::-webkit-outer-spin-button,\\n.theia-settings-container input::-webkit-inner-spin-button {\\n    -webkit-appearance: none;\\n    margin: 0;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input .pref-input-container .pref-error-notification {\\n    border-style: solid;\\n    border-color: var(--theia-inputValidation-errorBorder);\\n    background-color: var(--theia-inputValidation-errorBackground);\\n    width: 100%;\\n    box-sizing: border-box;\\n    padding: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input .pref-input-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input {\\n    text-decoration: underline;\\n    color: var(--theia-titleBar-activeForeground)\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input:hover {\\n    text-decoration: none;\\n    cursor: pointer;\\n}\\n\\n.theia-settings-container .pref-content-container {\\n    width: 100%;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input {\\n    padding: var(--theia-ui-padding) 0;\\n    width: 100%;\\n    max-width: 320px;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input>select,\\n.theia-settings-container .pref-content-container .pref-input>input:not([type=\\\"checkbox\\\"]) {\\n    width: 100%;\\n}\\n\\n\\n/* These specifications for the boolean class ensure that the\\n    checkbox is rendered to the left of the description.\\n*/\\n.theia-settings-container .pref-content-container.boolean {\\n    display: grid;\\n    grid-template-columns: 20px 1fr;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-description {\\n    grid-column-start: 2;\\n    grid-row-start: 1;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-input {\\n    grid-column-start: 1;\\n    grid-row-start: 1;\\n    margin: 0;\\n}\\n\\n.theia-settings-container .settings-section>li:last-child {\\n    margin-bottom: 20px;\\n}\\n\\n.theia-settings-container .preference-leaf-headline-suffix {\\n    font-weight: normal;\\n    color: var(--theia-descriptionForeground);\\n}\\n\\n.theia-settings-container .preference-leaf-headline-suffix::before {\\n    content: ' (';\\n}\\n\\n.theia-settings-container .preference-leaf-headline-suffix::after {\\n    content: ')';\\n}\\n\\n.theia-settings-container .preference-scope-underlined {\\n    text-decoration: underline;\\n    cursor: pointer;\\n}\\n\\n.theia-settings-container .preference-modified-scope-wrapper:not(:last-child)::after {\\n    content: ', ';\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .preference-array {\\n  list-style: none;\\n  padding   : 0;\\n}\\n\\n.theia-settings-container .preference-array-element {\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-pack : justify;\\n  -ms-flex-pack    : justify;\\n  justify-content  : space-between;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n  padding          : calc(var(--theia-ui-padding) / 2) var(--theia-ui-padding);\\n  border-bottom    : var(--theia-panel-border) 2px solid;\\n}\\n\\n.theia-settings-container .pref-input li:nth-last-child(2) {\\n  border-bottom: none;\\n}\\n\\n.theia-settings-container .pref-input li:last-child {\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n}\\n\\n.theia-settings-container .preference-array-element:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\\n.theia-settings-container .preference-array-element-btn {\\n  width            : 1.5em;\\n  height           : 1.5em;\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-pack : center;\\n  -ms-flex-pack    : center;\\n  justify-content  : center;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n}\\n\\n.theia-settings-container .preference-array-element .preference-array-element-btn {\\n  opacity: 0;\\n}\\n\\n.theia-settings-container .preference-array-element:hover .preference-array-element-btn {\\n  opacity: 1;\\n}\\n\\n.theia-settings-container .preference-array-element-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n  cursor          : pointer;\\n}\\n\\n.theia-settings-container .preference-array .codicon.codicon-add {\\n  margin-left : calc((var(--theia-icon-size) + 4px) * -1);\\n  margin-right: 4px;\\n  width       : var(--theia-icon-size);\\n  height      : var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .preference-array-input {\\n  padding-right: calc(var(--theia-icon-size) + var(--theia-ui-padding));\\n  width        : 100%;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-context-menu-container {\\n  position: relative;\\n  padding-left: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu-btn {\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .settings-context-menu {\\n  position: absolute;\\n  width: var(--theia-settingsSidebar-width);\\n  list-style: none;\\n  padding: var(--theia-ui-padding);\\n  bottom: calc(100% + 10px);\\n  left: -10px;\\n  z-index: 9999;\\n  background-color: var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: 10px;\\n  bottom: -10px;\\n  width: 0;\\n  height: 0;\\n  border-left: 10px solid transparent;\\n  border-right: 10px solid transparent;\\n  border-top: 10px solid var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu li {\\n  padding: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu li:hover {\\n  background-color: var(--theia-menu-selectionBackground);\\n}\\n\\n.theia-settings-container .settings-context-menu i {\\n  padding-right: var(--theia-ui-padding);\\n  width: var(--theia-icon-size);\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn {\\n  margin-left: 5px;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .object-preference-input-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n  -ms-flex-pack: justify;\\n  justify-content: space-between;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n}\\n\\n.theia-settings-container .object-preference-input {\\n  width: 100%;\\n  max-height: 250px;\\n  resize: none;\\n  color: var(--theia-settings-textInputForeground);\\n  background-color: var(--theia-settings-textInputBackground);\\n  border-color: var(--theia-panel-border);\\n  font-size: var(--theia-code-font-size);\\n  margin-bottom: 10px;\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle {\\n  padding: 0 calc(var(--theia-ui-padding) / 2);\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle-icon {\\n  display: inline-block;\\n  background: var(--theia-icon-open-json) no-repeat;\\n  background-position-y: 1px;\\n  height: var(--theia-icon-size);\\n  width: var(--theia-icon-size);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-search-container {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.theia-settings-container .settings-search-container .settings-search-input {\\n  flex: 1;\\n  text-indent: 8px;\\n  padding: calc(var(--theia-ui-padding) / 2) 0;\\n  box-sizing: border-box;\\n  border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .settings-search-container .option-buttons {\\n  height: 23px;\\n  align-items: center;\\n  position: absolute;\\n  z-index: 999;\\n  right: 5px;\\n  display: flex;\\n}\\n\\n.theia-settings-container .settings-search-container .clear-all {\\n  background: var(--theia-icon-clear);\\n}\\n\\n.theia-settings-container .settings-search-container .results-found {\\n  background-color: var(--theia-badge-background);\\n  border-radius: 2px;\\n  color: var(--theia-badge-foreground);\\n  padding: calc(var(--theia-ui-padding) / 5) calc(var(--theia-ui-padding) / 2);\\n}\\n\\n.theia-settings-container .settings-search-container .option {\\n  width: 21px;\\n  height: 21px;\\n  margin: 0 1px;\\n  display: inline-block;\\n  box-sizing: border-box;\\n  user-select: none;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  border: var(--theia-border-width) solid transparent;\\n  opacity: 0.7;\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .settings-search-container .enabled {\\n  opacity: 1.0;\\n}\\n\", \"\"]);\n\n// exports\n","module.exports = require('fuzzy');\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-null/no-null */\n\nimport * as jsoncparser from 'jsonc-parser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { PreferenceProvider, PreferenceSchemaProvider, PreferenceScope, PreferenceProviderDataChange } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { MonacoWorkspace } from '@theia/monaco/lib/browser/monaco-workspace';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\n\n@injectable()\nexport abstract class AbstractResourcePreferenceProvider extends PreferenceProvider {\n\n    protected preferences: { [key: string]: any } = {};\n    protected model: MonacoEditorModel | undefined;\n    protected readonly loading = new Deferred();\n    protected modelInitialized = false;\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n    @inject(FileService) protected readonly fileService: FileService;\n\n    @inject(PreferenceConfigurations)\n    protected readonly configurations: PreferenceConfigurations;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(MonacoWorkspace)\n    protected readonly workspace: MonacoWorkspace;\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        const uri = this.getUri();\n        this.toDispose.push(Disposable.create(() => this.loading.reject(new Error(`preference provider for '${uri}' was disposed`))));\n        await this.readPreferencesFromFile();\n        this._ready.resolve();\n\n        const reference = await this.textModelService.createModelReference(uri);\n        if (this.toDispose.disposed) {\n            reference.dispose();\n            return;\n        }\n\n        this.model = reference.object;\n        this.loading.resolve();\n        this.modelInitialized = true;\n\n        this.toDispose.push(reference);\n        this.toDispose.push(Disposable.create(() => this.model = undefined));\n\n        this.toDispose.push(this.model.onDidChangeContent(() => this.readPreferences()));\n        this.toDispose.push(this.model.onDirtyChanged(() => this.readPreferences()));\n        this.toDispose.push(this.model.onDidChangeValid(() => this.readPreferences()));\n\n        this.toDispose.push(Disposable.create(() => this.reset()));\n    }\n\n    protected abstract getUri(): URI;\n    protected abstract getScope(): PreferenceScope;\n\n    protected get valid(): boolean {\n        return this.modelInitialized ? !!this.model?.valid : Object.keys(this.preferences).length > 0;\n    }\n\n    getConfigUri(): URI;\n    getConfigUri(resourceUri: string | undefined): URI | undefined;\n    getConfigUri(resourceUri?: string): URI | undefined {\n        if (!resourceUri) {\n            return this.getUri();\n        }\n        return this.valid && this.contains(resourceUri) ? this.getUri() : undefined;\n    }\n\n    contains(resourceUri: string | undefined): boolean {\n        if (!resourceUri) {\n            return true;\n        }\n        const domain = this.getDomain();\n        if (!domain) {\n            return true;\n        }\n        const resourcePath = new URI(resourceUri).path;\n        return domain.some(uri => new URI(uri).path.relativity(resourcePath) >= 0);\n    }\n\n    getPreferences(resourceUri?: string): { [key: string]: any } {\n        return this.valid && this.contains(resourceUri) ? this.preferences : {};\n    }\n\n    async setPreference(key: string, value: any, resourceUri?: string): Promise<boolean> {\n        await this.loading.promise;\n        if (!this.model) {\n            return false;\n        }\n        if (!this.contains(resourceUri)) {\n            return false;\n        }\n        const path = this.getPath(key);\n        if (!path) {\n            return false;\n        }\n        try {\n            const content = this.model.getText().trim();\n            if (!content && value === undefined) {\n                return true;\n            }\n            const textModel = this.model.textEditorModel;\n            const editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [];\n            if (path.length || value !== undefined) {\n                const { insertSpaces, tabSize, defaultEOL } = textModel.getOptions();\n                for (const edit of jsoncparser.modify(content, path, value, {\n                    formattingOptions: {\n                        insertSpaces,\n                        tabSize,\n                        eol: defaultEOL === monaco.editor.DefaultEndOfLine.LF ? '\\n' : '\\r\\n'\n                    }\n                })) {\n                    const start = textModel.getPositionAt(edit.offset);\n                    const end = textModel.getPositionAt(edit.offset + edit.length);\n                    editOperations.push({\n                        range: monaco.Range.fromPositions(start, end),\n                        text: edit.content || null,\n                        forceMoveMarkers: false\n                    });\n                }\n            } else {\n                editOperations.push({\n                    range: textModel.getFullModelRange(),\n                    text: null,\n                    forceMoveMarkers: false\n                });\n            }\n            await this.workspace.applyBackgroundEdit(this.model, editOperations);\n            return await this.pendingChanges;\n        } catch (e) {\n            const message = `Failed to update the value of '${key}' in '${this.getUri()}'.`;\n            this.messageService.error(`${message} Please check if it is corrupted.`);\n            console.error(`${message}`, e);\n            return false;\n        }\n    }\n\n    protected getPath(preferenceName: string): string[] | undefined {\n        return [preferenceName];\n    }\n\n    protected async readPreferencesFromFile(): Promise<void> {\n        const content = await this.fileService.read(this.getUri()).catch(() => ({ value: '' }));\n        this.readPreferencesFromContent(content.value);\n    }\n\n    /**\n     * It HAS to be sync to ensure that `setPreference` returns only when values are updated\n     * or any other operation modifying the monaco model content.\n     */\n    protected readPreferences(): void {\n        const model = this.model;\n        if (!model || model.dirty) {\n            return;\n        }\n        try {\n            const content = model.valid ? model.getText() : '';\n            this.readPreferencesFromContent(content);\n        } catch (e) {\n            console.error(`Failed to load preferences from '${this.getUri()}'.`, e);\n        }\n    }\n\n    protected readPreferencesFromContent(content: string): void {\n        let preferencesInJson;\n        try {\n            preferencesInJson = this.parse(content);\n        } catch {\n            preferencesInJson = {};\n        }\n        const parsedPreferences = this.getParsedContent(preferencesInJson);\n        this.handlePreferenceChanges(parsedPreferences);\n    }\n\n    protected parse(content: string): any {\n        content = content.trim();\n        if (!content) {\n            return undefined;\n        }\n        const strippedContent = jsoncparser.stripComments(content);\n        return jsoncparser.parse(strippedContent);\n    }\n\n    protected handlePreferenceChanges(newPrefs: { [key: string]: any }): void {\n        const oldPrefs = Object.assign({}, this.preferences);\n        this.preferences = newPrefs;\n        const prefNames = new Set([...Object.keys(oldPrefs), ...Object.keys(newPrefs)]);\n        const prefChanges: PreferenceProviderDataChange[] = [];\n        const uri = this.getUri();\n        for (const prefName of prefNames.values()) {\n            const oldValue = oldPrefs[prefName];\n            const newValue = newPrefs[prefName];\n            const schemaProperties = this.schemaProvider.getCombinedSchema().properties[prefName];\n            if (schemaProperties) {\n                const scope = schemaProperties.scope;\n                // do not emit the change event if the change is made out of the defined preference scope\n                if (!this.schemaProvider.isValidInScope(prefName, this.getScope())) {\n                    console.warn(`Preference ${prefName} in ${uri} can only be defined in scopes: ${PreferenceScope.getScopeNames(scope).join(', ')}.`);\n                    continue;\n                }\n            }\n            if (!PreferenceProvider.deepEqual(newValue, oldValue)) {\n                prefChanges.push({\n                    preferenceName: prefName, newValue, oldValue, scope: this.getScope(), domain: this.getDomain()\n                });\n            }\n        }\n\n        if (prefChanges.length > 0) { // do not emit the change event if the pref value is not changed\n            this.emitPreferencesChangedEvent(prefChanges);\n        }\n    }\n\n    protected reset(): void {\n        const preferences = this.preferences;\n        this.preferences = {};\n        const changes: PreferenceProviderDataChange[] = [];\n        for (const prefName of Object.keys(preferences)) {\n            const value = preferences[prefName];\n            if (value !== undefined) {\n                changes.push({\n                    preferenceName: prefName, newValue: undefined, oldValue: value, scope: this.getScope(), domain: this.getDomain()\n                });\n            }\n        }\n        if (changes.length > 0) {\n            this.emitPreferencesChangedEvent(changes);\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceScope } from '@theia/core/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { SectionPreferenceProvider } from './section-preference-provider';\n\nexport const FolderPreferenceProviderFactory = Symbol('FolderPreferenceProviderFactory');\nexport interface FolderPreferenceProviderFactory {\n    (uri: URI, section: string, folder: FileStat): FolderPreferenceProvider;\n}\n\nexport const FolderPreferenceProviderFolder = Symbol('FolderPreferenceProviderFolder');\nexport interface FolderPreferenceProviderOptions {\n    readonly configUri: URI;\n    readonly sectionName: string | undefined;\n}\n\n@injectable()\nexport class FolderPreferenceProvider extends SectionPreferenceProvider {\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(FolderPreferenceProviderFolder) protected readonly folder: FileStat;\n\n    private _folderUri: URI;\n\n    get folderUri(): URI {\n        if (!this._folderUri) {\n            this._folderUri = this.folder.resource;\n        }\n        return this._folderUri;\n    }\n    protected getScope(): PreferenceScope {\n        if (!this.workspaceService.isMultiRootWorkspaceOpened) {\n            // when FolderPreferenceProvider is used as a delegate of WorkspacePreferenceProvider in a one-folder workspace\n            return PreferenceScope.Workspace;\n        }\n        return PreferenceScope.Folder;\n    }\n\n    getDomain(): string[] {\n        return [this.folderUri.toString()];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceProvider, PreferenceResolveResult } from '@theia/core/lib/browser/preferences/preference-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { FolderPreferenceProvider, FolderPreferenceProviderFactory } from './folder-preference-provider';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\n\n@injectable()\nexport class FoldersPreferencesProvider extends PreferenceProvider {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(FolderPreferenceProviderFactory)\n    protected readonly folderPreferenceProviderFactory: FolderPreferenceProviderFactory;\n\n    @inject(PreferenceConfigurations)\n    protected readonly configurations: PreferenceConfigurations;\n\n    protected readonly providers = new Map<string, FolderPreferenceProvider>();\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        await this.workspaceService.roots;\n\n        this.updateProviders();\n        this.workspaceService.onWorkspaceChanged(() => this.updateProviders());\n\n        const readyPromises: Promise<void>[] = [];\n        for (const provider of this.providers.values()) {\n            readyPromises.push(provider.ready.catch(e => console.error(e)));\n        }\n        Promise.all(readyPromises).then(() => this._ready.resolve());\n    }\n\n    protected updateProviders(): void {\n        const roots = this.workspaceService.tryGetRoots();\n        const toDelete = new Set(this.providers.keys());\n        for (const folder of roots) {\n            for (const configPath of this.configurations.getPaths()) {\n                for (const configName of [...this.configurations.getSectionNames(), this.configurations.getConfigName()]) {\n                    const sectionUri = this.configurations.createUri(folder.resource, configPath, configName);\n                    const sectionKey = sectionUri.toString();\n                    toDelete.delete(sectionKey);\n                    if (!this.providers.has(sectionKey)) {\n                        const provider = this.createProvider(sectionUri, configName, folder);\n                        this.providers.set(sectionKey, provider);\n                    }\n                }\n            }\n        }\n        for (const key of toDelete) {\n            const provider = this.providers.get(key);\n            if (provider) {\n                this.providers.delete(key);\n                provider.dispose();\n            }\n        }\n    }\n\n    getConfigUri(resourceUri?: string, sectionName: string = this.configurations.getConfigName()): URI | undefined {\n        for (const provider of this.getFolderProviders(resourceUri)) {\n            const configUri = provider.getConfigUri(resourceUri);\n            if (configUri && this.configurations.getName(configUri) === sectionName) {\n                return configUri;\n            }\n        }\n        return undefined;\n    }\n\n    getContainingConfigUri(resourceUri?: string, sectionName: string = this.configurations.getConfigName()): URI | undefined {\n        for (const provider of this.getFolderProviders(resourceUri)) {\n            const configUri = provider.getConfigUri();\n            if (provider.contains(resourceUri) && this.configurations.getName(configUri) === sectionName) {\n                return configUri;\n            }\n        }\n        return undefined;\n    }\n\n    getDomain(): string[] {\n        return this.workspaceService.tryGetRoots().map(root => root.resource.toString());\n    }\n\n    resolve<T>(preferenceName: string, resourceUri?: string): PreferenceResolveResult<T> {\n        const result: PreferenceResolveResult<T> = {};\n        const groups = this.groupProvidersByConfigName(resourceUri);\n        for (const group of groups.values()) {\n            for (const provider of group) {\n                const { value, configUri } = provider.resolve<T>(preferenceName, resourceUri);\n                if (configUri && value !== undefined) {\n                    result.configUri = configUri;\n                    result.value = PreferenceProvider.merge(result.value as any, value as any) as any;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    getPreferences(resourceUri?: string): { [p: string]: any } {\n        let result = {};\n        const groups = this.groupProvidersByConfigName(resourceUri);\n        for (const group of groups.values()) {\n            for (const provider of group) {\n                if (provider.getConfigUri(resourceUri)) {\n                    const preferences = provider.getPreferences();\n                    result = PreferenceProvider.merge(result, preferences) as any;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    async setPreference(preferenceName: string, value: any, resourceUri?: string): Promise<boolean> {\n        const firstPathFragment = preferenceName.split('.', 1)[0];\n        const defaultConfigName = this.configurations.getConfigName();\n        const configName = this.configurations.isSectionName(firstPathFragment) ? firstPathFragment : defaultConfigName;\n\n        const providers = this.getFolderProviders(resourceUri);\n        let configPath: string | undefined;\n        const candidates = providers.filter(provider => {\n            // Attempt to figure out the settings folder (.vscode or .theia) we're interested in.\n            const containingConfigUri = provider.getConfigUri(resourceUri);\n            if (configPath === undefined && containingConfigUri) {\n                configPath = this.configurations.getPath(containingConfigUri);\n            }\n            const providerName = this.configurations.getName(containingConfigUri ?? provider.getConfigUri());\n            return providerName === configName || providerName === defaultConfigName;\n        });\n\n        const configNameAndPathMatches = [];\n        const configNameOnlyMatches = [];\n        const configUriMatches = [];\n        const otherMatches = [];\n\n        for (const candidate of candidates) {\n            const domainMatches = candidate.getConfigUri(resourceUri);\n            const configUri = domainMatches ?? candidate.getConfigUri();\n            const nameMatches = this.configurations.getName(configUri) === configName;\n            const pathMatches = this.configurations.getPath(configUri) === configPath;\n\n            // Perfect match, run immediately in case we can bail out early.\n            if (nameMatches && domainMatches) {\n                if (await candidate.setPreference(preferenceName, value, resourceUri)) {\n                    return true;\n                }\n            } else if (nameMatches && pathMatches) { // Right file in the right folder.\n                configNameAndPathMatches.push(candidate);\n            } else if (nameMatches) { // Right file.\n                configNameOnlyMatches.push(candidate);\n            } else if (domainMatches) { // Currently valid and governs target URI\n                configUriMatches.push(candidate);\n            } else {\n                otherMatches.push(candidate);\n            }\n        }\n\n        const candidateSets = [configNameAndPathMatches, configNameOnlyMatches, configUriMatches, otherMatches];\n\n        for (const candidateSet of candidateSets) {\n            for (const candidate of candidateSet) {\n                if (await candidate.setPreference(preferenceName, value, resourceUri)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    protected groupProvidersByConfigName(resourceUri?: string): Map<string, FolderPreferenceProvider[]> {\n        const groups = new Map<string, FolderPreferenceProvider[]>();\n        const providers = this.getFolderProviders(resourceUri);\n        for (const configName of [this.configurations.getConfigName(), ...this.configurations.getSectionNames()]) {\n            const group = [];\n            for (const provider of providers) {\n                if (this.configurations.getName(provider.getConfigUri()) === configName) {\n                    group.push(provider);\n                }\n            }\n            groups.set(configName, group);\n        }\n        return groups;\n    }\n\n    protected getFolderProviders(resourceUri?: string): FolderPreferenceProvider[] {\n        if (!resourceUri) {\n            return [];\n        }\n        const resourcePath = new URI(resourceUri).path;\n        let folder: Readonly<{ relativity: number, uri?: string }> = { relativity: Number.MAX_SAFE_INTEGER };\n        const providers = new Map<string, FolderPreferenceProvider[]>();\n        for (const provider of this.providers.values()) {\n            const uri = provider.folderUri.toString();\n            const folderProviders = (providers.get(uri) || []);\n            folderProviders.push(provider);\n            providers.set(uri, folderProviders);\n\n            // in case we have nested folders mounted as workspace roots, select the innermost enclosing folder\n            const relativity = provider.folderUri.path.relativity(resourcePath);\n            if (relativity >= 0 && folder.relativity > relativity) {\n                folder = { relativity, uri };\n            }\n        }\n        return folder.uri && providers.get(folder.uri) || [];\n    }\n\n    protected createProvider(uri: URI, section: string, folder: FileStat): FolderPreferenceProvider {\n        const provider = this.folderPreferenceProviderFactory(uri, section, folder);\n        this.toDispose.push(provider);\n        this.toDispose.push(provider.onDidPreferencesChanged(change => {\n            this.onDidPreferencesChangedEmitter.fire(change);\n        }\n        ));\n        return provider;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container, interfaces } from '@theia/core/shared/inversify';\nimport { PreferenceProvider, PreferenceScope } from '@theia/core/lib/browser/preferences';\nimport { UserPreferenceProvider, UserPreferenceProviderFactory } from './user-preference-provider';\nimport { WorkspacePreferenceProvider } from './workspace-preference-provider';\nimport { WorkspaceFilePreferenceProvider, WorkspaceFilePreferenceProviderFactory, WorkspaceFilePreferenceProviderOptions } from './workspace-file-preference-provider';\nimport { FoldersPreferencesProvider } from './folders-preferences-provider';\nimport { FolderPreferenceProvider, FolderPreferenceProviderFactory, FolderPreferenceProviderFolder } from './folder-preference-provider';\nimport { UserConfigsPreferenceProvider } from './user-configs-preference-provider';\nimport { SectionPreferenceProviderUri, SectionPreferenceProviderSection } from './section-preference-provider';\n\nexport function bindWorkspaceFilePreferenceProvider(bind: interfaces.Bind): void {\n    bind(WorkspaceFilePreferenceProviderFactory).toFactory(ctx => (options: WorkspaceFilePreferenceProviderOptions) => {\n        const child = new Container({ defaultScope: 'Singleton' });\n        child.parent = ctx.container;\n        child.bind(WorkspaceFilePreferenceProvider).toSelf();\n        child.bind(WorkspaceFilePreferenceProviderOptions).toConstantValue(options);\n        return child.get(WorkspaceFilePreferenceProvider);\n    });\n}\n\nexport function bindFactory<F, C>(bind: interfaces.Bind,\n    factoryId: interfaces.ServiceIdentifier<F>,\n    constructor: interfaces.Newable<C>,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ...parameterBindings: interfaces.ServiceIdentifier<any>[]): void {\n    bind(factoryId).toFactory(ctx =>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (...args: any[]) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n            for (let i = 0; i < parameterBindings.length; i++) {\n                child.bind(parameterBindings[i]).toConstantValue(args[i]);\n            }\n            child.bind(constructor).to(constructor);\n            return child.get(constructor);\n        }\n    );\n}\n\nexport function bindPreferenceProviders(bind: interfaces.Bind, unbind: interfaces.Unbind): void {\n    unbind(PreferenceProvider);\n\n    bind(PreferenceProvider).to(UserConfigsPreferenceProvider).inSingletonScope().whenTargetNamed(PreferenceScope.User);\n    bind(PreferenceProvider).to(WorkspacePreferenceProvider).inSingletonScope().whenTargetNamed(PreferenceScope.Workspace);\n    bind(PreferenceProvider).to(FoldersPreferencesProvider).inSingletonScope().whenTargetNamed(PreferenceScope.Folder);\n    bindWorkspaceFilePreferenceProvider(bind);\n    bindFactory(bind, UserPreferenceProviderFactory, UserPreferenceProvider, SectionPreferenceProviderUri, SectionPreferenceProviderSection);\n    bindFactory(bind, FolderPreferenceProviderFactory, FolderPreferenceProvider, SectionPreferenceProviderUri, SectionPreferenceProviderSection, FolderPreferenceProviderFolder);\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/index.css';\nimport './preferences-monaco-contribution';\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { bindViewContribution } from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { PreferenceTreeGenerator } from './util/preference-tree-generator';\nimport { bindPreferenceProviders } from './preference-bindings';\nimport { bindPreferencesWidgets } from './views/preference-widget-bindings';\nimport { PreferencesContribution } from './preferences-contribution';\nimport { PreferenceScopeCommandManager } from './util/preference-scope-command-manager';\nimport { JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { PreferencesJsonSchemaContribution } from './preferences-json-schema-contribution';\n\nexport function bindPreferences(bind: interfaces.Bind, unbind: interfaces.Unbind): void {\n    bindPreferenceProviders(bind, unbind);\n    bindPreferencesWidgets(bind);\n\n    bind(PreferenceTreeGenerator).toSelf().inSingletonScope();\n\n    bindViewContribution(bind, PreferencesContribution);\n\n    bind(PreferenceScopeCommandManager).toSelf().inSingletonScope();\n    bind(TabBarToolbarContribution).toService(PreferencesContribution);\n\n    bind(PreferencesJsonSchemaContribution).toSelf().inSingletonScope();\n    bind(JsonSchemaContribution).toService(PreferencesJsonSchemaContribution);\n}\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bindPreferences(bind, unbind);\n});\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    TreeModelImpl,\n    TreeWidget,\n    CompositeTreeNode,\n    TopDownTreeIterator,\n    TreeNode,\n    PreferenceSchemaProvider,\n    PreferenceDataProperty,\n    NodeProps,\n    ExpandableTreeNode,\n    SelectableTreeNode,\n    PreferenceService,\n} from '@theia/core/lib/browser';\nimport { Emitter } from '@theia/core';\nimport { PreferencesSearchbarWidget } from './views/preference-searchbar-widget';\nimport { PreferenceTreeGenerator, COMMONLY_USED_SECTION_PREFIX } from './util/preference-tree-generator';\nimport * as fuzzy from '@theia/core/shared/fuzzy';\nimport { PreferencesScopeTabBar } from './views/preference-scope-tabbar-widget';\nimport { Preference } from './util/preference-types';\nimport { Event } from '@theia/core/lib/common';\n\nexport interface PreferenceTreeNodeProps extends NodeProps {\n    visibleChildren: number;\n    isExpansible?: boolean;\n}\n\nexport interface PreferenceTreeNodeRow extends Readonly<TreeWidget.NodeRow>, PreferenceTreeNodeProps {\n    node: Preference.TreeNode;\n}\nexport enum PreferenceFilterChangeSource {\n    Schema,\n    Search,\n    Scope,\n}\nexport interface PreferenceFilterChangeEvent {\n    source: PreferenceFilterChangeSource\n}\n\n@injectable()\nexport class PreferenceTreeModel extends TreeModelImpl {\n\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n    @inject(PreferencesSearchbarWidget) protected readonly filterInput: PreferencesSearchbarWidget;\n    @inject(PreferenceTreeGenerator) protected readonly treeGenerator: PreferenceTreeGenerator;\n    @inject(PreferencesScopeTabBar) protected readonly scopeTracker: PreferencesScopeTabBar;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n\n    protected readonly onTreeFilterChangedEmitter = new Emitter<PreferenceFilterChangeEvent>();\n    readonly onFilterChanged = this.onTreeFilterChangedEmitter.event;\n\n    protected lastSearchedFuzzy: string = '';\n    protected lastSearchedLiteral: string = '';\n    protected _currentScope: number = Number(Preference.DEFAULT_SCOPE.scope);\n    protected _isFiltered: boolean = false;\n    protected _currentRows: Map<string, PreferenceTreeNodeRow> = new Map();\n    protected _totalVisibleLeaves = 0;\n\n    get currentRows(): Readonly<Map<string, PreferenceTreeNodeRow>> {\n        return this._currentRows;\n    }\n\n    get totalVisibleLeaves(): number {\n        return this._totalVisibleLeaves;\n    }\n\n    get isFiltered(): boolean {\n        return this._isFiltered;\n    }\n\n    get propertyList(): { [key: string]: PreferenceDataProperty; } {\n        return this.schemaProvider.getCombinedSchema().properties;\n    }\n\n    get currentScope(): Preference.SelectedScopeDetails {\n        return this.scopeTracker.currentScope;\n    }\n\n    get onSchemaChanged(): Event<CompositeTreeNode> {\n        return this.treeGenerator.onSchemaChanged;\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        super.init();\n        this.toDispose.pushAll([\n            this.treeGenerator.onSchemaChanged(newTree => this.handleNewSchema(newTree)),\n            this.scopeTracker.onScopeChanged(scopeDetails => {\n                this._currentScope = scopeDetails.scope;\n                this.updateFilteredRows(PreferenceFilterChangeSource.Scope);\n            }),\n            this.filterInput.onFilterChanged(newSearchTerm => {\n                this.lastSearchedLiteral = newSearchTerm;\n                this.lastSearchedFuzzy = newSearchTerm.replace(/\\s/g, '');\n                this._isFiltered = newSearchTerm.length > 2;\n                if (this.isFiltered) {\n                    this.expandAll();\n                } else if (CompositeTreeNode.is(this.root)) {\n                    this.collapseAll(this.root);\n                }\n                this.updateFilteredRows(PreferenceFilterChangeSource.Search);\n            }),\n            this.onFilterChanged(() => {\n                this.filterInput.updateResultsCount(this._totalVisibleLeaves);\n            }),\n            this.onTreeFilterChangedEmitter,\n        ]);\n        await this.preferenceService.ready;\n        this.handleNewSchema(this.treeGenerator.root);\n    }\n\n    private handleNewSchema(newRoot: CompositeTreeNode): void {\n        this.root = newRoot;\n        if (this.isFiltered) {\n            this.expandAll();\n        }\n        this.updateFilteredRows(PreferenceFilterChangeSource.Schema);\n    }\n\n    protected updateRows(): void {\n        const root = this.root;\n        this._currentRows = new Map();\n        if (root) {\n            this._totalVisibleLeaves = 0;\n            let index = 0;\n\n            for (const node of new TopDownTreeIterator(root, {\n                pruneCollapsed: false,\n                pruneSiblings: true\n            })) {\n                if (TreeNode.isVisible(node) && Preference.TreeNode.is(node)) {\n                    const { id } = Preference.TreeNode.getGroupAndIdFromNodeId(node.id);\n                    if (CompositeTreeNode.is(node) || this.passesCurrentFilters(node, id)) {\n                        this.updateVisibleChildren(node);\n\n                        this._currentRows.set(node.id, {\n                            index: index++,\n                            node,\n                            depth: node.depth,\n                            visibleChildren: 0,\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    protected updateFilteredRows(source: PreferenceFilterChangeSource): void {\n        this.updateRows();\n        this.onTreeFilterChangedEmitter.fire({ source });\n    }\n\n    protected passesCurrentFilters(node: Preference.LeafNode, prefID: string): boolean {\n        if (!this.schemaProvider.isValidInScope(prefID, this._currentScope)) {\n            return false;\n        }\n        if (!this._isFiltered) {\n            return true;\n        }\n        // When filtering, VSCode will render an item that is present in the commonly used section only once but render both its possible parents in the left-hand tree.\n        // E.g. searching for editor.renderWhitespace will show one item in the main panel, but both 'Commonly Used' and 'Text Editor' in the left tree.\n        // That seems counterintuitive and introduces a number of special cases, so I prefer to remove the commonly used section entirely when the user searches.\n        if (node.id.startsWith(COMMONLY_USED_SECTION_PREFIX)) {\n            return false;\n        }\n        return fuzzy.test(this.lastSearchedFuzzy, prefID) // search matches preference name.\n            // search matches description. Fuzzy isn't ideal here because the score depends on the order of discovery.\n            || (node.preference.data.description ?? '').includes(this.lastSearchedLiteral);\n    }\n\n    protected isVisibleSelectableNode(node: TreeNode): node is SelectableTreeNode {\n        return CompositeTreeNode.is(node) && !!this._currentRows.get(node.id)?.visibleChildren;\n    }\n\n    protected updateVisibleChildren(node: TreeNode): void {\n        if (!CompositeTreeNode.is(node)) {\n            this._totalVisibleLeaves++;\n            let nextParent = node.parent?.id && this._currentRows.get(node.parent?.id);\n            while (nextParent && nextParent.node !== this.root) {\n                if (nextParent) {\n                    nextParent.visibleChildren += 1;\n                }\n                nextParent = nextParent.node.parent?.id && this._currentRows.get(nextParent.node.parent?.id);\n                if (nextParent) {\n                    nextParent.isExpansible = true;\n                }\n            }\n        }\n    }\n\n    collapseAllExcept(openNode: TreeNode | undefined): void {\n        if (ExpandableTreeNode.is(openNode)) {\n            this.expandNode(openNode);\n        }\n        if (CompositeTreeNode.is(this.root)) {\n            this.root.children.forEach(child => {\n                if (child !== openNode && ExpandableTreeNode.is(child)) {\n                    this.collapseNode(child);\n                }\n            });\n        }\n    }\n\n    protected expandAll(): void {\n        if (CompositeTreeNode.is(this.root)) {\n            this.root.children.forEach(child => {\n                if (ExpandableTreeNode.is(child)) {\n                    this.expandNode(child);\n                }\n            });\n        }\n    }\n\n    /**\n     * @returns true if selection changed, false otherwise\n     */\n    selectIfNotSelected(node: SelectableTreeNode): boolean {\n        const currentlySelected = this.selectedNodes[0];\n        if (node !== currentlySelected) {\n            this.selectNode(node);\n            return true;\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named, optional } from '@theia/core/shared/inversify';\nimport { MenuModelRegistry, CommandRegistry } from '@theia/core';\nimport {\n    CommonMenus,\n    AbstractViewContribution,\n    CommonCommands,\n    KeybindingRegistry,\n    Widget,\n    PreferenceScope,\n    PreferenceProvider,\n    PreferenceService,\n    QuickInputService,\n    QuickPickItem,\n} from '@theia/core/lib/browser';\nimport { isFirefox } from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common/os';\nimport { TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferencesWidget } from './views/preference-widget';\nimport { WorkspacePreferenceProvider } from './workspace-preference-provider';\nimport { Preference, PreferencesCommands, PreferenceMenus } from './util/preference-types';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\n\n@injectable()\nexport class PreferencesContribution extends AbstractViewContribution<PreferencesWidget> {\n\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(PreferenceProvider) @named(PreferenceScope.Workspace) protected readonly workspacePreferenceProvider: WorkspacePreferenceProvider;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(ClipboardService) protected readonly clipboardService: ClipboardService;\n    @inject(PreferencesWidget) protected readonly scopeTracker: PreferencesWidget;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(QuickInputService) @optional() protected readonly quickInputService: QuickInputService;\n\n    constructor() {\n        super({\n            widgetId: PreferencesWidget.ID,\n            widgetName: PreferencesWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'main',\n            },\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(CommonCommands.OPEN_PREFERENCES, {\n            execute: async (query?: string) => {\n                const widget = await this.openView({ activate: true });\n                if (typeof query === 'string') {\n                    widget.setSearchTerm(query);\n                }\n            },\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR, {\n            isEnabled: () => true,\n            isVisible: w => this.withWidget(w, () => true),\n            execute: (preferenceId: string) => {\n                this.openPreferencesJSON(preferenceId);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.COPY_JSON_NAME, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id, value }: Preference.EditorCommandArgs) => {\n                this.clipboardService.writeText(id);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.COPY_JSON_VALUE, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id, value }: { id: string, value: string; }) => {\n                const jsonString = `\"${id}\": ${JSON.stringify(value)}`;\n                this.clipboardService.writeText(jsonString);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.RESET_PREFERENCE, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id }: Preference.EditorCommandArgs) => {\n                this.preferenceService.set(id, undefined, Number(this.scopeTracker.currentScope.scope), this.scopeTracker.currentScope.uri);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_USER_PREFERENCES, {\n            execute: async () => {\n                const widget = await this.openView({ activate: true });\n                widget.setScope(PreferenceScope.User);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_WORKSPACE_PREFERENCES, {\n            isEnabled: () => !!this.workspaceService.workspace,\n            isVisible: () => !!this.workspaceService.workspace,\n            execute: async () => {\n                const widget = await this.openView({ activate: true });\n                widget.setScope(PreferenceScope.Workspace);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_FOLDER_PREFERENCES, {\n            isEnabled: () => !!this.workspaceService.isMultiRootWorkspaceOpened && this.workspaceService.tryGetRoots().length > 0,\n            isVisible: () => !!this.workspaceService.isMultiRootWorkspaceOpened && this.workspaceService.tryGetRoots().length > 0,\n            execute: () => this.openFolderPreferences(root => {\n                this.openView({ activate: true });\n                this.scopeTracker.setScope(root.resource);\n            })\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_USER_PREFERENCES_JSON, {\n            execute: async () => this.openJson(PreferenceScope.User)\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_WORKSPACE_PREFERENCES_JSON, {\n            isEnabled: () => !!this.workspaceService.workspace,\n            isVisible: () => !!this.workspaceService.workspace,\n            execute: async () => this.openJson(PreferenceScope.Workspace)\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_FOLDER_PREFERENCES_JSON, {\n            isEnabled: () => !!this.workspaceService.isMultiRootWorkspaceOpened && this.workspaceService.tryGetRoots().length > 0,\n            isVisible: () => !!this.workspaceService.isMultiRootWorkspaceOpened && this.workspaceService.tryGetRoots().length > 0,\n            execute: () => this.openFolderPreferences(root => this.openJson(PreferenceScope.Folder, root.resource.toString()))\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.FILE_SETTINGS_SUBMENU_OPEN, {\n            commandId: CommonCommands.OPEN_PREFERENCES.id,\n            label: CommonCommands.OPEN_PREFERENCES.label,\n            order: 'a10',\n        });\n        menus.registerMenuAction(CommonMenus.SETTINGS_OPEN, {\n            commandId: CommonCommands.OPEN_PREFERENCES.id,\n            label: CommonCommands.OPEN_PREFERENCES.label,\n            order: 'a10',\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU, {\n            commandId: PreferencesCommands.RESET_PREFERENCE.id,\n            label: PreferencesCommands.RESET_PREFERENCE.label,\n            order: 'a'\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {\n            commandId: PreferencesCommands.COPY_JSON_VALUE.id,\n            label: PreferencesCommands.COPY_JSON_VALUE.label,\n            order: 'b'\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {\n            commandId: PreferencesCommands.COPY_JSON_NAME.id,\n            label: PreferencesCommands.COPY_JSON_NAME.label,\n            order: 'c'\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: CommonCommands.OPEN_PREFERENCES.id,\n            keybinding: (isOSX && !isFirefox) ? 'cmd+,' : 'ctrl+,'\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,\n            command: PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,\n            tooltip: 'Open Preferences in JSON',\n            priority: 0,\n        });\n    }\n\n    protected async openPreferencesJSON(opener: string | PreferencesWidget): Promise<void> {\n        const { scope, activeScopeIsFolder, uri } = this.scopeTracker.currentScope;\n        const scopeID = Number(scope);\n        let preferenceId = '';\n        if (typeof opener === 'string') {\n            preferenceId = opener;\n            const currentPreferenceValue = this.preferenceService.inspect(preferenceId, uri);\n            const valueInCurrentScope = Preference.getValueInScope(currentPreferenceValue, scopeID) ?? currentPreferenceValue?.defaultValue;\n            this.preferenceService.set(preferenceId, valueInCurrentScope, scopeID, uri);\n        }\n\n        let jsonEditorWidget: EditorWidget;\n        const jsonUriToOpen = await this.obtainConfigUri(scopeID, activeScopeIsFolder, uri);\n        if (jsonUriToOpen) {\n            jsonEditorWidget = await this.editorManager.open(jsonUriToOpen);\n\n            if (preferenceId) {\n                const text = jsonEditorWidget.editor.document.getText();\n                if (preferenceId) {\n                    const { index } = text.match(preferenceId)!;\n                    const numReturns = text.slice(0, index).match(new RegExp('\\n', 'g'))!.length;\n                    jsonEditorWidget.editor.cursor = { line: numReturns, character: 4 + preferenceId.length + 4 };\n                }\n            }\n        }\n    }\n\n    protected async openJson(scope: PreferenceScope, resource?: string): Promise<void> {\n        const jsonUriToOpen = await this.obtainConfigUri(scope, false, resource);\n        if (jsonUriToOpen) {\n            await this.editorManager.open(jsonUriToOpen);\n        }\n    }\n\n    /**\n     * Prompts which workspace root folder to open the JSON settings.\n     */\n    protected async openFolderPreferences(callback: (root: FileStat) => unknown): Promise<void> {\n        const roots = this.workspaceService.tryGetRoots();\n        if (roots.length === 1) {\n            callback(roots[0]);\n        } else {\n            const items: QuickPickItem[] = roots.map(root => ({\n                label: root.name,\n                description: root.resource.path.toString(),\n                execute: () => callback(root)\n            }));\n            this.quickInputService?.showQuickPick(items, { placeholder: 'Select workspace folder' });\n        }\n    }\n\n    private async obtainConfigUri(serializedScope: number, activeScopeIsFolder: boolean, resource?: string): Promise<URI | undefined> {\n        let scope: PreferenceScope = serializedScope;\n        if (activeScopeIsFolder) {\n            scope = PreferenceScope.Folder;\n        }\n        const resourceUri = !!resource ? resource : undefined;\n        const configUri = this.preferenceService.getConfigUri(scope, resourceUri);\n        if (!configUri) {\n            return undefined;\n        }\n        if (configUri && !await this.fileService.exists(configUri)) {\n            await this.fileService.create(configUri);\n        }\n        return configUri;\n    }\n\n    /**\n     * Determine if the current widget is the PreferencesWidget.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), fn: (widget: PreferencesWidget) => T): T | false {\n        if (widget instanceof PreferencesWidget && widget.id === PreferencesWidget.ID) {\n            return fn(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { InMemoryResources } from '@theia/core';\nimport { JsonSchemaRegisterContext, JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { PreferenceSchemaProvider } from '@theia/core/lib/browser/preferences/preference-contribution';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { PreferenceScope } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\nconst PREFERENCE_URI_PREFIX = 'vscode://schemas/settings/';\nconst USER_STORAGE_PREFIX = 'user-storage:/';\n\n@injectable()\nexport class PreferencesJsonSchemaContribution implements JsonSchemaContribution {\n    private serializeSchema = (scope: PreferenceScope) => JSON.stringify(this.schemaProvider.getSchema(scope));\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly schemaProvider: PreferenceSchemaProvider;\n\n    @inject(InMemoryResources)\n    protected readonly inmemoryResources: InMemoryResources;\n\n    @inject(PreferenceConfigurations)\n    protected readonly preferenceConfigurations: PreferenceConfigurations;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    registerSchemas(context: JsonSchemaRegisterContext): void {\n        this.registerSchema(PreferenceScope.Default, context);\n        this.registerSchema(PreferenceScope.User, context);\n        this.registerSchema(PreferenceScope.Workspace, context);\n        this.registerSchema(PreferenceScope.Folder, context);\n\n        this.workspaceService.updateSchema('settings', { $ref: this.getSchemaURIForScope(PreferenceScope.Workspace).toString() });\n        this.schemaProvider.onDidPreferenceSchemaChanged(() => this.updateInMemoryResources());\n    }\n\n    private registerSchema(scope: PreferenceScope, context: JsonSchemaRegisterContext): void {\n        const scopeStr = PreferenceScope[scope].toLowerCase();\n        const uri = new URI(PREFERENCE_URI_PREFIX + scopeStr);\n\n        this.inmemoryResources.add(uri, this.serializeSchema(scope));\n\n        context.registerSchema({\n            fileMatch: this.getFileMatch(scopeStr),\n            url: uri.toString()\n        });\n    }\n\n    private updateInMemoryResources(): void {\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.Default),\n            this.serializeSchema(+PreferenceScope.Default));\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.User),\n            this.serializeSchema(+PreferenceScope.User));\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.Workspace),\n            this.serializeSchema(+PreferenceScope.Workspace));\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.Folder),\n            this.serializeSchema(+PreferenceScope.Folder));\n    }\n\n    private getSchemaURIForScope(scope: PreferenceScope): URI {\n        return new URI(PREFERENCE_URI_PREFIX + PreferenceScope[scope].toLowerCase());\n    }\n\n    private getFileMatch(scope: string): string[] {\n        const baseName = this.preferenceConfigurations.getConfigName() + '.json';\n        return [baseName, new URI(USER_STORAGE_PREFIX + scope).resolve(baseName).toString()];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'settings.json'\n    ],\n    'extensions': [\n        '.theia-workspace'\n    ]\n});\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { AbstractResourcePreferenceProvider } from './abstract-resource-preference-provider';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\n\nexport const SectionPreferenceProviderUri = Symbol('SectionPreferenceProviderUri');\nexport const SectionPreferenceProviderSection = Symbol('SectionPreferenceProviderSection');\n\n/**\n * This class encapsulates the logic of using separate files for some workspace configuration like 'launch.json' or 'tasks.json'.\n * Anything that is not a contributed section will be in the main config file.\n */\n@injectable()\nexport abstract class SectionPreferenceProvider extends AbstractResourcePreferenceProvider {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(SectionPreferenceProviderUri)\n    protected readonly uri: URI;\n    @inject(SectionPreferenceProviderSection)\n    protected readonly section: string;\n    @inject(PreferenceConfigurations)\n    protected readonly preferenceConfigurations: PreferenceConfigurations;\n\n    private _isSection?: boolean;\n\n    private get isSection(): boolean {\n        if (typeof this._isSection === 'undefined') {\n            this._isSection = this.preferenceConfigurations.isSectionName(this.section);\n        }\n        return this._isSection;\n    }\n\n    protected getUri(): URI {\n        return this.uri;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected parse(content: string): any {\n        const prefs = super.parse(content);\n        if (this.isSection) {\n            if (prefs === undefined) {\n                return undefined;\n            }\n            const result: { [k: string]: unknown } = {\n\n            };\n            result[this.section] = { ...prefs };\n            return result;\n        } else {\n            return prefs;\n        }\n    }\n\n    protected getPath(preferenceName: string): string[] | undefined {\n        if (!this.isSection) {\n            return super.getPath(preferenceName);\n        }\n        if (preferenceName === this.section) {\n            return [];\n        }\n        if (preferenceName.startsWith(`${this.section}.`)) {\n            return [preferenceName.slice(this.section.length + 1)];\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceProvider, PreferenceResolveResult } from '@theia/core/lib/browser/preferences/preference-provider';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { UserStorageUri } from '@theia/userstorage/lib/browser';\nimport { UserPreferenceProvider, UserPreferenceProviderFactory } from './user-preference-provider';\n\n/**\n * Binds together preference section prefs providers for user-level preferences.\n */\n@injectable()\nexport class UserConfigsPreferenceProvider extends PreferenceProvider {\n\n    @inject(UserPreferenceProviderFactory)\n    protected readonly providerFactory: UserPreferenceProviderFactory;\n\n    @inject(PreferenceConfigurations)\n    protected readonly configurations: PreferenceConfigurations;\n\n    protected readonly providers = new Map<string, UserPreferenceProvider>();\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.createProviders();\n\n        const readyPromises: Promise<void>[] = [];\n        for (const provider of this.providers.values()) {\n            readyPromises.push(provider.ready.catch(e => console.error(e)));\n        }\n        Promise.all(readyPromises).then(() => this._ready.resolve());\n    }\n\n    protected createProviders(): void {\n        for (const configName of [...this.configurations.getSectionNames(), this.configurations.getConfigName()]) {\n            const sectionUri = UserStorageUri.resolve(configName + '.json');\n            const sectionKey = sectionUri.toString();\n            if (!this.providers.has(sectionKey)) {\n                const provider = this.createProvider(sectionUri, configName);\n                this.providers.set(sectionKey, provider);\n            }\n        }\n    }\n\n    getConfigUri(resourceUri?: string, sectionName: string = this.configurations.getConfigName()): URI | undefined {\n        for (const provider of this.providers.values()) {\n            const configUri = provider.getConfigUri(resourceUri);\n            if (configUri && this.configurations.getName(configUri) === sectionName) {\n                return configUri;\n            }\n        }\n        return undefined;\n    }\n\n    resolve<T>(preferenceName: string, resourceUri?: string): PreferenceResolveResult<T> {\n        const result: PreferenceResolveResult<T> = {};\n        for (const provider of this.providers.values()) {\n            const { value, configUri } = provider.resolve<T>(preferenceName, resourceUri);\n            if (configUri && value !== undefined) {\n                result.configUri = configUri;\n                result.value = PreferenceProvider.merge(result.value as any, value as any) as any;\n            }\n        }\n        return result;\n    }\n\n    getPreferences(resourceUri?: string): { [p: string]: any } {\n        let result = {};\n        for (const provider of this.providers.values()) {\n            const preferences = provider.getPreferences();\n            result = PreferenceProvider.merge(result, preferences) as any;\n        }\n        return result;\n    }\n\n    async setPreference(preferenceName: string, value: any, resourceUri?: string): Promise<boolean> {\n        const sectionName = preferenceName.split('.', 1)[0];\n        const defaultConfigName = this.configurations.getConfigName();\n        const configName = this.configurations.isSectionName(sectionName) ? sectionName : defaultConfigName;\n\n        const setWithConfigName = async (name: string): Promise<boolean> => {\n            for (const provider of this.providers.values()) {\n                if (this.configurations.getName(provider.getConfigUri()) === name) {\n                    if (await provider.setPreference(preferenceName, value, resourceUri)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n\n        if (await setWithConfigName(configName)) { // Try in the section we believe it belongs in.\n            return true;\n        } else if (configName !== defaultConfigName) { // Fall back to `settings.json` if that fails.\n            return setWithConfigName(defaultConfigName);\n        }\n        return false;\n    }\n\n    protected createProvider(uri: URI, sectionName: string): UserPreferenceProvider {\n        const provider = this.providerFactory(uri, sectionName);\n        this.toDispose.push(provider);\n        this.toDispose.push(provider.onDidPreferencesChanged(change => this.onDidPreferencesChangedEmitter.fire(change)));\n        return provider;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceScope } from '@theia/core/lib/browser';\nimport { SectionPreferenceProvider } from './section-preference-provider';\n\nexport const UserPreferenceProviderFactory = Symbol('UserPreferenceProviderFactory');\nexport interface UserPreferenceProviderFactory {\n    (uri: URI, section: string): UserPreferenceProvider;\n};\n\n/**\n * A @SectionPreferenceProvider that targets the user-level settings\n */\n@injectable()\nexport class UserPreferenceProvider extends SectionPreferenceProvider {\n    protected getScope(): PreferenceScope {\n        return PreferenceScope.User;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PreferenceScope, LabelProvider, codicon } from '@theia/core/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { CommandRegistry, MenuModelRegistry, Command } from '@theia/core/lib/common';\nimport { Preference, PreferenceMenus } from './preference-types';\n\n/**\n * @deprecated since 1.17.0 moved to PreferenceMenus namespace.\n */\nexport const FOLDER_SCOPE_MENU_PATH = PreferenceMenus.FOLDER_SCOPE_MENU_PATH;\n\n/**\n * @deprecated since 1.17.0. This work is now done in the PreferenceScopeTabbarWidget.\n */\n@injectable()\nexport class PreferenceScopeCommandManager {\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(MenuModelRegistry) protected readonly menuModelRegistry: MenuModelRegistry;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    protected foldersAsCommands: Command[] = [];\n\n    createFolderWorkspacesMenu(\n        folderWorkspaces: FileStat[],\n        currentFolderURI?: string,\n    ): void {\n        this.foldersAsCommands.forEach(folderCommand => {\n            this.menuModelRegistry.unregisterMenuAction(folderCommand, FOLDER_SCOPE_MENU_PATH);\n            this.commandRegistry.unregisterCommand(folderCommand);\n        });\n        this.foldersAsCommands.length = 0;\n\n        folderWorkspaces.forEach(folderWorkspace => {\n            const folderLabel = this.labelProvider.getName(folderWorkspace.resource);\n\n            const iconClass = currentFolderURI === folderWorkspace.resource.toString() ? codicon('pass') : '';\n            const newFolderAsCommand = {\n                id: `preferenceScopeCommand:${folderWorkspace.resource.toString()}`,\n                label: folderLabel,\n                iconClass: iconClass\n            };\n\n            this.foldersAsCommands.push(newFolderAsCommand);\n\n            this.commandRegistry.registerCommand(newFolderAsCommand, {\n                isVisible: (callback, check) => check === 'from-tabbar',\n                isEnabled: (callback, check) => check === 'from-tabbar',\n                execute: (callback: (scopeDetails: Preference.SelectedScopeDetails) => void) => {\n                    callback({ scope: PreferenceScope.Folder, uri: folderWorkspace.resource.toString(), activeScopeIsFolder: true });\n                }\n            });\n\n            this.menuModelRegistry.registerMenuAction(FOLDER_SCOPE_MENU_PATH, {\n                commandId: newFolderAsCommand.id,\n                label: newFolderAsCommand.label\n            });\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { CompositeTreeNode, PreferenceSchemaProvider, OVERRIDE_PROPERTY_PATTERN, PreferenceDataProperty } from '@theia/core/lib/browser';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { Emitter } from '@theia/core';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { Preference } from './preference-types';\n\nexport const COMMONLY_USED_SECTION_PREFIX = 'commonly-used';\n@injectable()\nexport class PreferenceTreeGenerator {\n\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n    @inject(PreferenceConfigurations) protected readonly preferenceConfigs: PreferenceConfigurations;\n\n    protected _root: CompositeTreeNode;\n\n    protected readonly onSchemaChangedEmitter = new Emitter<CompositeTreeNode>();\n    readonly onSchemaChanged = this.onSchemaChangedEmitter.event;\n    protected readonly commonlyUsedPreferences = [\n        'editor.autoSave', 'editor.autoSaveDelay', 'editor.fontSize',\n        'editor.fontFamily', 'editor.tabSize', 'editor.renderWhitespace',\n        'editor.cursorStyle', 'editor.multiCursorModifier', 'editor.insertSpaces',\n        'editor.wordWrap', 'files.exclude', 'files.associations'\n    ];\n    protected readonly topLevelCategories = new Map([\n        [COMMONLY_USED_SECTION_PREFIX, 'Commonly Used'],\n        ['editor', 'Text Editor'],\n        ['workbench', 'Workbench'],\n        ['window', 'Window'],\n        ['features', 'Features'],\n        ['application', 'Application'],\n        ['extensions', 'Extensions']\n    ]);\n    protected readonly sectionAssignments = new Map([\n        ['breadcrumbs', 'workbench'],\n        ['comments', 'features'],\n        ['debug', 'features'],\n        ['diffEditor', 'editor'],\n        ['explorer', 'features'],\n        ['extensions', 'features'],\n        ['files', 'editor'],\n        ['hosted-plugin', 'features'],\n        ['keyboard', 'application'],\n        ['output', 'features'],\n        ['problems', 'features'],\n        ['preview', 'features'],\n        ['search', 'features'],\n        ['task', 'features'],\n        ['terminal', 'features'],\n        ['webview', 'features'],\n        ['workspace', 'application'],\n    ]);\n    protected readonly defaultTopLevelCategory = 'extensions';\n\n    get root(): CompositeTreeNode {\n        return this._root ?? this.generateTree();\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        await this.schemaProvider.ready;\n        this.schemaProvider.onDidPreferenceSchemaChanged(() => this.handleChangedSchema());\n        this.handleChangedSchema();\n    }\n\n    generateTree(): CompositeTreeNode {\n        const preferencesSchema = this.schemaProvider.getCombinedSchema();\n        const propertyNames = Object.keys(preferencesSchema.properties);\n        const groups = new Map<string, Preference.CompositeTreeNode>();\n        const root = this.createRootNode();\n\n        for (const id of this.topLevelCategories.keys()) {\n            this.getOrCreatePreferencesGroup(id, id, root, groups);\n        }\n        const commonlyUsed = this.getOrCreatePreferencesGroup(COMMONLY_USED_SECTION_PREFIX, COMMONLY_USED_SECTION_PREFIX, root, groups);\n        for (const preference of this.commonlyUsedPreferences) {\n            if (preference in preferencesSchema.properties) {\n                this.createLeafNode(preference, commonlyUsed, preferencesSchema.properties[preference]);\n            }\n        }\n        for (const propertyName of propertyNames) {\n            if (!this.preferenceConfigs.isSectionName(propertyName) && !OVERRIDE_PROPERTY_PATTERN.test(propertyName)) {\n                const labels = propertyName.split('.');\n                const groupID = this.getGroupName(labels);\n                const subgroupName = this.getSubgroupName(labels, groupID);\n                const subgroupID = [groupID, subgroupName].join('.');\n                const toplevelParent = this.getOrCreatePreferencesGroup(groupID, groupID, root, groups);\n                const immediateParent = subgroupName && this.getOrCreatePreferencesGroup(subgroupID, groupID, toplevelParent, groups);\n                this.createLeafNode(propertyName, immediateParent || toplevelParent, preferencesSchema.properties[propertyName]);\n            }\n        }\n\n        for (const group of groups.values()) {\n            if (group.id !== `${COMMONLY_USED_SECTION_PREFIX}@${COMMONLY_USED_SECTION_PREFIX}`) {\n                (group.children as Preference.TreeNode[]).sort((a, b) => {\n                    const aIsComposite = CompositeTreeNode.is(a);\n                    const bIsComposite = CompositeTreeNode.is(b);\n                    if (aIsComposite && !bIsComposite) {\n                        return 1;\n                    }\n                    if (bIsComposite && !aIsComposite) {\n                        return -1;\n                    }\n                    return a.id.localeCompare(b.id);\n                });\n            }\n        }\n\n        this._root = root;\n        return root;\n    };\n\n    protected getGroupName(labels: string[]): string {\n        const defaultGroup = labels[0];\n        if (this.topLevelCategories.has(defaultGroup)) {\n            return defaultGroup;\n        }\n        const assignedGroup = this.sectionAssignments.get(defaultGroup);\n        if (assignedGroup) {\n            return assignedGroup;\n        }\n        return this.defaultTopLevelCategory;\n    }\n\n    protected getSubgroupName(labels: string[], computedGroupName: string): string | undefined {\n        if (computedGroupName !== labels[0]) {\n            return labels[0];\n        } else if (labels.length > 2) {\n            return labels[1];\n        }\n    }\n\n    doHandleChangedSchema(): void {\n        const newTree = this.generateTree();\n        this.onSchemaChangedEmitter.fire(newTree);\n    }\n\n    handleChangedSchema = debounce(this.doHandleChangedSchema, 200);\n\n    protected createRootNode(): CompositeTreeNode {\n        return {\n            id: 'root-node-id',\n            name: '',\n            parent: undefined,\n            visible: true,\n            children: []\n        };\n    }\n\n    protected createLeafNode(property: string, preferencesGroup: Preference.CompositeTreeNode, data: PreferenceDataProperty): Preference.LeafNode {\n        const { group } = Preference.TreeNode.getGroupAndIdFromNodeId(preferencesGroup.id);\n        const newNode = {\n            id: `${group}@${property}`,\n            preferenceId: property,\n            parent: preferencesGroup,\n            visible: true,\n            preference: { data },\n            depth: Preference.TreeNode.isTopLevel(preferencesGroup) ? 1 : 2,\n        };\n        CompositeTreeNode.addChild(preferencesGroup, newNode);\n        return newNode;\n    }\n\n    protected createPreferencesGroup(id: string, group: string, root: CompositeTreeNode): Preference.CompositeTreeNode {\n        const newNode = {\n            id: `${group}@${id}`,\n            visible: true,\n            parent: root,\n            children: [],\n            expanded: false,\n            selected: false,\n            depth: 0,\n        };\n        const isTopLevel = Preference.TreeNode.isTopLevel(newNode);\n        if (!isTopLevel) {\n            delete newNode.expanded;\n        }\n        newNode.depth = isTopLevel ? 0 : 1;\n        CompositeTreeNode.addChild(root, newNode);\n        return newNode;\n    }\n\n    getCustomLabelFor(id: string): string | undefined {\n        return this.topLevelCategories.get(id);\n    }\n\n    protected getOrCreatePreferencesGroup(id: string, group: string, root: CompositeTreeNode, groups: Map<string, Preference.CompositeTreeNode>): Preference.CompositeTreeNode {\n        const existingGroup = groups.get(id);\n        if (existingGroup) { return existingGroup; }\n        const newNode = this.createPreferencesGroup(id, group, root);\n        groups.set(id, newNode);\n        return newNode;\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { LabelProviderContribution, TreeNode } from '@theia/core/lib/browser';\nimport { Preference } from './preference-types';\nimport { PreferenceTreeGenerator } from './preference-tree-generator';\n@injectable()\nexport class PreferenceTreeLabelProvider implements LabelProviderContribution {\n    @inject(PreferenceTreeGenerator) protected readonly treeGenerator: PreferenceTreeGenerator;\n\n    canHandle(element: object): number {\n        return TreeNode.is(element) && Preference.TreeNode.is(element) ? 150 : 0;\n    }\n\n    getName(node: Preference.TreeNode): string {\n        const { id } = Preference.TreeNode.getGroupAndIdFromNodeId(node.id);\n        return this.formatString(this.treeGenerator.getCustomLabelFor(id) ?? id.split('.').pop()!);\n    }\n\n    getPrefix(node: Preference.TreeNode, fullPath = false): string | undefined {\n        const { depth } = node;\n        const { id, group } = Preference.TreeNode.getGroupAndIdFromNodeId(node.id);\n        const segments = id.split('.');\n        const segmentsHandled = group === segments[0] ? depth : depth - 1;\n        segments.pop(); // Ignore the leaf name.\n        const prefixSegments = fullPath ? segments : segments.slice(segmentsHandled);\n        if (prefixSegments.length) {\n            let output = prefixSegments.length > 1 ? `${this.formatString(prefixSegments[0])} › ` : `${this.formatString(prefixSegments[0])}: `;\n            for (const segment of prefixSegments.slice(1)) {\n                output += `${this.formatString(segment)}: `;\n            }\n            return output;\n        }\n    }\n\n    protected formatString(string: string): string {\n        let formattedString = string[0].toLocaleUpperCase();\n        for (let i = 1; i < string.length; i++) {\n            if (this.isUpperCase(string[i]) && !/\\s/.test(string[i - 1]) && !this.isUpperCase(string[i - 1])) {\n                formattedString += ' ';\n            }\n            formattedString += string[i];\n        }\n        return formattedString.trim();\n    }\n\n    protected isUpperCase(char: string): boolean {\n        return char === char.toLocaleUpperCase() && char.toLocaleLowerCase() !== char.toLocaleUpperCase();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {\n    PreferenceDataProperty,\n    PreferenceScope,\n    TreeNode as BaseTreeNode,\n    CompositeTreeNode as BaseCompositeTreeNode,\n    PreferenceInspection,\n} from '@theia/core/lib/browser';\nimport { Command, MenuPath } from '@theia/core';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\n\nexport namespace Preference {\n\n    export interface EditorCommandArgs {\n        id: string;\n        value: string | undefined;\n    }\n\n    export namespace EditorCommandArgs {\n        export function is(prefObject: EditorCommandArgs): prefObject is EditorCommandArgs {\n            return !!prefObject && 'id' in prefObject && 'value' in prefObject;\n        }\n    }\n\n    export const Node = Symbol('Preference.Node');\n    export type Node = TreeNode;\n\n    export type TreeNode = CompositeTreeNode | LeafNode;\n\n    export namespace TreeNode {\n        export const is = (node: BaseTreeNode | TreeNode): node is TreeNode => 'depth' in node;\n        export const isTopLevel = (node: BaseTreeNode): boolean => {\n            const { group, id } = getGroupAndIdFromNodeId(node.id);\n            return group === id;\n        };\n        export const getGroupAndIdFromNodeId = (nodeId: string): { group: string; id: string } => {\n            const separator = nodeId.indexOf('@');\n            const group = nodeId.substring(0, separator);\n            const id = nodeId.substring(separator + 1, nodeId.length);\n            return { group, id };\n        };\n    }\n\n    export interface CompositeTreeNode extends BaseCompositeTreeNode {\n        depth: number;\n    }\n\n    export interface LeafNode extends BaseTreeNode {\n        depth: number;\n        preference: { data: PreferenceDataProperty };\n    }\n\n    export namespace LeafNode {\n        export const is = (node: BaseTreeNode | LeafNode): node is LeafNode => 'preference' in node && !!node.preference.data;\n    }\n\n    export const getValueInScope = <T extends JSONValue>(preferenceInfo: PreferenceInspection<T> | undefined, scope: number): T | undefined => {\n        if (!preferenceInfo) {\n            return undefined;\n        }\n        switch (scope) {\n            case PreferenceScope.User:\n                return preferenceInfo.globalValue;\n            case PreferenceScope.Workspace:\n                return preferenceInfo.workspaceValue;\n            case PreferenceScope.Folder:\n                return preferenceInfo.workspaceFolderValue;\n            default:\n                return undefined;\n        }\n    };\n\n    export interface SelectedScopeDetails {\n        scope: number;\n        uri: string | undefined;\n        activeScopeIsFolder: boolean;\n    };\n\n    export const DEFAULT_SCOPE: SelectedScopeDetails = {\n        scope: PreferenceScope.User,\n        uri: undefined,\n        activeScopeIsFolder: false\n    };\n\n    /**\n     * @deprecated since 1.15.0 this type is no longer used.\n     */\n    export interface ContextMenuCallbacks {\n        resetCallback(): void;\n        copyIDCallback(): void;\n        copyJSONCallback(): void;\n    }\n}\n\nexport namespace PreferencesCommands {\n    export const OPEN_PREFERENCES_JSON_TOOLBAR: Command = {\n        id: 'preferences:openJson.toolbar',\n        iconClass: 'codicon codicon-json'\n    };\n    export const COPY_JSON_NAME: Command = {\n        id: 'preferences:copyJson.name',\n        label: 'Copy Setting ID'\n    };\n    export const RESET_PREFERENCE: Command = {\n        id: 'preferences:reset',\n        label: 'Reset Setting'\n    };\n\n    export const COPY_JSON_VALUE: Command = {\n        id: 'preferences:copyJson.value',\n        label: 'Copy Setting as JSON',\n    };\n\n    export const OPEN_USER_PREFERENCES: Command = {\n        id: 'workbench.action.openGlobalSettings',\n        category: 'Preferences',\n        label: 'Open User Preferences',\n    };\n\n    export const OPEN_WORKSPACE_PREFERENCES: Command = {\n        id: 'workbench.action.openWorkspaceSettings',\n        category: 'Preferences',\n        label: 'Open Workspace Preferences',\n    };\n\n    export const OPEN_FOLDER_PREFERENCES: Command = {\n        id: 'workbench.action.openFolderSettings',\n        category: 'Preferences',\n        label: 'Open Folder Preferences'\n    };\n\n    export const OPEN_USER_PREFERENCES_JSON: Command = {\n        id: 'workbench.action.openSettingsJson',\n        category: 'Preferences',\n        label: 'Open Preferences (JSON)'\n    };\n\n    export const OPEN_WORKSPACE_PREFERENCES_JSON: Command = {\n        id: 'workbench.action.openWorkspaceSettingsFile',\n        category: 'Preferences',\n        label: 'Open Workspace Preferences (JSON)',\n    };\n\n    export const OPEN_FOLDER_PREFERENCES_JSON: Command = {\n        id: 'workbench.action.openFolderSettingsFile',\n        category: 'Preferences',\n        label: 'Open Folder Preferences (JSON)',\n    };\n}\n\nexport namespace PreferenceMenus {\n    export const PREFERENCE_EDITOR_CONTEXT_MENU: MenuPath = ['preferences:editor.contextMenu'];\n    export const PREFERENCE_EDITOR_COPY_ACTIONS: MenuPath = [...PREFERENCE_EDITOR_CONTEXT_MENU, 'preferences:editor.contextMenu.copy'];\n    export const FOLDER_SCOPE_MENU_PATH = ['preferences:scope.menu'];\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { codiconArray } from '@theia/core/lib/browser';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\n\n@injectable()\nexport class PreferenceArrayInputRenderer extends PreferenceLeafNodeRenderer<string[], HTMLInputElement> {\n    existingValues = new Map<string, { node: HTMLElement, index: number }>();\n    wrapper: HTMLElement;\n    inputWrapper: HTMLElement;\n\n    protected createInteractable(parent: HTMLElement): void {\n        const wrapper = document.createElement('ul');\n        wrapper.classList.add('preference-array');\n        this.wrapper = wrapper;\n        const currentValue = this.getValue();\n        if (Array.isArray(currentValue)) {\n            for (const [index, value] of currentValue.entries()) {\n                const node = this.createExistingValue(value);\n                wrapper.appendChild(node);\n                this.existingValues.set(value, { node, index });\n            }\n        }\n        const inputWrapper = this.createInput();\n        wrapper.appendChild(inputWrapper);\n        parent.appendChild(wrapper);\n    }\n\n    protected getFallbackValue(): string[] {\n        return [];\n    }\n\n    protected createExistingValue(value: string): HTMLElement {\n        const existingValue = document.createElement('li');\n        existingValue.classList.add('preference-array-element');\n        const valueWrapper = document.createElement('span');\n        valueWrapper.classList.add('preference-array-element-val');\n        valueWrapper.textContent = value;\n        existingValue.appendChild(valueWrapper);\n        const iconWrapper = document.createElement('span');\n        iconWrapper.classList.add('preference-array-element-btn', 'remove-btn');\n        const handler = this.removeItem.bind(this, value);\n        iconWrapper.onclick = handler;\n        iconWrapper.onkeydown = handler;\n        iconWrapper.setAttribute('role', 'button');\n        iconWrapper.tabIndex = 0;\n        existingValue.appendChild(iconWrapper);\n        const icon = document.createElement('i');\n        icon.classList.add(...codiconArray('close'));\n        iconWrapper.appendChild(icon);\n        return existingValue;\n    }\n\n    protected createInput(): HTMLElement {\n        const inputWrapper = document.createElement('li');\n        this.inputWrapper = inputWrapper;\n        const input = document.createElement('input');\n        inputWrapper.appendChild(input);\n        this.interactable = input;\n        input.classList.add('preference-array-input', 'theia-input');\n        input.type = 'text';\n        input.placeholder = 'Add Value...';\n        input.spellcheck = false;\n        input.onkeydown = this.handleEnter.bind(this);\n        input.setAttribute('aria-label', 'Preference String Input');\n        const iconWrapper = document.createElement('span');\n        inputWrapper.appendChild(iconWrapper);\n        iconWrapper.classList.add('preference-array-element-btn', ...codiconArray('add'));\n        iconWrapper.setAttribute('role', 'button');\n        const handler = this.addItem.bind(this);\n        iconWrapper.onclick = handler;\n        iconWrapper.onkeydown = handler;\n        iconWrapper.tabIndex = 0;\n        iconWrapper.setAttribute('aria-label', 'Submit Preference Input');\n        return inputWrapper;\n    }\n\n    protected doHandleValueChange(): void {\n        this.updateInspection();\n        const values = this.getValue();\n        const newValues = new Set(...values);\n        for (const [value, row] of this.existingValues.entries()) {\n            if (!newValues.has(value)) {\n                row.node.remove();\n                this.existingValues.delete(value);\n            }\n        }\n        for (const [index, value] of values.entries()) {\n            let row = this.existingValues.get(value);\n            if (row) {\n                row.index = index;\n            } else {\n                row = { node: this.createExistingValue(value), index };\n                this.existingValues.set(value, row);\n            }\n\n            if (this.wrapper.children[index] !== row.node) {\n                this.wrapper.children[index].insertAdjacentElement('beforebegin', row.node);\n            }\n        }\n        this.updateModificationStatus();\n    }\n\n    protected removeItem(value: string): void {\n        const row = this.existingValues.get(value);\n        if (row) {\n            row.node.remove();\n            this.existingValues.delete(value);\n            this.setPreferenceImmediately(this.getOrderedValues());\n        }\n    }\n\n    protected handleEnter(e: KeyboardEvent): void {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.addItem();\n        }\n    }\n\n    protected addItem(): void {\n        const newItem = this.interactable.value;\n        if (newItem && !this.existingValues.has(newItem)) {\n            const node = this.createExistingValue(newItem);\n            this.inputWrapper.insertAdjacentElement('beforebegin', node);\n            this.existingValues.set(newItem, { node, index: this.existingValues.size });\n            this.setPreferenceImmediately(this.getOrderedValues());\n        }\n        this.interactable.value = '';\n    }\n\n    protected getOrderedValues(): string[] {\n        return Array.from(this.existingValues.entries())\n            .sort(([, a], [, b]) => a.index - b.index)\n            .map(([value]) => value);\n    }\n\n    dispose(): void {\n        this.existingValues.clear();\n        super.dispose();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\n\n@injectable()\nexport class PreferenceBooleanInputRenderer extends PreferenceLeafNodeRenderer<boolean, HTMLInputElement> {\n    protected createInteractable(parent: HTMLElement): void {\n        const interactable = document.createElement('input');\n        this.interactable = interactable;\n        interactable.type = 'checkbox';\n        interactable.classList.add('theia-input');\n        interactable.defaultChecked = this.getValue();\n        interactable.onchange = this.handleUserInteraction.bind(this);\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): false {\n        return false;\n    }\n\n    protected handleUserInteraction(): Promise<void> {\n        return this.setPreferenceImmediately(this.interactable.checked);\n    }\n\n    protected doHandleValueChange(): void {\n        const currentValue = this.interactable.checked;\n        this.updateInspection();\n        const newValue = this.getValue();\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue && document.activeElement !== this.interactable) {\n            this.interactable.checked = newValue;\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { CommandService } from '@theia/core/lib/common';\nimport { PreferencesCommands } from '../../util/preference-types';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\n\n@injectable()\nexport class PreferenceJSONLinkRenderer extends PreferenceLeafNodeRenderer<JSONValue, HTMLAnchorElement> {\n    @inject(CommandService) protected readonly commandService: CommandService;\n\n    protected createInteractable(parent: HTMLElement): void {\n        const message = 'Edit in settings.json';\n        const interactable = document.createElement('a');\n        this.interactable = interactable;\n        interactable.classList.add('theia-json-input');\n        interactable.setAttribute('role', 'button');\n        interactable.title = message;\n        interactable.textContent = message;\n        interactable.onclick = this.handleUserInteraction.bind(this);\n        interactable.onkeydown = this.handleUserInteraction.bind(this);\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): JSONValue {\n        const node = this.preferenceNode;\n        const type = Array.isArray(node.preference.data.type) ? node.preference.data.type[0] : node.preference.data.type;\n        switch (type) {\n            case 'object':\n                return {};\n            case 'array':\n                return [];\n            case 'null':\n                return null; // eslint-disable-line no-null/no-null\n            default: // Should all be handled by other input types.\n                return '';\n        }\n    }\n\n    protected doHandleValueChange(): void {\n        this.updateInspection();\n        this.updateModificationStatus();\n    }\n\n    protected handleUserInteraction(): void {\n        this.commandService.executeCommand(PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id, this.id);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { PreferenceService, ContextMenuRenderer, PreferenceInspection, PreferenceScope, PreferenceProvider } from '@theia/core/lib/browser';\nimport { Preference, PreferenceMenus } from '../../util/preference-types';\nimport { PreferenceTreeLabelProvider } from '../../util/preference-tree-label-provider';\nimport { PreferencesScopeTabBar } from '../preference-scope-tabbar-widget';\nimport { Disposable } from '@theia/core/lib/common';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { PreferenceTreeModel } from '../../preference-tree-model';\nimport { PreferencesSearchbarWidget } from '../preference-searchbar-widget';\n\nexport const PreferenceNodeRendererFactory = Symbol('PreferenceNodeRendererFactory');\nexport type PreferenceNodeRendererFactory = (node: Preference.TreeNode) => PreferenceNodeRenderer;\nexport const HEADER_CLASS = 'settings-section-category-title';\nexport const SUBHEADER_CLASS = 'settings-section-subcategory-title';\n\nexport interface GeneralPreferenceNodeRenderer extends Disposable {\n    node: HTMLElement;\n    id: string;\n    group: string;\n    nodeId: string;\n    visible: boolean;\n    insertBefore(nextSibling: HTMLElement): void;\n    insertAfter(previousSibling: HTMLElement): void;\n    appendTo(parent: HTMLElement): void;\n    prependTo(parent: HTMLElement): void;\n    handleValueChange?(): void;\n    handleSearchChange?(isFiltered?: boolean): void;\n    handleScopeChange?(isFiltered?: boolean): void;\n    hide(): void;\n    show(): void;\n}\n\n@injectable()\nexport abstract class PreferenceNodeRenderer implements Disposable, GeneralPreferenceNodeRenderer {\n    @inject(Preference.Node) protected readonly preferenceNode: Preference.Node;\n    @inject(PreferenceTreeLabelProvider) protected readonly labelProvider: PreferenceTreeLabelProvider;\n\n    protected attached = false;\n\n    _id: string;\n    _group: string;\n    _subgroup: string;\n    protected domNode: HTMLElement;\n\n    get node(): HTMLElement {\n        return this.domNode;\n    }\n\n    get nodeId(): string {\n        return this.preferenceNode.id;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    get group(): string {\n        return this._group;\n    }\n\n    get visible(): boolean {\n        return !this.node.classList.contains('hidden');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.setId();\n        this.domNode = this.createDomNode();\n    }\n\n    protected setId(): void {\n        const { id, group } = Preference.TreeNode.getGroupAndIdFromNodeId(this.preferenceNode.id);\n        const segments = id.split('.');\n        this._id = id;\n        this._group = group;\n        this._subgroup = (group === segments[0] ? segments[1] : segments[0]) ?? '';\n    }\n\n    protected abstract createDomNode(): HTMLElement;\n\n    insertBefore(nextSibling: HTMLElement): void {\n        nextSibling.insertAdjacentElement('beforebegin', this.domNode);\n        this.attached = true;\n    }\n\n    insertAfter(previousSibling: HTMLElement): void {\n        previousSibling.insertAdjacentElement('afterend', this.domNode);\n    }\n\n    appendTo(parent: HTMLElement): void {\n        parent.appendChild(this.domNode);\n    }\n\n    prependTo(parent: HTMLElement): void {\n        parent.prepend(this.domNode);\n    }\n\n    hide(): void {\n        this.domNode.classList.add('hidden');\n    }\n\n    show(): void {\n        this.domNode.classList.remove('hidden');\n    }\n\n    dispose(): void {\n        this.domNode.remove();\n    }\n}\n\nexport class PreferenceHeaderRenderer extends PreferenceNodeRenderer {\n    protected createDomNode(): HTMLElement {\n        const wrapper = document.createElement('ul');\n        wrapper.className = 'settings-section';\n        wrapper.id = `${this.preferenceNode.id}-editor`;\n        const isCategory = Preference.TreeNode.isTopLevel(this.preferenceNode);\n        const hierarchyClassName = isCategory ? HEADER_CLASS : SUBHEADER_CLASS;\n        const name = this.labelProvider.getName(this.preferenceNode);\n        const label = document.createElement('li');\n        label.classList.add('settings-section-title', hierarchyClassName);\n        label.textContent = name;\n        wrapper.appendChild(label);\n        return wrapper;\n    }\n}\n\n@injectable()\nexport abstract class PreferenceLeafNodeRenderer<ValueType extends JSONValue, InteractableType extends HTMLElement>\n    extends PreferenceNodeRenderer\n    implements Required<GeneralPreferenceNodeRenderer> {\n    @inject(Preference.Node) protected readonly preferenceNode: Preference.LeafNode;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(ContextMenuRenderer) protected readonly menuRenderer: ContextMenuRenderer;\n    @inject(PreferencesScopeTabBar) protected readonly scopeTracker: PreferencesScopeTabBar;\n    @inject(PreferenceTreeModel) protected readonly model: PreferenceTreeModel;\n    @inject(PreferencesSearchbarWidget) protected readonly searchbar: PreferencesSearchbarWidget;\n\n    protected headlineWrapper: HTMLDivElement;\n    protected gutter: HTMLDivElement;\n    protected interactable: InteractableType;\n    protected inspection: PreferenceInspection<ValueType> | undefined;\n    protected isModifiedFromDefault = false;\n\n    @postConstruct()\n    protected init(): void {\n        this.setId();\n        this.updateInspection();\n        this.domNode = this.createDomNode();\n        this.updateModificationStatus();\n    }\n\n    protected updateInspection(): void {\n        this.inspection = this.preferenceService.inspect<ValueType>(this.id, this.scopeTracker.currentScope.uri);\n    }\n\n    protected createDomNode(): HTMLLIElement {\n        const wrapper = document.createElement('li');\n        wrapper.classList.add('single-pref');\n        wrapper.id = `${this.id}-editor`;\n        wrapper.setAttribute('data-pref-id', this.id);\n        wrapper.setAttribute('data-node-id', this.preferenceNode.id);\n\n        const headlineWrapper = document.createElement('div');\n        headlineWrapper.classList.add('pref-name');\n        headlineWrapper.title = this.id;\n        this.headlineWrapper = headlineWrapper;\n        wrapper.appendChild(headlineWrapper);\n\n        this.updateHeadline();\n\n        const gutter = document.createElement('div');\n        gutter.classList.add('pref-context-gutter');\n        this.gutter = gutter;\n        wrapper.appendChild(gutter);\n\n        const cog = document.createElement('i');\n        cog.className = 'codicon codicon-settings-gear settings-context-menu-btn';\n        cog.setAttribute('aria-label', 'Open Context Menu');\n        cog.setAttribute('role', 'button');\n        cog.onclick = this.handleCogAction.bind(this);\n        cog.onkeydown = this.handleCogAction.bind(this);\n        cog.title = 'More actions...';\n        gutter.appendChild(cog);\n\n        const activeType = Array.isArray(this.preferenceNode.preference.data.type) ? this.preferenceNode.preference.data.type[0] : this.preferenceNode.preference.data.type;\n        const contentWrapper = document.createElement('div');\n        contentWrapper.classList.add('pref-content-container', activeType ?? 'open-json');\n        wrapper.appendChild(contentWrapper);\n\n        const { description, markdownDescription } = this.preferenceNode.preference.data;\n        const descriptionToUse = markdownDescription || description;\n        if (descriptionToUse) {\n            const descriptionWrapper = document.createElement('div');\n            descriptionWrapper.classList.add('pref-description');\n            descriptionWrapper.textContent = descriptionToUse;\n            contentWrapper.appendChild(descriptionWrapper);\n        }\n\n        const interactableWrapper = document.createElement('div');\n        interactableWrapper.classList.add('pref-input');\n        contentWrapper.appendChild(interactableWrapper);\n        this.createInteractable(interactableWrapper);\n\n        return wrapper;\n    }\n\n    protected handleCogAction({ currentTarget }: KeyboardEvent | MouseEvent): void {\n        const value = Preference.getValueInScope(this.inspection, this.scopeTracker.currentScope.scope) ?? this.inspection?.defaultValue;\n        const target = currentTarget as HTMLElement | undefined;\n        if (target && value !== undefined) {\n            this.showCog();\n            const domRect = target.getBoundingClientRect();\n            this.menuRenderer.render({\n                menuPath: PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU,\n                anchor: { x: domRect.left, y: domRect.bottom },\n                args: [{ id: this.id, value }],\n                onHide: () => this.hideCog()\n            });\n        }\n    }\n\n    protected addModifiedMarking(): void {\n        this.gutter.classList.add('theia-mod-item-modified');\n    }\n\n    protected removeModifiedMarking(): void {\n        this.gutter.classList.remove('theia-mod-item-modified');\n    }\n\n    protected showCog(): void {\n        this.gutter.classList.add('show-cog');\n    }\n\n    protected hideCog(): void {\n        this.gutter.classList.remove('show-cog');\n    }\n\n    protected updateModificationStatus(knownCurrentValue?: JSONValue): void {\n        const wasModified = this.isModifiedFromDefault;\n        const { inspection } = this;\n        const valueInCurrentScope = knownCurrentValue ?? Preference.getValueInScope(inspection, this.scopeTracker.currentScope.scope);\n        this.isModifiedFromDefault = valueInCurrentScope !== undefined && !PreferenceProvider.deepEqual(valueInCurrentScope, inspection?.defaultValue);\n        if (wasModified !== this.isModifiedFromDefault) {\n            this.gutter.classList.toggle('theia-mod-item-modified', this.isModifiedFromDefault);\n        }\n    }\n\n    protected updateHeadline(filtered = this.model.isFiltered): void {\n        const { headlineWrapper } = this;\n        if (this.headlineWrapper.childElementCount === 0) {\n            const name = this.labelProvider.getName(this.preferenceNode);\n            const nameWrapper = document.createElement('span');\n            nameWrapper.classList.add('preference-leaf-headline-name');\n            nameWrapper.textContent = name;\n            headlineWrapper.appendChild(nameWrapper);\n        }\n        const prefix = this.labelProvider.getPrefix(this.preferenceNode, filtered);\n        const currentFirstChild = headlineWrapper.children[0];\n        const currentFirstChildIsPrefix = currentFirstChild.classList.contains('preference-leaf-headline-prefix');\n        if (prefix) {\n            let prefixWrapper;\n            if (currentFirstChildIsPrefix) {\n                prefixWrapper = currentFirstChild;\n            } else {\n                prefixWrapper = document.createElement('span');\n                prefixWrapper.classList.add('preference-leaf-headline-prefix');\n                headlineWrapper.insertBefore(prefixWrapper, currentFirstChild);\n            }\n            prefixWrapper.textContent = prefix;\n        } else if (currentFirstChildIsPrefix) {\n            headlineWrapper.removeChild(currentFirstChild);\n        }\n\n        const currentLastChild = headlineWrapper.lastChild as HTMLElement;\n        if (currentLastChild.classList.contains('preference-leaf-headline-suffix')) {\n            this.compareOtherModifiedScopes(headlineWrapper, currentLastChild);\n        } else {\n            this.createOtherModifiedScopes(headlineWrapper);\n        }\n    }\n\n    protected compareOtherModifiedScopes(headlineWrapper: HTMLDivElement, currentSuffix: HTMLElement): void {\n        const modifiedScopes = this.getModifiedScopesAsStrings();\n        if (modifiedScopes.length === 0) {\n            headlineWrapper.removeChild(currentSuffix);\n        } else {\n\n            const modifiedMessagePrefix = currentSuffix.children[0] as HTMLElement;\n            const newMessagePrefix = this.getModifiedMessagePrefix();\n            if (modifiedMessagePrefix.textContent !== newMessagePrefix) {\n                modifiedMessagePrefix.textContent = newMessagePrefix;\n            }\n\n            const [firstModifiedScope, secondModifiedScope] = modifiedScopes;\n\n            const firstScopeMessage = currentSuffix.children[1] as HTMLElement;\n            const secondScopeMessage = currentSuffix.children[2] as HTMLElement;\n            firstScopeMessage.children[0].textContent = PreferenceScope[firstModifiedScope];\n            this.addEventHandlerToModifiedScope(firstModifiedScope, firstScopeMessage.children[0] as HTMLElement);\n            if (modifiedScopes.length === 1 && secondScopeMessage) {\n                currentSuffix.removeChild(secondScopeMessage);\n            } else if (modifiedScopes.length === 2 && !secondScopeMessage) {\n                const newSecondMessage = this.createModifiedScopeMessage(secondModifiedScope);\n                currentSuffix.appendChild(newSecondMessage);\n            }\n            // If both scopes are modified and both messages are present, do nothing.\n        }\n    }\n\n    protected createOtherModifiedScopes(headlineWrapper: HTMLDivElement): void {\n        const modifiedScopes = this.getModifiedScopesAsStrings();\n        if (modifiedScopes.length !== 0) {\n            const wrapper = document.createElement('i');\n            wrapper.classList.add('preference-leaf-headline-suffix');\n            headlineWrapper.appendChild(wrapper);\n\n            const messagePrefix = this.getModifiedMessagePrefix();\n            const messageWrapper = document.createElement('span');\n            messageWrapper.classList.add('preference-other-modified-scope-alert');\n            messageWrapper.textContent = messagePrefix;\n            wrapper.appendChild(messageWrapper);\n            modifiedScopes.forEach((scopeName, i) => {\n                const scopeWrapper = this.createModifiedScopeMessage(scopeName);\n                wrapper.appendChild(scopeWrapper);\n            });\n        }\n    }\n\n    protected createModifiedScopeMessage(scope: PreferenceScope): HTMLSpanElement {\n        const scopeWrapper = document.createElement('span');\n        scopeWrapper.classList.add('preference-modified-scope-wrapper');\n        const scopeInteractable = document.createElement('span');\n        scopeInteractable.classList.add('preference-scope-underlined');\n        const scopeName = PreferenceScope[scope];\n        this.addEventHandlerToModifiedScope(scope, scopeInteractable);\n        scopeInteractable.textContent = scopeName;\n        scopeWrapper.appendChild(scopeInteractable);\n        return scopeWrapper;\n    }\n\n    protected getModifiedMessagePrefix(): string {\n        return this.isModifiedFromDefault ? 'Also modified in: ' : 'Modified in: ';\n    }\n\n    protected addEventHandlerToModifiedScope(scope: PreferenceScope, scopeWrapper: HTMLElement): void {\n        if (scope === PreferenceScope.User || scope === PreferenceScope.Workspace) {\n            const eventHandler = () => {\n                this.scopeTracker.setScope(scope);\n                this.searchbar.updateSearchTerm(this.id);\n            };\n            scopeWrapper.onclick = eventHandler;\n            scopeWrapper.onkeydown = eventHandler;\n            scopeWrapper.tabIndex = 0;\n        } else {\n            scopeWrapper.onclick = null; // eslint-disable-line no-null/no-null\n            scopeWrapper.onkeydown = null; // eslint-disable-line no-null/no-null\n            scopeWrapper.tabIndex = -1;\n        }\n    }\n\n    protected getModifiedScopesAsStrings(): PreferenceScope[] {\n        const currentScopeInView = this.scopeTracker.currentScope.scope;\n        const { inspection } = this;\n        const modifiedScopes = [];\n        if (inspection) {\n            for (const otherScope of [PreferenceScope.User, PreferenceScope.Workspace]) {\n                if (otherScope !== currentScopeInView) {\n                    const valueInOtherScope = Preference.getValueInScope(inspection, otherScope);\n                    if (valueInOtherScope !== undefined && !PreferenceProvider.deepEqual(valueInOtherScope, inspection.defaultValue)) {\n                        modifiedScopes.push(otherScope);\n                    }\n                }\n            }\n        }\n        return modifiedScopes;\n    }\n\n    protected getValue(): ValueType {\n        let currentValue = Preference.getValueInScope(this.inspection, this.scopeTracker.currentScope.scope);\n        if (currentValue === undefined) {\n            currentValue = this.inspection?.defaultValue;\n        }\n        return currentValue ?? this.getFallbackValue();\n    }\n\n    protected setPreferenceWithDebounce = debounce(this.setPreferenceImmediately.bind(this), 500, { leading: false, trailing: true });\n\n    protected setPreferenceImmediately(value: ValueType | undefined): Promise<void> {\n        return this.preferenceService.set(this.id, value, this.scopeTracker.currentScope.scope, this.scopeTracker.currentScope.uri);\n    }\n\n    handleSearchChange(isFiltered = this.model.isFiltered): void {\n        this.updateHeadline(isFiltered);\n    }\n\n    handleScopeChange(isFiltered = this.model.isFiltered): void {\n        this.handleValueChange();\n        this.updateHeadline(isFiltered);\n    }\n\n    handleValueChange(): void {\n        this.doHandleValueChange();\n        this.updateHeadline();\n    }\n\n    protected abstract createInteractable(container: HTMLElement): void;\n    protected abstract getFallbackValue(): ValueType;\n    protected abstract doHandleValueChange(): void;\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\n\ninterface PreferenceNumberInputValidation {\n    /**\n     * the numeric value of the input. `NaN` if there is an error.\n     */\n    value: number;\n    /**\n     * the error message to display.\n     */\n    message: string;\n}\n\n@injectable()\nexport class PreferenceNumberInputRenderer extends PreferenceLeafNodeRenderer<number, HTMLInputElement> {\n\n    protected _errorMessage: HTMLElement | undefined;\n    protected interactableWrapper: HTMLElement;\n\n    get errorMessage(): HTMLElement {\n        if (!this._errorMessage) {\n            const errorMessage = document.createElement('div');\n            errorMessage.classList.add('pref-error-notification');\n            this._errorMessage = errorMessage;\n        }\n        return this._errorMessage;\n    }\n\n    protected createInteractable(parent: HTMLElement): void {\n        const interactableWrapper = document.createElement('div');\n        this.interactableWrapper = interactableWrapper;\n        interactableWrapper.classList.add('pref-input-container');\n        const interactable = document.createElement('input');\n        this.interactable = interactable;\n        interactable.type = 'number';\n        interactable.classList.add('theia-input');\n        interactable.defaultValue = this.getValue().toString();\n        interactable.oninput = this.handleUserInteraction.bind(this);\n        interactable.onblur = this.handleBlur.bind(this);\n        interactableWrapper.appendChild(interactable);\n        parent.appendChild(interactableWrapper);\n    }\n\n    protected getFallbackValue(): number {\n        return 0;\n    }\n\n    protected handleUserInteraction(): void {\n        const { value, message } = this.getInputValidation(this.interactable.value);\n        if (isNaN(value)) {\n            this.showErrorMessage(message);\n        } else {\n            this.hideErrorMessage();\n            this.setPreferenceWithDebounce(value);\n        }\n    }\n\n    protected async handleBlur(): Promise<void> {\n        this.hideErrorMessage();\n        await this.setPreferenceWithDebounce.flush();\n        this.handleValueChange();\n    }\n\n    protected doHandleValueChange(): void {\n        const { value } = this.interactable;\n        const currentValue = value.length ? Number(value) : NaN;\n        this.updateInspection();\n        const newValue = this.getValue();\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue) {\n            if (document.activeElement !== this.interactable) {\n                this.interactable.value = newValue.toString();\n            } else {\n                this.handleUserInteraction(); // give priority to the value of the input if it is focused.\n            }\n        }\n    }\n\n    protected getInputValidation(input: string): PreferenceNumberInputValidation {\n        const { preference: { data } } = this.preferenceNode;\n        const inputValue = Number(input);\n        const errorMessages: string[] = [];\n\n        if (input === '' || isNaN(inputValue)) {\n            return { value: NaN, message: 'Value must be a number.' };\n        }\n        if (data.minimum && inputValue < data.minimum) {\n            errorMessages.push(`Value must be greater than or equal to ${data.minimum}.`);\n        };\n        if (data.maximum && inputValue > data.maximum) {\n            errorMessages.push(`Value must be less than or equal to ${data.maximum}.`);\n        };\n        if (data.type === 'integer' && !Number.isInteger(inputValue)) {\n            errorMessages.push('Value must be an integer.');\n        }\n\n        return {\n            value: errorMessages.length ? NaN : inputValue,\n            message: errorMessages.join(' ')\n        };\n    }\n\n    protected showErrorMessage(message: string): void {\n        this.errorMessage.textContent = message;\n        this.interactableWrapper.appendChild(this.errorMessage);\n    }\n\n    protected hideErrorMessage(): void {\n        this.errorMessage.remove();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\nimport { injectable } from '@theia/core/shared/inversify';\n\n@injectable()\nexport class PreferenceSelectInputRenderer extends PreferenceLeafNodeRenderer<string, HTMLSelectElement> {\n    protected createInteractable(parent: HTMLElement): void {\n        const options = this.preferenceNode.preference.data.enum!;\n        const interactable = document.createElement('select');\n        this.interactable = interactable;\n        interactable.classList.add('theia-select');\n        interactable.onchange = this.handleUserInteraction.bind(this);\n        for (const value of options) {\n            const option = document.createElement('option');\n            option.value = value;\n            option.textContent = value;\n            interactable.appendChild(option);\n        }\n        interactable.value = this.getValue();\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): string {\n        return this.preferenceNode.preference.data.enum![0];\n    }\n\n    protected doHandleValueChange(): void {\n        const currentValue = this.interactable.value || undefined;\n        this.updateInspection();\n        const newValue = this.getValue();\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue && document.activeElement !== this.interactable) {\n            this.interactable.value = newValue;\n        }\n    }\n\n    protected handleUserInteraction(): void {\n        this.setPreferenceImmediately(this.interactable.value || undefined);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\n\n@injectable()\nexport class PreferenceStringInputRenderer extends PreferenceLeafNodeRenderer<string, HTMLInputElement> {\n    protected createInteractable(parent: HTMLElement): void {\n        const interactable = document.createElement('input');\n        this.interactable = interactable;\n        interactable.type = 'text';\n        interactable.spellcheck = false;\n        interactable.classList.add('theia-input');\n        interactable.defaultValue = this.getValue();\n        interactable.oninput = this.handleUserInteraction.bind(this);\n        interactable.onblur = this.handleBlur.bind(this);\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    protected doHandleValueChange(): void {\n        const currentValue = this.interactable.value;\n        this.updateInspection();\n        const newValue = this.getValue();\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue) {\n            if (document.activeElement !== this.interactable) {\n                this.interactable.value = newValue;\n            } else {\n                this.handleUserInteraction(); // give priority to the value of the input if it is focused.\n            }\n        }\n    }\n\n    protected handleUserInteraction(): void {\n        this.setPreferenceWithDebounce(this.interactable.value);\n    }\n\n    protected async handleBlur(): Promise<void> {\n        await this.setPreferenceWithDebounce.flush();\n        this.handleValueChange();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { postConstruct, injectable, inject } from '@theia/core/shared/inversify';\nimport throttle = require('@theia/core/shared/lodash.throttle');\nimport {\n    PreferenceService,\n    CompositeTreeNode,\n    SelectableTreeNode,\n    StatefulWidget,\n    TopDownTreeIterator,\n    PreferenceChanges,\n    ExpandableTreeNode,\n} from '@theia/core/lib/browser';\nimport { unreachable } from '@theia/core/lib/common';\nimport { BaseWidget, DEFAULT_SCROLL_OPTIONS, } from '@theia/core/lib/browser/widgets/widget';\nimport { PreferenceTreeModel, PreferenceFilterChangeEvent, PreferenceFilterChangeSource } from '../preference-tree-model';\nimport { PreferenceNodeRendererFactory, GeneralPreferenceNodeRenderer } from './components/preference-node-renderer';\nimport { Preference } from '../util/preference-types';\nimport { COMMONLY_USED_SECTION_PREFIX } from '../util/preference-tree-generator';\nimport { PreferencesScopeTabBar } from './preference-scope-tabbar-widget';\n\nexport interface PreferencesEditorState {\n    firstVisibleChildID: string,\n}\n\n@injectable()\nexport class PreferencesEditorWidget extends BaseWidget implements StatefulWidget {\n    static readonly ID = 'settings.editor';\n    static readonly LABEL = 'Settings Editor';\n\n    scrollOptions = DEFAULT_SCROLL_OPTIONS;\n\n    protected scrollContainer: HTMLDivElement;\n    /**\n     * Guards against scroll events and selection events looping into each other. Set before this widget initiates a selection.\n     */\n    protected currentModelSelectionId = '';\n    /**\n     * Permits the user to expand multiple nodes without each one being collapsed on a new selection.\n     */\n    protected lastUserSelection = '';\n    protected isAtScrollTop = true;\n    protected firstVisibleChildID = '';\n    protected renderers = new Map<string, GeneralPreferenceNodeRenderer>();\n    // The commonly used section will duplicate preference ID's, so we'll keep a separate list of them.\n    protected commonlyUsedRenderers = new Map<string, GeneralPreferenceNodeRenderer>();\n\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(PreferenceTreeModel) protected readonly model: PreferenceTreeModel;\n    @inject(PreferenceNodeRendererFactory) protected readonly rendererFactory: PreferenceNodeRendererFactory;\n    @inject(PreferencesScopeTabBar) protected readonly tabbar: PreferencesScopeTabBar;\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.id = PreferencesEditorWidget.ID;\n        this.title.label = PreferencesEditorWidget.LABEL;\n        this.addClass('settings-main');\n        this.toDispose.pushAll([\n            this.preferenceService.onPreferencesChanged(e => this.handlePreferenceChanges(e)),\n            this.model.onFilterChanged(e => this.handleDisplayChange(e)),\n            this.model.onSelectionChanged(e => this.handleSelectionChange(e)),\n        ]);\n        this.createContainers();\n        await this.preferenceService.ready;\n        this.handleDisplayChange({ source: PreferenceFilterChangeSource.Schema });\n    }\n\n    protected createContainers(): void {\n        const innerWrapper = document.createElement('div');\n        innerWrapper.classList.add('settings-main-scroll-container');\n        this.scrollContainer = innerWrapper;\n        innerWrapper.addEventListener('scroll', this.onScroll, { passive: true });\n        this.node.appendChild(innerWrapper);\n        const noLeavesMessage = document.createElement('div');\n        noLeavesMessage.classList.add('settings-no-results-announcement');\n        noLeavesMessage.textContent = 'That search query has returned no results.';\n        this.node.appendChild(noLeavesMessage);\n    }\n\n    protected handleDisplayChange(e: PreferenceFilterChangeEvent): void {\n        const { isFiltered } = this.model;\n        const currentFirstVisible = this.firstVisibleChildID;\n        const leavesAreVisible = this.areLeavesVisible();\n        if (e.source === PreferenceFilterChangeSource.Search) {\n            this.handleSearchChange(isFiltered, leavesAreVisible);\n        } else if (e.source === PreferenceFilterChangeSource.Scope) {\n            this.handleScopeChange(isFiltered);\n        } else if (e.source === PreferenceFilterChangeSource.Schema) {\n            this.handleSchemaChange(isFiltered);\n        } else {\n            unreachable(e.source, 'Not all PreferenceFilterChangeSource enum variants handled.');\n        }\n        this.resetScroll(currentFirstVisible, e.source === PreferenceFilterChangeSource.Search && !isFiltered);\n    }\n\n    protected handleSchemaChange(isFiltered: boolean): void {\n        for (const [id, renderer, collection] of this.allRenderers()) {\n            if (!this.model.getNode(renderer.nodeId)) {\n                renderer.dispose();\n                collection.delete(id);\n            }\n        }\n        if (this.model.root) {\n            const nodeIterator = Array.from(this.scrollContainer.children)[Symbol.iterator]();\n            let nextNode: HTMLElement | undefined = nodeIterator.next().value;\n            for (const node of new TopDownTreeIterator(this.model.root)) {\n                if (Preference.TreeNode.is(node)) {\n                    const { collection, id } = this.analyzeIDAndGetRendererGroup(node.id);\n                    const renderer = collection.get(id) ?? this.rendererFactory(node);\n                    if (!renderer.node.parentElement) { // If it hasn't been attached yet, it hasn't been checked for the current search.\n                        this.hideIfFailsFilters(renderer, isFiltered);\n                        collection.set(id, renderer);\n                    }\n                    if (nextNode !== renderer.node) {\n                        if (nextNode) {\n                            renderer.insertBefore(nextNode);\n                        } else {\n                            renderer.appendTo(this.scrollContainer);\n                        }\n                    } else {\n                        nextNode = nodeIterator.next().value;\n                    }\n                }\n            }\n        }\n    }\n\n    protected handleScopeChange(isFiltered: boolean = this.model.isFiltered): void {\n        for (const [, renderer] of this.allRenderers()) {\n            const isHidden = this.hideIfFailsFilters(renderer, isFiltered);\n            if (isFiltered || !isHidden) {\n                renderer.handleScopeChange?.(isFiltered);\n            }\n        }\n    }\n\n    protected handleSearchChange(isFiltered: boolean, leavesAreVisible: boolean): void {\n        if (leavesAreVisible) {\n            for (const [, renderer] of this.allRenderers()) {\n                const isHidden = this.hideIfFailsFilters(renderer, isFiltered);\n                if (!isHidden) {\n                    renderer.handleSearchChange?.(isFiltered);\n                }\n            }\n        }\n    }\n\n    protected areLeavesVisible(): boolean {\n        const leavesAreVisible = this.model.totalVisibleLeaves > 0;\n        this.node.classList.toggle('no-results', !leavesAreVisible);\n        this.scrollContainer.classList.toggle('hidden', !leavesAreVisible);\n        return leavesAreVisible;\n    }\n\n    protected *allRenderers(): IterableIterator<[string, GeneralPreferenceNodeRenderer, Map<string, GeneralPreferenceNodeRenderer>]> {\n        for (const [id, renderer] of this.commonlyUsedRenderers.entries()) {\n            yield [id, renderer, this.commonlyUsedRenderers];\n        }\n        for (const [id, renderer] of this.renderers.entries()) {\n            yield [id, renderer, this.renderers];\n        }\n    }\n\n    protected handlePreferenceChanges(e: PreferenceChanges): void {\n        for (const id of Object.keys(e)) {\n            this.commonlyUsedRenderers.get(id)?.handleValueChange?.();\n            this.renderers.get(id)?.handleValueChange?.();\n        }\n    }\n\n    /**\n     * @returns true if the renderer is hidden, false otherwise.\n     */\n    protected hideIfFailsFilters(renderer: GeneralPreferenceNodeRenderer, isFiltered: boolean): boolean {\n        const row = this.model.currentRows.get(renderer.nodeId);\n        if (!row || (CompositeTreeNode.is(row.node) && (isFiltered || row.visibleChildren === 0))) {\n            renderer.hide();\n            return true;\n        } else {\n            renderer.show();\n            return false;\n        }\n    }\n\n    protected resetScroll(nodeIDToScrollTo?: string, filterWasCleared: boolean = false): void {\n        if (this.scrollBar) { // Absent on widget creation\n            this.doResetScroll(nodeIDToScrollTo, filterWasCleared);\n        } else {\n            const interval = setInterval(() => {\n                if (this.scrollBar) {\n                    clearInterval(interval);\n                    this.doResetScroll(nodeIDToScrollTo, filterWasCleared);\n                }\n            }, 500);\n        }\n    }\n\n    protected doResetScroll(nodeIDToScrollTo?: string, filterWasCleared: boolean = false): void {\n        requestAnimationFrame(() => {\n            this.scrollBar?.update();\n            if (!filterWasCleared && nodeIDToScrollTo) {\n                const { id, collection } = this.analyzeIDAndGetRendererGroup(nodeIDToScrollTo);\n                const renderer = collection.get(id);\n                if (renderer?.visible) {\n                    renderer.node.scrollIntoView();\n                    return;\n                }\n            }\n            this.scrollContainer.scrollTop = 0;\n        });\n    };\n\n    protected doOnScroll(): void {\n        const { scrollContainer } = this;\n        const firstVisibleChildID = this.findFirstVisibleChildID();\n        this.setFirstVisibleChildID(firstVisibleChildID);\n        if (this.isAtScrollTop && scrollContainer.scrollTop !== 0) {\n            this.isAtScrollTop = false;\n            this.tabbar.toggleShadow(true);\n        } else if (!this.isAtScrollTop && scrollContainer.scrollTop === 0) {\n            this.isAtScrollTop = true;\n            this.tabbar.toggleShadow(false);\n        }\n    };\n\n    onScroll = throttle(this.doOnScroll.bind(this), 50);\n\n    protected findFirstVisibleChildID(): string | undefined {\n        const { scrollTop } = this.scrollContainer;\n        for (const [, renderer] of this.allRenderers()) {\n            const { offsetTop, offsetHeight } = renderer.node;\n            if (Math.abs(offsetTop - scrollTop) <= offsetHeight / 2) {\n                return renderer.nodeId;\n            }\n        }\n    }\n\n    protected setFirstVisibleChildID(id?: string): void {\n        if (id && id !== this.firstVisibleChildID) {\n            this.firstVisibleChildID = id;\n            let currentNode = this.model.getNode(id);\n            let expansionAncestor;\n            let selectionAncestor;\n            while (currentNode && (!expansionAncestor || !selectionAncestor)) {\n                if (!selectionAncestor && SelectableTreeNode.is(currentNode)) {\n                    selectionAncestor = currentNode;\n                }\n                if (!expansionAncestor && ExpandableTreeNode.is(currentNode)) {\n                    expansionAncestor = currentNode;\n                }\n                currentNode = currentNode.parent;\n            }\n            if (selectionAncestor) {\n                this.currentModelSelectionId = selectionAncestor.id;\n                expansionAncestor = expansionAncestor ?? selectionAncestor;\n                this.model.selectIfNotSelected(selectionAncestor);\n                if (!this.model.isFiltered && id !== this.lastUserSelection) {\n                    this.lastUserSelection = '';\n                    this.model.collapseAllExcept(expansionAncestor);\n                }\n            }\n        }\n    }\n\n    protected handleSelectionChange(selectionEvent: readonly Readonly<SelectableTreeNode>[]): void {\n        const node = selectionEvent[0];\n        if (node && node.id !== this.currentModelSelectionId) {\n            this.currentModelSelectionId = node.id;\n            this.lastUserSelection = node.id;\n            if (this.model.isFiltered && CompositeTreeNode.is(node)) {\n                for (const candidate of new TopDownTreeIterator(node, { pruneSiblings: true })) {\n                    const { id, collection } = this.analyzeIDAndGetRendererGroup(candidate.id);\n                    const renderer = collection.get(id);\n                    if (renderer?.visible) {\n                        // When filtered, treat the first visible child as the selected node, since it will be the one scrolled to.\n                        this.lastUserSelection = renderer.nodeId;\n                        renderer.node.scrollIntoView();\n                        return;\n                    }\n                }\n            } else {\n                const { id, collection } = this.analyzeIDAndGetRendererGroup(node.id);\n                const renderer = collection.get(id);\n                renderer?.node.scrollIntoView();\n            }\n        }\n    }\n\n    protected analyzeIDAndGetRendererGroup(nodeID: string): { id: string, group: string, collection: Map<string, GeneralPreferenceNodeRenderer> } {\n        const { id, group } = Preference.TreeNode.getGroupAndIdFromNodeId(nodeID);\n        const collection = group === COMMONLY_USED_SECTION_PREFIX ? this.commonlyUsedRenderers : this.renderers;\n        return { id, group, collection };\n    }\n\n    protected getScrollContainer(): HTMLElement {\n        return this.scrollContainer;\n    }\n\n    storeState(): PreferencesEditorState {\n        return {\n            firstVisibleChildID: this.firstVisibleChildID,\n        };\n    }\n\n    restoreState(oldState: PreferencesEditorState): void {\n        this.firstVisibleChildID = oldState.firstVisibleChildID;\n        this.resetScroll(this.firstVisibleChildID);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { TabBar, Widget, Title } from '@theia/core/shared/@phosphor/widgets';\nimport { PreferenceScope, Message, ContextMenuRenderer, LabelProvider, StatefulWidget, codicon } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { PreferenceScopeCommandManager } from '../util/preference-scope-command-manager';\nimport { Preference, PreferenceMenus } from '../util/preference-types';\nimport { CommandRegistry, DisposableCollection, Emitter, MenuModelRegistry } from '@theia/core/lib/common';\n\nconst USER_TAB_LABEL = 'User';\nconst USER_TAB_INDEX = PreferenceScope[USER_TAB_LABEL];\nconst WORKSPACE_TAB_LABEL = 'Workspace';\nconst WORKSPACE_TAB_INDEX = PreferenceScope[WORKSPACE_TAB_LABEL];\nconst FOLDER_TAB_LABEL = 'Folder';\nconst FOLDER_TAB_INDEX = PreferenceScope[FOLDER_TAB_LABEL];\n\nconst PREFERENCE_TAB_CLASSNAME = 'preferences-scope-tab';\nconst GENERAL_FOLDER_TAB_CLASSNAME = 'preference-folder';\nconst LABELED_FOLDER_TAB_CLASSNAME = 'preferences-folder-tab';\nconst FOLDER_DROPDOWN_CLASSNAME = 'preferences-folder-dropdown';\nconst FOLDER_DROPDOWN_ICON_CLASSNAME = 'preferences-folder-dropdown-icon ' + codicon('chevron-down');\nconst TABBAR_UNDERLINE_CLASSNAME = 'tabbar-underline';\nconst SINGLE_FOLDER_TAB_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${LABELED_FOLDER_TAB_CLASSNAME}`;\nconst UNSELECTED_FOLDER_DROPDOWN_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${FOLDER_DROPDOWN_CLASSNAME}`;\nconst SELECTED_FOLDER_DROPDOWN_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${LABELED_FOLDER_TAB_CLASSNAME} ${FOLDER_DROPDOWN_CLASSNAME}`;\nconst SHADOW_CLASSNAME = 'with-shadow';\n\nexport interface PreferencesScopeTabBarState {\n    scopeDetails: Preference.SelectedScopeDetails;\n}\n\n@injectable()\nexport class PreferencesScopeTabBar extends TabBar<Widget> implements StatefulWidget {\n\n    static ID = 'preferences-scope-tab-bar';\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(PreferenceScopeCommandManager) protected readonly preferencesMenuFactory: PreferenceScopeCommandManager;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(MenuModelRegistry) protected readonly menuModelRegistry: MenuModelRegistry;\n\n    protected readonly onScopeChangedEmitter = new Emitter<Preference.SelectedScopeDetails>();\n    readonly onScopeChanged = this.onScopeChangedEmitter.event;\n\n    protected toDispose = new DisposableCollection();\n    protected folderTitle: Title<Widget>;\n    protected currentWorkspaceRoots: FileStat[] = [];\n    protected currentSelection: Preference.SelectedScopeDetails = Preference.DEFAULT_SCOPE;\n    protected editorScrollAtTop = true;\n\n    get currentScope(): Preference.SelectedScopeDetails {\n        return this.currentSelection;\n    }\n\n    protected setNewScopeSelection(newSelection: Preference.SelectedScopeDetails): void {\n        const stringifiedSelectionScope = newSelection.scope.toString();\n        const newIndex = this.titles.findIndex(title => title.dataset.scope === stringifiedSelectionScope);\n        if (newIndex !== -1) {\n            this.currentSelection = newSelection;\n            this.currentIndex = newIndex;\n            if (newSelection.scope === PreferenceScope.Folder) {\n                this.addOrUpdateFolderTab();\n            }\n            this.emitNewScope();\n        }\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = PreferencesScopeTabBar.ID;\n        this.setupInitialDisplay();\n\n        this.tabActivateRequested.connect((sender, args) => {\n            const scopeDetails = this.toScopeDetails(args.title);\n            if (scopeDetails) {\n                this.setNewScopeSelection(scopeDetails);\n            }\n        });\n        this.toDispose.pushAll([\n            this.workspaceService.onWorkspaceChanged(newRoots => this.doUpdateDisplay(newRoots)),\n            this.workspaceService.onWorkspaceLocationChanged(() => this.doUpdateDisplay(this.workspaceService.tryGetRoots())),\n        ]);\n        const tabUnderline = document.createElement('div');\n        tabUnderline.className = TABBAR_UNDERLINE_CLASSNAME;\n        this.node.append(tabUnderline);\n    }\n\n    protected toScopeDetails(title?: Title<Widget> | Preference.SelectedScopeDetails): Preference.SelectedScopeDetails | undefined {\n        if (title) {\n            const source = 'dataset' in title ? title.dataset : title;\n            const { scope, uri, activeScopeIsFolder } = source;\n            return {\n                scope: Number(scope),\n                uri: uri || undefined,\n                activeScopeIsFolder: activeScopeIsFolder === 'true' || activeScopeIsFolder === true,\n            };\n        }\n    }\n\n    protected toDataSet(scopeDetails: Preference.SelectedScopeDetails): Title.Dataset {\n        const { scope, uri, activeScopeIsFolder } = scopeDetails;\n        return {\n            scope: scope.toString(),\n            uri: uri ?? '',\n            activeScopeIsFolder: activeScopeIsFolder.toString()\n        };\n    }\n\n    protected setupInitialDisplay(): void {\n        this.addUserTab();\n        if (this.workspaceService.workspace) {\n            this.addWorkspaceTab(this.workspaceService.workspace);\n        }\n        this.addOrUpdateFolderTab();\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        this.addTabIndexToTabs();\n    }\n\n    protected addTabIndexToTabs(): void {\n        this.node.querySelectorAll('li').forEach((tab, index) => {\n            tab.tabIndex = 0;\n            const handler = () => {\n                if (tab.className.includes(GENERAL_FOLDER_TAB_CLASSNAME) && this.currentWorkspaceRoots.length > 1) {\n                    const tabRect = tab.getBoundingClientRect();\n                    this.openContextMenu(tabRect, tab, 'keypress');\n                } else {\n                    const details = this.toScopeDetails(this.titles[index]);\n                    if (details) {\n                        this.setNewScopeSelection(details);\n                    }\n                }\n            };\n            tab.onkeydown = handler;\n            tab.onclick = handler;\n        });\n    }\n\n    protected addUserTab(): void {\n        this.addTab(new Title({\n            dataset: { uri: '', scope: USER_TAB_INDEX.toString() },\n            label: USER_TAB_LABEL,\n            owner: this,\n            className: PREFERENCE_TAB_CLASSNAME\n        }));\n    }\n\n    protected addWorkspaceTab(currentWorkspace: FileStat): Title<Widget> {\n        const scopeDetails = this.getWorkspaceDataset(currentWorkspace);\n        const workspaceTabTitle = new Title({\n            dataset: this.toDataSet(scopeDetails),\n            label: WORKSPACE_TAB_LABEL,\n            owner: this,\n            className: PREFERENCE_TAB_CLASSNAME,\n        });\n        this.addTab(workspaceTabTitle);\n        return workspaceTabTitle;\n    }\n\n    protected getWorkspaceDataset(currentWorkspace: FileStat): Preference.SelectedScopeDetails {\n        const { resource, isDirectory } = currentWorkspace;\n        const scope = WORKSPACE_TAB_INDEX;\n        return { uri: resource.toString(), activeScopeIsFolder: isDirectory, scope };\n    }\n\n    protected addOrUpdateFolderTab(): void {\n        if (!!this.workspaceService.workspace) {\n            this.currentWorkspaceRoots = this.workspaceService.tryGetRoots();\n            const multipleFolderRootsAreAvailable = this.currentWorkspaceRoots && this.currentWorkspaceRoots.length > 1;\n            const noFolderRootsAreAvailable = this.currentWorkspaceRoots.length === 0;\n            const shouldShowFoldersSeparately = this.workspaceService.saved;\n\n            if (!noFolderRootsAreAvailable) {\n                if (!this.folderTitle) {\n                    this.folderTitle = new Title({\n                        label: '',\n                        caption: FOLDER_TAB_LABEL,\n                        owner: this,\n                    });\n                }\n\n                this.setFolderTitleProperties(multipleFolderRootsAreAvailable);\n                if (multipleFolderRootsAreAvailable || shouldShowFoldersSeparately) {\n                    this.addTab(this.folderTitle);\n                }\n            } else {\n                const folderTabIndex = this.titles.findIndex(title => title.caption === FOLDER_TAB_LABEL);\n\n                if (folderTabIndex > -1) {\n                    this.removeTabAt(folderTabIndex);\n                }\n            }\n        }\n    }\n\n    protected setFolderTitleProperties(multipleFolderRootsAreAvailable: boolean): void {\n        this.folderTitle.iconClass = multipleFolderRootsAreAvailable ? FOLDER_DROPDOWN_ICON_CLASSNAME : '';\n        if (this.currentSelection.scope === FOLDER_TAB_INDEX) {\n            this.folderTitle.label = this.labelProvider.getName(new URI(this.currentSelection.uri));\n            this.folderTitle.dataset = this.toDataSet(this.currentSelection);\n            this.folderTitle.className = multipleFolderRootsAreAvailable ? SELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;\n        } else {\n            const singleFolderRoot = this.currentWorkspaceRoots[0].resource;\n            const singleFolderLabel = this.labelProvider.getName(singleFolderRoot);\n            const defaultURI = multipleFolderRootsAreAvailable ? '' : singleFolderRoot.toString();\n            this.folderTitle.label = multipleFolderRootsAreAvailable ? FOLDER_TAB_LABEL : singleFolderLabel;\n            this.folderTitle.className = multipleFolderRootsAreAvailable ? UNSELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;\n            this.folderTitle.dataset = { folderTitle: 'true', scope: FOLDER_TAB_INDEX.toString(), uri: defaultURI };\n        }\n    }\n\n    protected folderSelectionCallback = (newScope: Preference.SelectedScopeDetails): void => { this.setNewScopeSelection(newScope); };\n\n    protected getFolderContextMenu(workspaceRoots = this.workspaceService.tryGetRoots()): void {\n        this.preferencesMenuFactory.createFolderWorkspacesMenu(workspaceRoots, this.currentSelection.uri);\n    }\n\n    handleEvent(): void {\n        // Don't - the handlers are defined in PreferenceScopeTabbarWidget.addTabIndexToTabs()\n    }\n\n    protected openContextMenu(tabRect: DOMRect | ClientRect, folderTabNode: HTMLElement, source: 'click' | 'keypress'): void {\n        const toDisposeOnHide = new DisposableCollection();\n        for (const root of this.workspaceService.tryGetRoots()) {\n            const id = `set-scope-to-${root.resource.toString()}`;\n            toDisposeOnHide.pushAll([\n                this.commandRegistry.registerCommand(\n                    { id },\n                    { execute: () => this.setScope(root.resource) }\n                ),\n                this.menuModelRegistry.registerMenuAction(PreferenceMenus.FOLDER_SCOPE_MENU_PATH,\n                    {\n                        commandId: id,\n                        label: this.labelProvider.getName(root),\n                    }\n                )\n            ]);\n        }\n        this.contextMenuRenderer.render({\n            menuPath: PreferenceMenus.FOLDER_SCOPE_MENU_PATH,\n            anchor: { x: tabRect.left, y: tabRect.bottom },\n            onHide: () => {\n                setTimeout(() => toDisposeOnHide.dispose());\n                if (source === 'click') { folderTabNode.blur(); }\n            }\n        });\n    }\n\n    protected doUpdateDisplay(newRoots: FileStat[]): void {\n        const folderWasRemoved = newRoots.length < this.currentWorkspaceRoots.length;\n        this.currentWorkspaceRoots = newRoots;\n        if (folderWasRemoved) {\n            const removedFolderWasSelectedScope = !this.currentWorkspaceRoots.some(root => root.resource.toString() === this.currentSelection.uri);\n            if (removedFolderWasSelectedScope) {\n                this.setNewScopeSelection(Preference.DEFAULT_SCOPE);\n            }\n        }\n        this.updateWorkspaceTab();\n        this.addOrUpdateFolderTab();\n    }\n\n    protected updateWorkspaceTab(): void {\n        const currentWorkspace = this.workspaceService.workspace;\n        if (currentWorkspace) {\n            const workspaceTitle = this.titles.find(title => title.label === WORKSPACE_TAB_LABEL) ?? this.addWorkspaceTab(currentWorkspace);\n            const scopeDetails = this.getWorkspaceDataset(currentWorkspace);\n            workspaceTitle.dataset = this.toDataSet(scopeDetails);\n            if (this.currentSelection.scope === PreferenceScope.Workspace) {\n                this.setNewScopeSelection(scopeDetails);\n            }\n        }\n    }\n\n    protected emitNewScope(): void {\n        this.onScopeChangedEmitter.fire(this.currentSelection);\n    }\n\n    setScope(scope: PreferenceScope.User | PreferenceScope.Workspace | URI): void {\n        const details = scope instanceof URI ? this.getDetailsForResource(scope) : this.getDetailsForScope(scope);\n        if (details) {\n            this.setNewScopeSelection(details);\n        }\n    }\n\n    protected getDetailsForScope(scope: PreferenceScope.User | PreferenceScope.Workspace): Preference.SelectedScopeDetails | undefined {\n        const stringifiedSelectionScope = scope.toString();\n        const correspondingTitle = this.titles.find(title => title.dataset.scope === stringifiedSelectionScope);\n        return this.toScopeDetails(correspondingTitle);\n    }\n\n    protected getDetailsForResource(resource: URI): Preference.SelectedScopeDetails | undefined {\n        const parent = this.workspaceService.getWorkspaceRootUri(resource);\n        if (!parent) {\n            return undefined;\n        }\n        if (!this.workspaceService.isMultiRootWorkspaceOpened) {\n            return this.getDetailsForScope(PreferenceScope.Workspace);\n        }\n        return ({ scope: PreferenceScope.Folder, uri: parent.toString(), activeScopeIsFolder: true });\n    }\n\n    storeState(): PreferencesScopeTabBarState {\n        return {\n            scopeDetails: this.currentScope\n        };\n    }\n\n    restoreState(oldState: PreferencesScopeTabBarState): void {\n        const scopeDetails = this.toScopeDetails(oldState.scopeDetails);\n        if (scopeDetails) {\n            this.setNewScopeSelection(scopeDetails);\n        }\n    }\n\n    toggleShadow(showShadow: boolean): void {\n        this.toggleClass(SHADOW_CLASSNAME, showShadow);\n    }\n\n    dispose(): void {\n        super.dispose();\n        this.toDispose.dispose();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { codicon, ReactWidget, StatefulWidget } from '@theia/core/lib/browser';\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { Disposable, Emitter } from '@theia/core';\n\nexport interface PreferencesSearchbarState {\n    searchTerm: string;\n}\n\n@injectable()\nexport class PreferencesSearchbarWidget extends ReactWidget implements StatefulWidget {\n    static readonly ID = 'settings.header';\n    static readonly LABEL = 'Settings Header';\n    static readonly SEARCHBAR_ID = 'preference-searchbar';\n\n    protected readonly onFilterStringChangedEmitter = new Emitter<string>();\n    readonly onFilterChanged = this.onFilterStringChangedEmitter.event;\n\n    protected searchbarRef: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n    protected resultsCount: number = 0;\n\n    @postConstruct()\n    protected init(): void {\n        this.onRender.push(Disposable.create(() => this.focus()));\n        this.id = PreferencesSearchbarWidget.ID;\n        this.title.label = PreferencesSearchbarWidget.LABEL;\n        this.update();\n    }\n\n    protected handleSearch = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        this.search(e.target.value);\n    };\n\n    protected search = debounce((value: string) => {\n        this.onFilterStringChangedEmitter.fire(value);\n        this.update();\n    }, 200);\n\n    focus(): void {\n        if (this.searchbarRef.current) {\n            this.searchbarRef.current.focus();\n        }\n    }\n\n    /**\n     * Clears the search input and all search results.\n     * @param e on-click mouse event.\n     */\n    protected clearSearchResults = (e: React.MouseEvent): void => {\n        const search = document.getElementById(PreferencesSearchbarWidget.SEARCHBAR_ID) as HTMLInputElement;\n        if (search) {\n            search.value = '';\n            this.search(search.value);\n            this.update();\n        }\n    };\n\n    /**\n     * Renders all search bar options.\n     */\n    protected renderOptionContainer(): React.ReactNode {\n        const resultsCount = this.renderResultsCountOption();\n        const clearAllOption = this.renderClearAllOption();\n        return <div className=\"option-buttons\"> {resultsCount} {clearAllOption} </div>;\n    }\n\n    /**\n     * Renders a badge displaying search results count.\n     */\n    protected renderResultsCountOption(): React.ReactNode {\n        const resultsFound = `${this.resultsCount === 0 ? 'No' : this.resultsCount} ${this.resultsCount === 1 ? 'Setting Found' : 'Settings Found'}`;\n        return this.searchTermExists() ?\n            (<span\n                className=\"results-found\"\n                title={resultsFound}>\n                {resultsFound}\n            </span>)\n            : '';\n    }\n\n    /**\n     * Renders a clear all button.\n     */\n    protected renderClearAllOption(): React.ReactNode {\n        return <span\n            className={`${codicon('clear-all')} option ${(this.searchTermExists() ? 'enabled' : '')}`}\n            title=\"Clear Search Results\"\n            onClick={this.clearSearchResults}\n        />;\n    }\n\n    /**\n     * Determines whether the search input currently has a value.\n     * @returns true, if the search input currently has a value; false, otherwise.\n     */\n    protected searchTermExists(): boolean {\n        return !!this.searchbarRef.current?.value;\n    }\n\n    protected getSearchTerm(): string {\n        const search = document.getElementById(PreferencesSearchbarWidget.SEARCHBAR_ID) as HTMLInputElement;\n        return search?.value;\n    }\n\n    updateSearchTerm(searchTerm: string): void {\n        const search = document.getElementById(PreferencesSearchbarWidget.SEARCHBAR_ID) as HTMLInputElement;\n        if (!search) {\n            return;\n        }\n        search.value = searchTerm;\n        this.search(search.value);\n        this.update();\n    }\n\n    render(): React.ReactNode {\n        const optionContainer = this.renderOptionContainer();\n        return (\n            <div className='settings-header'>\n                <div className=\"settings-search-container\">\n                    <input\n                        type=\"text\"\n                        id={PreferencesSearchbarWidget.SEARCHBAR_ID}\n                        spellCheck={false}\n                        placeholder=\"Search Settings\"\n                        className=\"settings-search-input theia-input\"\n                        onChange={this.handleSearch}\n                        ref={this.searchbarRef}\n                    />\n                    {optionContainer}\n                </div>\n            </div >\n        );\n    }\n\n    /**\n     * Updates the search result count.\n     * @param count the result count.\n     */\n    updateResultsCount(count: number): void {\n        this.resultsCount = count;\n        this.update();\n    }\n\n    storeState(): PreferencesSearchbarState {\n        return {\n            searchTerm: this.getSearchTerm()\n        };\n    }\n\n    restoreState(oldState: PreferencesSearchbarState): void {\n        const searchInputExists = this.onDidChangeVisibility(() => {\n            this.updateSearchTerm(oldState.searchTerm || '');\n            searchInputExists.dispose();\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    ContextMenuRenderer,\n    ExpandableTreeNode,\n    TreeNode,\n    TreeProps,\n    TreeWidget,\n    TREE_NODE_CONTENT_CLASS,\n} from '@theia/core/lib/browser';\nimport React = require('@theia/core/shared/react');\nimport { PreferenceTreeModel, PreferenceTreeNodeRow, PreferenceTreeNodeProps } from '../preference-tree-model';\n\n@injectable()\nexport class PreferencesTreeWidget extends TreeWidget {\n    static ID = 'preferences.tree';\n\n    protected shouldFireSelectionEvents: boolean = true;\n    protected firstVisibleLeafNodeID: string;\n\n    @inject(PreferenceTreeModel) readonly model: PreferenceTreeModel;\n    @inject(TreeProps) protected readonly treeProps: TreeProps;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n    @postConstruct()\n    init(): void {\n        super.init();\n        this.id = PreferencesTreeWidget.ID;\n        this.toDispose.pushAll([\n            this.model.onFilterChanged(() => {\n                this.updateRows();\n            }),\n        ]);\n    }\n\n    doUpdateRows(): void {\n        this.rows = new Map();\n        let index = 0;\n        for (const [id, nodeRow] of this.model.currentRows.entries()) {\n            if (nodeRow.visibleChildren > 0 && (ExpandableTreeNode.is(nodeRow.node) || ExpandableTreeNode.isExpanded(nodeRow.node.parent))) {\n                this.rows.set(id, { ...nodeRow, index: index++ });\n            }\n        }\n        this.updateScrollToRow();\n    }\n\n    protected doRenderNodeRow({ depth, visibleChildren, node, isExpansible }: PreferenceTreeNodeRow): React.ReactNode {\n        return this.renderNode(node, { depth, visibleChildren, isExpansible });\n    }\n\n    protected renderNode(node: TreeNode, props: PreferenceTreeNodeProps): React.ReactNode {\n        if (!TreeNode.isVisible(node)) {\n            return undefined;\n        }\n\n        const attributes = this.createNodeAttributes(node, props);\n\n        const content = <div className={TREE_NODE_CONTENT_CLASS}>\n            {this.renderExpansionToggle(node, props)}\n            {this.renderCaption(node, props)}\n        </div>;\n        return React.createElement('div', attributes, content);\n    }\n\n    protected renderExpansionToggle(node: TreeNode, props: PreferenceTreeNodeProps): React.ReactNode {\n        if (ExpandableTreeNode.is(node) && !props.isExpansible) {\n            return <div className='preferences-tree-spacer' />;\n        }\n        return super.renderExpansionToggle(node, props);\n    }\n\n    protected toNodeName(node: TreeNode): string {\n        const visibleChildren = this.model.currentRows.get(node.id)?.visibleChildren;\n        const baseName = this.labelProvider.getName(node);\n        const printedNameWithVisibleChildren = this.model.isFiltered && visibleChildren !== undefined\n            ? `${baseName} (${visibleChildren})`\n            : baseName;\n        return printedNameWithVisibleChildren;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { WidgetFactory, createTreeContainer, TreeWidget, TreeProps, defaultTreeProps, TreeModel, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { PreferenceNodeRendererFactory, PreferenceHeaderRenderer } from './components/preference-node-renderer';\nimport { PreferencesWidget } from './preference-widget';\nimport { PreferencesTreeWidget } from './preference-tree-widget';\nimport { PreferencesEditorWidget } from './preference-editor-widget';\nimport { PreferencesSearchbarWidget } from './preference-searchbar-widget';\nimport { PreferencesScopeTabBar } from './preference-scope-tabbar-widget';\nimport { PreferenceTreeModel } from '../preference-tree-model';\nimport { PreferenceTreeLabelProvider } from '../util/preference-tree-label-provider';\nimport { Preference } from '../util/preference-types';\nimport { PreferenceStringInputRenderer } from './components/preference-string-input';\nimport { PreferenceBooleanInputRenderer } from './components/preference-boolean-input';\nimport { PreferenceJSONLinkRenderer } from './components/preference-json-input';\nimport { PreferenceSelectInputRenderer } from './components/preference-select-input';\nimport { PreferenceNumberInputRenderer } from './components/preference-number-input';\nimport { PreferenceArrayInputRenderer } from './components/preference-array-input';\n\nexport function bindPreferencesWidgets(bind: interfaces.Bind): void {\n    bind(PreferenceTreeLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(PreferenceTreeLabelProvider);\n    bind(PreferencesWidget)\n        .toDynamicValue(({ container }) => createPreferencesWidgetContainer(container).get(PreferencesWidget))\n        .inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: PreferencesWidget.ID,\n        createWidget: () => container.get(PreferencesWidget)\n    })).inSingletonScope();\n    bind(PreferenceSelectInputRenderer).toSelf();\n    bind(PreferenceArrayInputRenderer).toSelf();\n    bind(PreferenceStringInputRenderer).toSelf();\n    bind(PreferenceBooleanInputRenderer).toSelf();\n    bind(PreferenceNumberInputRenderer).toSelf();\n    bind(PreferenceJSONLinkRenderer).toSelf();\n    bind(PreferenceHeaderRenderer).toSelf();\n}\n\nfunction createPreferencesWidgetContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n    child.bind(PreferenceTreeModel).toSelf();\n    child.rebind(TreeModel).toService(PreferenceTreeModel);\n    child.unbind(TreeWidget);\n    child.bind(PreferencesTreeWidget).toSelf();\n    child.rebind(TreeProps).toConstantValue({ ...defaultTreeProps, search: false });\n    child.bind(PreferencesEditorWidget).toSelf();\n\n    child.bind(PreferencesSearchbarWidget).toSelf();\n    child.bind(PreferencesScopeTabBar).toSelf();\n    child.bind(PreferencesWidget).toSelf();\n\n    child.bind(PreferenceNodeRendererFactory).toFactory(({ container }) => (node: Preference.TreeNode) => {\n        const grandchild = container.createChild();\n        grandchild.bind(Preference.Node).toConstantValue(node);\n        if (Preference.LeafNode.is(node)) {\n            if (node.preference.data.enum) {\n                return grandchild.get(PreferenceSelectInputRenderer);\n            }\n            const type = Array.isArray(node.preference.data.type) ? node.preference.data.type[0] : node.preference.data.type;\n            if (type === 'array' && node.preference.data.items?.type === 'string') {\n                return grandchild.get(PreferenceArrayInputRenderer);\n            }\n            switch (type) {\n                case 'string':\n                    return grandchild.get(PreferenceStringInputRenderer);\n                case 'boolean':\n                    return grandchild.get(PreferenceBooleanInputRenderer);\n                case 'number':\n                case 'integer':\n                    return grandchild.get(PreferenceNumberInputRenderer);\n                default:\n                    return grandchild.get(PreferenceJSONLinkRenderer);\n            }\n        } else {\n            return grandchild.get(PreferenceHeaderRenderer);\n        }\n    });\n\n    return child;\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { postConstruct, injectable, inject } from '@theia/core/shared/inversify';\nimport { Panel, Widget, Message, StatefulWidget, PreferenceScope, codicon } from '@theia/core/lib/browser';\nimport { PreferencesEditorState, PreferencesEditorWidget } from './preference-editor-widget';\nimport { PreferencesTreeWidget } from './preference-tree-widget';\nimport { PreferencesSearchbarState, PreferencesSearchbarWidget } from './preference-searchbar-widget';\nimport { PreferencesScopeTabBar, PreferencesScopeTabBarState } from './preference-scope-tabbar-widget';\nimport { Preference } from '../util/preference-types';\nimport URI from '@theia/core/lib/common/uri';\n\ninterface PreferencesWidgetState {\n    scopeTabBarState: PreferencesScopeTabBarState,\n    editorState: PreferencesEditorState,\n    searchbarWidgetState: PreferencesSearchbarState,\n}\n\n@injectable()\nexport class PreferencesWidget extends Panel implements StatefulWidget {\n    /**\n     * The widget `id`.\n     */\n    static readonly ID = 'settings_widget';\n    /**\n     * The widget `label` which is used for display purposes.\n     */\n    static readonly LABEL = 'Preferences';\n\n    @inject(PreferencesEditorWidget) protected readonly editorWidget: PreferencesEditorWidget;\n    @inject(PreferencesTreeWidget) protected readonly treeWidget: PreferencesTreeWidget;\n    @inject(PreferencesSearchbarWidget) protected readonly searchbarWidget: PreferencesSearchbarWidget;\n    @inject(PreferencesScopeTabBar) protected readonly tabBarWidget: PreferencesScopeTabBar;\n\n    get currentScope(): Preference.SelectedScopeDetails {\n        return this.tabBarWidget.currentScope;\n    }\n\n    setSearchTerm(query: string): void {\n        this.searchbarWidget.updateSearchTerm(query);\n    }\n\n    setScope(scope: PreferenceScope.User | PreferenceScope.Workspace | URI): void {\n        this.tabBarWidget.setScope(scope);\n    }\n\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        if (msg.width < 600 && this.treeWidget && !this.treeWidget.isHidden) {\n            this.treeWidget.hide();\n            this.editorWidget.addClass('full-pane');\n        } else if (msg.width >= 600 && this.treeWidget && this.treeWidget.isHidden) {\n            this.treeWidget.show();\n            this.editorWidget.removeClass('full-pane');\n        }\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.searchbarWidget.focus();\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = PreferencesWidget.ID;\n        this.title.label = PreferencesWidget.LABEL;\n        this.title.closable = true;\n        this.addClass('theia-settings-container');\n        this.title.iconClass = codicon('settings');\n\n        this.searchbarWidget.addClass('preferences-searchbar-widget');\n        this.addWidget(this.searchbarWidget);\n\n        this.tabBarWidget.addClass('preferences-tabbar-widget');\n        this.addWidget(this.tabBarWidget);\n\n        this.treeWidget.addClass('preferences-tree-widget');\n        this.addWidget(this.treeWidget);\n\n        this.editorWidget.addClass('preferences-editor-widget');\n        this.addWidget(this.editorWidget);\n\n        this.update();\n    }\n\n    storeState(): PreferencesWidgetState {\n        return {\n            scopeTabBarState: this.tabBarWidget.storeState(),\n            editorState: this.editorWidget.storeState(),\n            searchbarWidgetState: this.searchbarWidget.storeState(),\n        };\n    }\n\n    restoreState(state: PreferencesWidgetState): void {\n        this.tabBarWidget.restoreState(state.scopeTabBarState);\n        this.editorWidget.restoreState(state.editorState);\n        this.searchbarWidget.restoreState(state.searchbarWidgetState);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferenceScope } from '@theia/core/lib/browser/preferences';\nimport { WorkspaceService, WorkspaceData } from '@theia/workspace/lib/browser/workspace-service';\nimport { AbstractResourcePreferenceProvider } from './abstract-resource-preference-provider';\n\n@injectable()\nexport class WorkspaceFilePreferenceProviderOptions {\n    workspaceUri: URI;\n}\n\nexport const WorkspaceFilePreferenceProviderFactory = Symbol('WorkspaceFilePreferenceProviderFactory');\nexport type WorkspaceFilePreferenceProviderFactory = (options: WorkspaceFilePreferenceProviderOptions) => WorkspaceFilePreferenceProvider;\n\n@injectable()\nexport class WorkspaceFilePreferenceProvider extends AbstractResourcePreferenceProvider {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(WorkspaceFilePreferenceProviderOptions)\n    protected readonly options: WorkspaceFilePreferenceProviderOptions;\n\n    protected sectionsInsideSettings = new Set<string>();\n\n    protected getUri(): URI {\n        return this.options.workspaceUri;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected parse(content: string): any {\n        const data = super.parse(content);\n        if (WorkspaceData.is(data)) {\n            const settings = { ...data.settings };\n            for (const key of this.configurations.getSectionNames().filter(name => name !== 'settings')) {\n                // If the user has written configuration inside the \"settings\" object, we will respect that.\n                if (settings[key]) {\n                    this.sectionsInsideSettings.add(key);\n                }\n                // Favor sections outside the \"settings\" object to agree with VSCode behavior\n                if (data[key]) {\n                    settings[key] = data[key];\n                    this.sectionsInsideSettings.delete(key);\n                }\n            }\n            return settings;\n        }\n        return {};\n    }\n\n    protected getPath(preferenceName: string): string[] {\n        const firstSegment = preferenceName.split('.', 1)[0];\n        const remainder = preferenceName.slice(firstSegment.length + 1);\n        if (this.belongsInSection(firstSegment, remainder)) {\n            // Default to writing sections outside the \"settings\" object.\n            const path = [firstSegment];\n            if (remainder) {\n                path.push(remainder);\n            }\n            // If the user has already written this section inside the \"settings\" object, modify it there.\n            if (this.sectionsInsideSettings.has(firstSegment)) {\n                path.unshift('settings');\n            }\n            return path;\n        }\n        return ['settings', preferenceName];\n    }\n\n    protected belongsInSection(firstSegment: string, remainder: string): boolean {\n        return this.configurations.isSectionName(firstSegment);\n    }\n\n    protected getScope(): PreferenceScope {\n        return PreferenceScope.Workspace;\n    }\n\n    getDomain(): string[] {\n        // workspace file is treated as part of the workspace\n        return this.workspaceService.tryGetRoots().map(r => r.resource.toString()).concat([this.options.workspaceUri.toString()]);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct, named } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { PreferenceScope, PreferenceProvider } from '@theia/core/lib/browser/preferences';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport { WorkspaceFilePreferenceProviderFactory, WorkspaceFilePreferenceProvider } from './workspace-file-preference-provider';\n\n@injectable()\nexport class WorkspacePreferenceProvider extends PreferenceProvider {\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(WorkspaceFilePreferenceProviderFactory)\n    protected readonly workspaceFileProviderFactory: WorkspaceFilePreferenceProviderFactory;\n\n    @inject(PreferenceProvider) @named(PreferenceScope.Folder)\n    protected readonly folderPreferenceProvider: PreferenceProvider;\n\n    protected readonly toDisposeOnEnsureDelegateUpToDate = new DisposableCollection();\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.workspaceService.ready.then(() => {\n            // If there is no workspace after the workspace service is initialized, then no more work is needed for this provider to be ready.\n            // If there is a workspace, then we wait for the new delegate to be ready before declaring this provider ready.\n            if (!this.workspaceService.workspace) {\n                this._ready.resolve();\n            }\n        });\n        this.workspaceService.onWorkspaceLocationChanged(() => this.ensureDelegateUpToDate());\n        this.workspaceService.onWorkspaceChanged(() => this.ensureDelegateUpToDate());\n    }\n\n    getConfigUri(resourceUri: string | undefined = this.ensureResourceUri(), sectionName?: string): URI | undefined {\n        return this.delegate?.getConfigUri(resourceUri, sectionName);\n    }\n\n    getContainingConfigUri(resourceUri: string | undefined = this.ensureResourceUri(), sectionName?: string): URI | undefined {\n        return this.delegate?.getContainingConfigUri?.(resourceUri, sectionName);\n    }\n\n    protected _delegate: PreferenceProvider | undefined;\n    protected get delegate(): PreferenceProvider | undefined {\n        return this._delegate;\n    }\n\n    protected ensureDelegateUpToDate(): void {\n        const delegate = this.createDelegate();\n        if (this._delegate !== delegate) {\n            this.toDisposeOnEnsureDelegateUpToDate.dispose();\n            this.toDispose.push(this.toDisposeOnEnsureDelegateUpToDate);\n\n            this._delegate = delegate;\n\n            if (delegate) {\n                // If this provider has not yet declared itself ready, it should do so when the new delegate is ready.\n                delegate.ready.then(() => this._ready.resolve(), () => { });\n            }\n\n            if (delegate instanceof WorkspaceFilePreferenceProvider) {\n                this.toDisposeOnEnsureDelegateUpToDate.pushAll([\n                    delegate,\n                    delegate.onDidPreferencesChanged(changes => this.onDidPreferencesChangedEmitter.fire(changes))\n                ]);\n            }\n        }\n    }\n\n    protected createDelegate(): PreferenceProvider | undefined {\n        const workspace = this.workspaceService.workspace;\n        if (!workspace) {\n            return undefined;\n        }\n        if (!this.workspaceService.isMultiRootWorkspaceOpened) {\n            return this.folderPreferenceProvider;\n        }\n        if (this._delegate instanceof WorkspaceFilePreferenceProvider && this._delegate.getConfigUri().isEqual(workspace.resource)) {\n            return this._delegate;\n        }\n        return this.workspaceFileProviderFactory({\n            workspaceUri: workspace.resource\n        });\n    }\n\n    get<T>(preferenceName: string, resourceUri: string | undefined = this.ensureResourceUri()): T | undefined {\n        const delegate = this.delegate;\n        return delegate ? delegate.get<T>(preferenceName, resourceUri) : undefined;\n    }\n\n    resolve<T>(preferenceName: string, resourceUri: string | undefined = this.ensureResourceUri()): { value?: T, configUri?: URI } {\n        const delegate = this.delegate;\n        return delegate ? delegate.resolve<T>(preferenceName, resourceUri) : {};\n    }\n\n    getPreferences(resourceUri: string | undefined = this.ensureResourceUri()): { [p: string]: any } {\n        const delegate = this.delegate;\n        return delegate ? delegate.getPreferences(resourceUri) : {};\n    }\n\n    async setPreference(preferenceName: string, value: any, resourceUri: string | undefined = this.ensureResourceUri()): Promise<boolean> {\n        const delegate = this.delegate;\n        if (delegate) {\n            return delegate.setPreference(preferenceName, value, resourceUri);\n        }\n        return false;\n    }\n\n    protected ensureResourceUri(): string | undefined {\n        if (this.workspaceService.workspace && !this.workspaceService.isMultiRootWorkspaceOpened) {\n            return this.workspaceService.workspace.resource.toString();\n        }\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './user-storage-uri';\nexport * from './user-storage-frontend-module';\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { FileSystemProvider } from '@theia/filesystem/lib/common/files';\nimport { FileService, FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { DelegatingFileSystemProvider } from '@theia/filesystem/lib/common/delegating-file-system-provider';\nimport { UserStorageUri } from './user-storage-uri';\n\n@injectable()\nexport class UserStorageContribution implements FileServiceContribution {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    registerFileSystemProviders(service: FileService): void {\n        service.onWillActivateFileSystemProvider(event => {\n            if (event.scheme === UserStorageUri.scheme) {\n                event.waitUntil((async () => {\n                    const provider = await this.createProvider(service);\n                    service.registerProvider(UserStorageUri.scheme, provider);\n                })());\n            }\n        });\n    }\n\n    protected async createProvider(service: FileService): Promise<FileSystemProvider> {\n        const delegate = await service.activateProvider('file');\n        const configDirUri = new URI(await this.environments.getConfigDirUri());\n        return new DelegatingFileSystemProvider(delegate, {\n            uriConverter: {\n                to: resource => {\n                    const relativePath = UserStorageUri.relative(resource);\n                    if (relativePath) {\n                        return configDirUri.resolve(relativePath).normalizePath();\n                    }\n                    return undefined;\n                },\n                from: resource => {\n                    const relativePath = configDirUri.relative(resource);\n                    if (relativePath) {\n                        return UserStorageUri.resolve(relativePath);\n                    }\n                    return undefined;\n                }\n            }\n        }, new DisposableCollection(\n            delegate.watch(configDirUri, { excludes: [], recursive: true })\n        ));\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule, } from '@theia/core/shared/inversify';\nimport { FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { UserStorageContribution } from './user-storage-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(UserStorageContribution).toSelf().inSingletonScope();\n    bind(FileServiceContribution).toService(UserStorageContribution);\n});\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport const UserStorageUri = new URI('user-storage:/user');\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/index.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}