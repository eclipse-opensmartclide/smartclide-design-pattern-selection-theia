{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/core/src/browser/menu/browser-context-menu-renderer.ts","webpack://browser-app/../node_modules/@theia/core/src/browser/menu/browser-menu-module.ts","webpack://browser-app/../node_modules/@theia/core/src/browser/menu/browser-menu-plugin.ts"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_core_lib_browser_menu_browser-menu-module_js.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable } from 'inversify';\nimport { Menu } from '../widgets';\nimport { ContextMenuAccess, ContextMenuRenderer, coordinateFromAnchor, RenderContextMenuOptions } from '../context-menu-renderer';\nimport { BrowserMainMenuFactory } from './browser-menu-plugin';\n\nexport class BrowserContextMenuAccess extends ContextMenuAccess {\n    constructor(\n        public readonly menu: Menu\n    ) {\n        super(menu);\n    }\n}\n\n@injectable()\nexport class BrowserContextMenuRenderer extends ContextMenuRenderer {\n\n    constructor(@inject(BrowserMainMenuFactory) private menuFactory: BrowserMainMenuFactory) {\n        super();\n    }\n\n    protected doRender({ menuPath, anchor, args, onHide }: RenderContextMenuOptions): BrowserContextMenuAccess {\n        const contextMenu = this.menuFactory.createContextMenu(menuPath, args);\n        const { x, y } = coordinateFromAnchor(anchor);\n        if (onHide) {\n            contextMenu.aboutToClose.connect(() => onHide!());\n        }\n        contextMenu.open(x, y);\n        return new BrowserContextMenuAccess(contextMenu);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { FrontendApplicationContribution } from '../frontend-application';\nimport { ContextMenuRenderer } from '../context-menu-renderer';\nimport { BrowserMenuBarContribution, BrowserMainMenuFactory } from './browser-menu-plugin';\nimport { BrowserContextMenuRenderer } from './browser-context-menu-renderer';\n\nexport default new ContainerModule(bind => {\n    bind(BrowserMainMenuFactory).toSelf().inSingletonScope();\n    bind(ContextMenuRenderer).to(BrowserContextMenuRenderer).inSingletonScope();\n    bind(BrowserMenuBarContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(BrowserMenuBarContribution);\n});\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MenuBar, Menu as MenuWidget, Widget } from '@phosphor/widgets';\nimport { CommandRegistry as PhosphorCommandRegistry } from '@phosphor/commands';\nimport {\n    CommandRegistry, ActionMenuNode, CompositeMenuNode,\n    MenuModelRegistry, MAIN_MENU_BAR, MenuPath, DisposableCollection, Disposable, MenuNode\n} from '../../common';\nimport { KeybindingRegistry } from '../keybinding';\nimport { FrontendApplicationContribution, FrontendApplication } from '../frontend-application';\nimport { ContextKeyService } from '../context-key-service';\nimport { ContextMenuContext } from './context-menu-context';\nimport { waitForRevealed } from '../widgets';\nimport { ApplicationShell } from '../shell';\nimport { CorePreferences } from '../core-preferences';\n\nexport abstract class MenuBarWidget extends MenuBar {\n    abstract activateMenu(label: string, ...labels: string[]): Promise<MenuWidget>;\n    abstract triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem>;\n}\n\n@injectable()\nexport class BrowserMainMenuFactory implements MenuWidgetFactory {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @inject(ContextMenuContext)\n    protected readonly context: ContextMenuContext;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(CorePreferences)\n    protected readonly corePreferences: CorePreferences;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(MenuModelRegistry)\n    protected readonly menuProvider: MenuModelRegistry;\n\n    createMenuBar(): MenuBarWidget {\n        const menuBar = new DynamicMenuBarWidget();\n        menuBar.id = 'theia:menubar';\n        this.corePreferences.ready.then(() => {\n            this.showMenuBar(menuBar, this.corePreferences.get('window.menuBarVisibility', 'classic'));\n        });\n        const preferenceListener = this.corePreferences.onPreferenceChanged(preference => {\n            if (preference.preferenceName === 'window.menuBarVisibility') {\n                this.showMenuBar(menuBar, preference.newValue);\n            }\n        });\n        const keybindingListener = this.keybindingRegistry.onKeybindingsChanged(() => {\n            const preference = this.corePreferences['window.menuBarVisibility'];\n            this.showMenuBar(menuBar, preference);\n        });\n        menuBar.disposed.connect(() => {\n            preferenceListener.dispose();\n            keybindingListener.dispose();\n        });\n        return menuBar;\n    }\n\n    protected showMenuBar(menuBar: DynamicMenuBarWidget, preference: string | undefined): void {\n        if (preference && ['classic', 'visible'].includes(preference)) {\n            menuBar.clearMenus();\n            this.fillMenuBar(menuBar);\n        } else {\n            menuBar.clearMenus();\n        }\n    }\n\n    protected fillMenuBar(menuBar: MenuBarWidget): void {\n        const menuModel = this.menuProvider.getMenu(MAIN_MENU_BAR);\n        const menuCommandRegistry = this.createMenuCommandRegistry(menuModel);\n        for (const menu of menuModel.children) {\n            if (menu instanceof CompositeMenuNode) {\n                const menuWidget = this.createMenuWidget(menu, { commands: menuCommandRegistry });\n                menuBar.addMenu(menuWidget);\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    createContextMenu(path: MenuPath, args?: any[]): MenuWidget {\n        const menuModel = this.menuProvider.getMenu(path);\n        const menuCommandRegistry = this.createMenuCommandRegistry(menuModel, args).snapshot();\n        const contextMenu = this.createMenuWidget(menuModel, { commands: menuCommandRegistry });\n        return contextMenu;\n    }\n\n    createMenuWidget(menu: CompositeMenuNode, options: MenuWidget.IOptions & { commands: MenuCommandRegistry }): DynamicMenuWidget {\n        return new DynamicMenuWidget(menu, options, this.services);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected createMenuCommandRegistry(menu: CompositeMenuNode, args: any[] = []): MenuCommandRegistry {\n        const menuCommandRegistry = new MenuCommandRegistry(this.services);\n        this.registerMenu(menuCommandRegistry, menu, args);\n        return menuCommandRegistry;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected registerMenu(menuCommandRegistry: MenuCommandRegistry, menu: CompositeMenuNode, args: any[]): void {\n        for (const child of menu.children) {\n            if (child instanceof ActionMenuNode) {\n                menuCommandRegistry.registerActionMenu(child, args);\n                if (child.altNode) {\n                    menuCommandRegistry.registerActionMenu(child.altNode, args);\n                }\n            } else if (child instanceof CompositeMenuNode) {\n                this.registerMenu(menuCommandRegistry, child, args);\n            } else {\n                this.handleDefault(menuCommandRegistry, child, args);\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected handleDefault(menuCommandRegistry: MenuCommandRegistry, menuNode: MenuNode, args: any[]): void {\n        // NOOP\n    }\n\n    protected get services(): MenuServices {\n        return {\n            context: this.context,\n            contextKeyService: this.contextKeyService,\n            commandRegistry: this.commandRegistry,\n            keybindingRegistry: this.keybindingRegistry,\n            menuWidgetFactory: this\n        };\n    }\n\n}\n\nexport class DynamicMenuBarWidget extends MenuBarWidget {\n\n    /**\n     * We want to restore the focus after the menu closes.\n     */\n    protected previousFocusedElement: HTMLElement | undefined;\n\n    constructor() {\n        super();\n        // HACK we need to hook in on private method _openChildMenu. Don't do this at home!\n        DynamicMenuBarWidget.prototype['_openChildMenu'] = () => {\n            if (this.activeMenu instanceof DynamicMenuWidget) {\n                // `childMenu` is `null` if we open the menu. For example, menu is not shown and you click on `Edit`.\n                // However, the `childMenu` is set, when `Edit` was already open and you move the mouse over `Select`.\n                // We want to save the focus object for the former case only.\n                if (!this.childMenu) {\n                    const { activeElement } = document;\n                    if (activeElement instanceof HTMLElement) {\n                        this.previousFocusedElement = activeElement;\n                    }\n                }\n                this.activeMenu.aboutToShow({ previousFocusedElement: this.previousFocusedElement });\n            }\n            super['_openChildMenu']();\n        };\n    }\n\n    async activateMenu(label: string, ...labels: string[]): Promise<MenuWidget> {\n        const menu = this.menus.find(m => m.title.label === label);\n        if (!menu) {\n            throw new Error(`could not find '${label}' menu`);\n        }\n        this.activeMenu = menu;\n        this.openActiveMenu();\n        await waitForRevealed(menu);\n\n        const menuPath = [label];\n\n        let current = menu;\n        for (const itemLabel of labels) {\n            const item = current.items.find(i => i.label === itemLabel);\n            if (!item || !item.submenu) {\n                throw new Error(`could not find '${label}' submenu in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n            }\n            current.activeItem = item;\n            current.triggerActiveItem();\n            current = item.submenu;\n            await waitForRevealed(current);\n        }\n        return current;\n    }\n\n    async triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem> {\n        if (!labels.length) {\n            throw new Error('menu item label is not specified');\n        }\n        const menuPath = [label, ...labels.slice(0, labels.length - 1)];\n        const menu = await this.activateMenu(menuPath[0], ...menuPath.slice(1));\n        const item = menu.items.find(i => i.label === labels[labels.length - 1]);\n        if (!item) {\n            throw new Error(`could not find '${label}' item in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n        }\n        menu.activeItem = item;\n        menu.triggerActiveItem();\n        return item;\n    }\n\n}\n\nexport class MenuServices {\n    readonly commandRegistry: CommandRegistry;\n    readonly keybindingRegistry: KeybindingRegistry;\n    readonly contextKeyService: ContextKeyService;\n    readonly context: ContextMenuContext;\n    readonly menuWidgetFactory: MenuWidgetFactory;\n}\n\nexport interface MenuWidgetFactory {\n    createMenuWidget(menu: CompositeMenuNode, options: MenuWidget.IOptions & { commands: MenuCommandRegistry }): MenuWidget;\n}\n\n/**\n * A menu widget that would recompute its items on update.\n */\nexport class DynamicMenuWidget extends MenuWidget {\n\n    /**\n     * We want to restore the focus after the menu closes.\n     */\n    protected previousFocusedElement: HTMLElement | undefined;\n\n    constructor(\n        protected menu: CompositeMenuNode,\n        protected options: MenuWidget.IOptions & { commands: MenuCommandRegistry },\n        protected services: MenuServices\n    ) {\n        super(options);\n        if (menu.label) {\n            this.title.label = menu.label;\n        }\n        if (menu.iconClass) {\n            this.title.iconClass = menu.iconClass;\n        }\n        this.updateSubMenus(this, this.menu, this.options.commands);\n    }\n\n    // Hint: this is not called from the context menu use-case, but is not required.\n    // For the context menu the command registry state is calculated by the factory before `open`.\n    public aboutToShow({ previousFocusedElement }: { previousFocusedElement: HTMLElement | undefined }): void {\n        this.preserveFocusedElement(previousFocusedElement);\n        this.clearItems();\n        this.runWithPreservedFocusContext(() => {\n            this.options.commands.snapshot();\n            this.updateSubMenus(this, this.menu, this.options.commands);\n        });\n    }\n\n    public open(x: number, y: number, options?: MenuWidget.IOpenOptions): void {\n        const cb = () => {\n            this.restoreFocusedElement();\n            this.aboutToClose.disconnect(cb);\n        };\n        this.aboutToClose.connect(cb);\n        super.open(x, y, options);\n    }\n\n    private updateSubMenus(parent: MenuWidget, menu: CompositeMenuNode, commands: MenuCommandRegistry): void {\n        const items = this.buildSubMenus([], menu, commands);\n        for (const item of items) {\n            parent.addItem(item);\n        }\n    }\n\n    private buildSubMenus(items: MenuWidget.IItemOptions[], menu: CompositeMenuNode, commands: MenuCommandRegistry): MenuWidget.IItemOptions[] {\n        for (const item of menu.children) {\n            if (item instanceof CompositeMenuNode) {\n                if (item.children.length) { // do not render empty nodes\n                    if (item.isSubmenu) { // submenu node\n                        const submenu = this.services.menuWidgetFactory.createMenuWidget(item, this.options);\n                        if (!submenu.items.length) {\n                            continue;\n                        }\n                        items.push({\n                            type: 'submenu',\n                            submenu,\n                        });\n                    } else { // group node\n                        const submenu = this.buildSubMenus([], item, commands);\n                        if (!submenu.length) {\n                            continue;\n                        }\n                        if (items.length) { // do not put a separator above the first group\n                            items.push({\n                                type: 'separator'\n                            });\n                        }\n                        items.push(...submenu); // render children\n                    }\n                }\n            } else if (item instanceof ActionMenuNode) {\n                const { context, contextKeyService } = this.services;\n                const node = item.altNode && context.altPressed ? item.altNode : item;\n                const { when } = node.action;\n                if (!(commands.isVisible(node.action.commandId) && (!when || contextKeyService.match(when)))) {\n                    continue;\n                }\n                items.push({\n                    command: node.action.commandId,\n                    type: 'command'\n                });\n            } else {\n                items.push(...this.handleDefault(item));\n            }\n        }\n        return items;\n    }\n\n    protected handleDefault(menuNode: MenuNode): MenuWidget.IItemOptions[] {\n        return [];\n    }\n\n    protected preserveFocusedElement(previousFocusedElement: Element | null = document.activeElement): boolean {\n        if (!this.previousFocusedElement && previousFocusedElement instanceof HTMLElement) {\n            this.previousFocusedElement = previousFocusedElement;\n            return true;\n        }\n        return false;\n    }\n\n    protected restoreFocusedElement(): boolean {\n        if (this.previousFocusedElement) {\n            this.previousFocusedElement.focus({ preventScroll: true });\n            this.previousFocusedElement = undefined;\n            return true;\n        }\n        return false;\n    }\n\n    protected runWithPreservedFocusContext(what: () => void): void {\n        let focusToRestore: HTMLElement | undefined = undefined;\n        const { activeElement } = document;\n        if (this.previousFocusedElement && activeElement instanceof HTMLElement && this.previousFocusedElement !== activeElement) {\n            focusToRestore = activeElement;\n            this.previousFocusedElement.focus({ preventScroll: true });\n        }\n        try {\n            what();\n        } finally {\n            if (focusToRestore) {\n                focusToRestore.focus({ preventScroll: true });\n            }\n        }\n    }\n\n}\n\n@injectable()\nexport class BrowserMenuBarContribution implements FrontendApplicationContribution {\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    constructor(\n        @inject(BrowserMainMenuFactory) protected readonly factory: BrowserMainMenuFactory\n    ) { }\n\n    onStart(app: FrontendApplication): void {\n        const logo = this.createLogo();\n        app.shell.addWidget(logo, { area: 'top' });\n        const menu = this.factory.createMenuBar();\n        app.shell.addWidget(menu, { area: 'top' });\n    }\n\n    get menuBar(): MenuBarWidget | undefined {\n        return this.shell.topPanel.widgets.find(w => w instanceof MenuBarWidget) as MenuBarWidget | undefined;\n    }\n\n    protected createLogo(): Widget {\n        const logo = new Widget();\n        logo.id = 'theia:icon';\n        logo.addClass('theia-icon');\n        return logo;\n    }\n}\n\n/**\n * Stores Theia-specific action menu nodes instead of PhosphorJS commands with their handlers.\n */\nexport class MenuCommandRegistry extends PhosphorCommandRegistry {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected actions = new Map<string, [ActionMenuNode, any[]]>();\n    protected toDispose = new DisposableCollection();\n\n    constructor(protected services: MenuServices) {\n        super();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerActionMenu(menu: ActionMenuNode, args: any[]): void {\n        const { commandId } = menu.action;\n        const { commandRegistry } = this.services;\n        const command = commandRegistry.getCommand(commandId);\n        if (!command) {\n            return;\n        }\n        const { id } = command;\n        if (this.actions.has(id)) {\n            return;\n        }\n        this.actions.set(id, [menu, args]);\n    }\n\n    snapshot(): this {\n        this.toDispose.dispose();\n        for (const [menu, args] of this.actions.values()) {\n            this.toDispose.push(this.registerCommand(menu, args));\n        }\n        return this;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected registerCommand(menu: ActionMenuNode, args: any[]): Disposable {\n        const { commandRegistry, keybindingRegistry } = this.services;\n        const command = commandRegistry.getCommand(menu.action.commandId);\n        if (!command) {\n            return Disposable.NULL;\n        }\n        const { id } = command;\n        if (this.hasCommand(id)) {\n            // several menu items can be registered for the same command in different contexts\n            return Disposable.NULL;\n        }\n\n        // We freeze the `isEnabled`, `isVisible`, and `isToggled` states so they won't change.\n        const enabled = commandRegistry.isEnabled(id, ...args);\n        const visible = commandRegistry.isVisible(id, ...args);\n        const toggled = commandRegistry.isToggled(id, ...args);\n        const unregisterCommand = this.addCommand(id, {\n            execute: () => commandRegistry.executeCommand(id, ...args),\n            label: menu.label,\n            icon: menu.icon,\n            isEnabled: () => enabled,\n            isVisible: () => visible,\n            isToggled: () => toggled\n        });\n\n        const bindings = keybindingRegistry.getKeybindingsForCommand(id);\n        // Only consider the first keybinding.\n        if (bindings.length) {\n            const binding = bindings[0];\n            const keys = keybindingRegistry.acceleratorFor(binding);\n            this.addKeyBinding({\n                command: id,\n                keys,\n                selector: '.p-Widget' // We have the PhosphorJS dependency anyway.\n            });\n        }\n        return Disposable.create(() => unregisterCommand.dispose());\n    }\n\n}\n"],"sourceRoot":""}