{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/core/shared/vscode-languageserver-types.js","webpack://browser-app/../node_modules/@theia/editor/src/browser/style/index.css","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-command.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-contribution.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-frontend-module.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-keybinding-contexts.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-keybinding.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-manager.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-menu.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-navigation-contribution.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-preferences.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-quick-open-service.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-variable-contribution.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-widget-factory.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor-widget.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/editor.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/navigation/navigation-location-service.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/navigation/navigation-location-similarity.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/navigation/navigation-location-updater.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/navigation/navigation-location.ts","webpack://browser-app/../node_modules/@theia/editor/src/browser/style/index.css?ae85"],"names":["module"],"mappings":"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","file":"vendors-node_modules_theia_editor_lib_browser_editor-frontend-module_js.bundle.js","sourcesContent":["module.exports = require('vscode-languageserver-types');\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-editor {\\n    height: 100%;\\n}\\n\", \"\"]);\n\n// exports\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { CommandContribution, CommandRegistry, Command } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { CommonCommands, PreferenceService, QuickPickItem, QuickPickService, LabelProvider, QuickPickValue, ApplicationShell } from '@theia/core/lib/browser';\nimport { EditorManager } from './editor-manager';\nimport { EncodingMode } from './editor';\nimport { EditorPreferences } from './editor-preferences';\nimport { ResourceProvider, MessageService } from '@theia/core';\nimport { LanguageService, Language } from '@theia/core/lib/browser/language-service';\nimport { SUPPORTED_ENCODINGS } from '@theia/core/lib/browser/supported-encodings';\n\nexport namespace EditorCommands {\n\n    const EDITOR_CATEGORY = 'Editor';\n    const VIEW_CATEGORY = 'View';\n\n    /**\n     * Show editor references\n     */\n    export const SHOW_REFERENCES: Command = {\n        id: 'textEditor.commands.showReferences'\n    };\n    /**\n     * Change indentation configuration (i.e., indent using tabs / spaces, and how many spaces per tab)\n     */\n    export const CONFIG_INDENTATION: Command = {\n        id: 'textEditor.commands.configIndentation'\n    };\n\n    export const CONFIG_EOL: Command = {\n        id: 'textEditor.commands.configEol',\n        category: EDITOR_CATEGORY,\n        label: 'Change End of Line Sequence'\n    };\n\n    export const INDENT_USING_SPACES: Command = {\n        id: 'textEditor.commands.indentUsingSpaces',\n        category: EDITOR_CATEGORY,\n        label: 'Indent Using Spaces'\n    };\n    export const INDENT_USING_TABS: Command = {\n        id: 'textEditor.commands.indentUsingTabs',\n        category: EDITOR_CATEGORY,\n        label: 'Indent Using Tabs'\n    };\n    export const CHANGE_LANGUAGE: Command = {\n        id: 'textEditor.change.language',\n        category: EDITOR_CATEGORY,\n        label: 'Change Language Mode'\n    };\n    export const CHANGE_ENCODING: Command = {\n        id: 'textEditor.change.encoding',\n        category: EDITOR_CATEGORY,\n        label: 'Change File Encoding'\n    };\n\n    /**\n     * Command for going back to the last editor navigation location.\n     */\n    export const GO_BACK: Command = {\n        id: 'textEditor.commands.go.back',\n        category: EDITOR_CATEGORY,\n        label: 'Go Back'\n    };\n    /**\n     * Command for going to the forthcoming editor navigation location.\n     */\n    export const GO_FORWARD: Command = {\n        id: 'textEditor.commands.go.forward',\n        category: EDITOR_CATEGORY,\n        label: 'Go Forward'\n    };\n    /**\n     * Command that reveals the last text edit location, if any.\n     */\n    export const GO_LAST_EDIT: Command = {\n        id: 'textEditor.commands.go.lastEdit',\n        category: EDITOR_CATEGORY,\n        label: 'Go to Last Edit Location'\n    };\n    /**\n     * Command that clears the editor navigation history.\n     */\n    export const CLEAR_EDITOR_HISTORY: Command = {\n        id: 'textEditor.commands.clear.history',\n        category: EDITOR_CATEGORY,\n        label: 'Clear Editor History'\n    };\n    /**\n     * Command that displays all editors that are currently opened.\n     */\n    export const SHOW_ALL_OPENED_EDITORS: Command = {\n        id: 'workbench.action.showAllEditors',\n        category: VIEW_CATEGORY,\n        label: 'Show All Opened Editors'\n    };\n    /**\n     * Command that toggles the minimap.\n     */\n    export const TOGGLE_MINIMAP: Command = {\n        id: 'editor.action.toggleMinimap',\n        category: VIEW_CATEGORY,\n        label: 'Toggle Minimap'\n    };\n    /**\n     * Command that toggles the rendering of whitespace characters in the editor.\n     */\n    export const TOGGLE_RENDER_WHITESPACE: Command = {\n        id: 'editor.action.toggleRenderWhitespace',\n        category: VIEW_CATEGORY,\n        label: 'Toggle Render Whitespace'\n    };\n    /**\n     * Command that toggles the word wrap.\n     */\n    export const TOGGLE_WORD_WRAP: Command = {\n        id: 'editor.action.toggleWordWrap',\n        category: VIEW_CATEGORY,\n        label: 'Toggle Word Wrap'\n    };\n    /**\n     * Command that re-opens the last closed editor.\n     */\n    export const REOPEN_CLOSED_EDITOR: Command = {\n        id: 'workbench.action.reopenClosedEditor',\n        category: VIEW_CATEGORY,\n        label: 'Reopen Closed Editor'\n    };\n    /**\n     * Opens a second instance of the current editor, splitting the view in the direction specified.\n     */\n    export const SPLIT_EDITOR_RIGHT: Command = {\n        id: 'workbench.action.splitEditorRight',\n        category: VIEW_CATEGORY,\n        label: 'Split Editor Right'\n    };\n    export const SPLIT_EDITOR_DOWN: Command = {\n        id: 'workbench.action.splitEditorDown',\n        category: VIEW_CATEGORY,\n        label: 'Split Editor Down'\n    };\n    export const SPLIT_EDITOR_UP: Command = {\n        id: 'workbench.action.splitEditorUp',\n        category: VIEW_CATEGORY,\n        label: 'Split Editor Up'\n    };\n    export const SPLIT_EDITOR_LEFT: Command = {\n        id: 'workbench.action.splitEditorLeft',\n        category: VIEW_CATEGORY,\n        label: 'Split Editor Left'\n    };\n    /**\n     * Default horizontal split: right.\n     */\n    export const SPLIT_EDITOR_HORIZONTAL: Command = {\n        id: 'workbench.action.splitEditor',\n        category: VIEW_CATEGORY,\n        label: 'Split Editor'\n    };\n    /**\n     * Default vertical split: down.\n     */\n    export const SPLIT_EDITOR_VERTICAL: Command = {\n        id: 'workbench.action.splitEditorOrthogonal',\n        category: VIEW_CATEGORY,\n        label: 'Split Editor Orthogonal'\n    };\n}\n\n@injectable()\nexport class EditorCommandContribution implements CommandContribution {\n\n    public static readonly AUTOSAVE_PREFERENCE: string = 'editor.autoSave';\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(PreferenceService)\n    protected readonly preferencesService: PreferenceService;\n\n    @inject(EditorPreferences)\n    protected readonly editorPreferences: EditorPreferences;\n\n    @inject(QuickPickService)\n    protected readonly quickPick: QuickPickService;\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(LanguageService)\n    protected readonly languages: LanguageService;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(ResourceProvider)\n    protected readonly resourceProvider: ResourceProvider;\n\n    @postConstruct()\n    protected init(): void {\n        this.editorPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'editor.autoSave' && e.newValue === 'on') {\n                this.shell.saveAll();\n            }\n        });\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(EditorCommands.SHOW_REFERENCES);\n        registry.registerCommand(EditorCommands.CONFIG_INDENTATION);\n        registry.registerCommand(EditorCommands.CONFIG_EOL);\n        registry.registerCommand(EditorCommands.INDENT_USING_SPACES);\n        registry.registerCommand(EditorCommands.INDENT_USING_TABS);\n        registry.registerCommand(EditorCommands.CHANGE_LANGUAGE, {\n            isEnabled: () => this.canConfigureLanguage(),\n            isVisible: () => this.canConfigureLanguage(),\n            execute: () => this.configureLanguage()\n        });\n        registry.registerCommand(EditorCommands.CHANGE_ENCODING, {\n            isEnabled: () => this.canConfigureEncoding(),\n            isVisible: () => this.canConfigureEncoding(),\n            execute: () => this.configureEncoding()\n        });\n\n        registry.registerCommand(EditorCommands.GO_BACK);\n        registry.registerCommand(EditorCommands.GO_FORWARD);\n        registry.registerCommand(EditorCommands.GO_LAST_EDIT);\n        registry.registerCommand(EditorCommands.CLEAR_EDITOR_HISTORY);\n        registry.registerCommand(EditorCommands.TOGGLE_MINIMAP);\n        registry.registerCommand(EditorCommands.TOGGLE_RENDER_WHITESPACE);\n        registry.registerCommand(EditorCommands.TOGGLE_WORD_WRAP);\n        registry.registerCommand(EditorCommands.REOPEN_CLOSED_EDITOR);\n\n        registry.registerCommand(CommonCommands.AUTO_SAVE, {\n            isToggled: () => this.isAutoSaveOn(),\n            execute: () => this.toggleAutoSave()\n        });\n    }\n\n    protected canConfigureLanguage(): boolean {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        return !!editor && !!this.languages.languages;\n    }\n    protected async configureLanguage(): Promise<void> {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        if (!editor || !this.languages.languages) {\n            return;\n        }\n        const current = editor.document.languageId;\n        const items: QuickPickItem<'autoDetect' | Language>[] = [\n            { label: 'Auto Detect', value: 'autoDetect' },\n            { type: 'separator', label: 'languages (identifier)' },\n            ... (this.languages.languages.map(\n                language => this.toQuickPickLanguage(language, current)\n            )).sort((e, e2) => e.label.localeCompare(e2.label))\n        ];\n        const selected = await this.quickPick.show(items, {\n            placeholder: 'Select Language Mode'\n        });\n        if (selected === 'autoDetect') {\n            editor.detectLanguage();\n        } else if (selected) {\n            editor.setLanguage(selected.id);\n        }\n    }\n\n    protected canConfigureEncoding(): boolean {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        return !!editor;\n    }\n    protected async configureEncoding(): Promise<void> {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        if (!editor) {\n            return;\n        }\n        const reopenWithEncodingPick = { label: 'Reopen with Encoding', value: 'reopen' };\n        const saveWithEncodingPick = { label: 'Save with Encoding', value: 'save' };\n        const actionItems: QuickPickItem<string>[] = [\n            reopenWithEncodingPick,\n            saveWithEncodingPick\n        ];\n        const action = await this.quickPick.show(actionItems, {\n            placeholder: 'Select Action'\n        });\n        if (!action) {\n            return;\n        }\n        const isReopenWithEncoding = (action === reopenWithEncodingPick.value);\n\n        const configuredEncoding = this.preferencesService.get<string>('files.encoding', 'utf8', editor.uri.toString());\n\n        const resource = await this.resourceProvider(editor.uri);\n        const guessedEncoding = resource.guessEncoding ? await resource.guessEncoding() : undefined;\n        resource.dispose();\n\n        const encodingItems: QuickPickItem<{ id: string, description: string }>[] = Object.keys(SUPPORTED_ENCODINGS)\n            .sort((k1, k2) => {\n                if (k1 === configuredEncoding) {\n                    return -1;\n                } else if (k2 === configuredEncoding) {\n                    return 1;\n                }\n                return SUPPORTED_ENCODINGS[k1].order - SUPPORTED_ENCODINGS[k2].order;\n            })\n            .filter(k => {\n                if (k === guessedEncoding && guessedEncoding !== configuredEncoding) {\n                    return false; // do not show encoding if it is the guessed encoding that does not match the configured\n                }\n\n                return !isReopenWithEncoding || !SUPPORTED_ENCODINGS[k].encodeOnly; // hide those that can only be used for encoding if we are about to decode\n            })\n            .map(key => ({ label: SUPPORTED_ENCODINGS[key].labelLong, value: { id: key, description: key } }));\n\n        // Insert guessed encoding\n        if (guessedEncoding && configuredEncoding !== guessedEncoding && SUPPORTED_ENCODINGS[guessedEncoding]) {\n            encodingItems.unshift({\n                label: `Guessed from content: ${SUPPORTED_ENCODINGS[guessedEncoding].labelLong}`,\n                value: { id: guessedEncoding, description: guessedEncoding }\n            });\n        }\n        const encoding = await this.quickPick.show(encodingItems, {\n            placeholder: isReopenWithEncoding ? 'Select File Encoding to Reopen File' : 'Select File Encoding to Save with'\n        });\n        if (!encoding) {\n            return;\n        }\n        if (editor.document.dirty && isReopenWithEncoding) {\n            this.messageService.info('The file is dirty. Please save it first before reopening it with another encoding.');\n            return;\n        } else {\n            editor.setEncoding(encoding.id, isReopenWithEncoding ? EncodingMode.Decode : EncodingMode.Encode);\n        }\n    }\n\n    protected toQuickPickLanguage(value: Language, current: string): QuickPickValue<Language> {\n        const languageUri = this.toLanguageUri(value);\n        const icon = this.labelProvider.getIcon(languageUri);\n        const iconClass = icon !== '' ? icon + ' file-icon' : undefined;\n        return {\n            value,\n            label: value.name,\n            description: `(${value.id})${current === value.id ? ' - Configured Language' : ''}`,\n            iconClass\n        };\n    }\n    protected toLanguageUri(language: Language): URI {\n        const extension = language.extensions.values().next();\n        if (extension.value) {\n            return new URI('file:///' + extension.value);\n        }\n        const filename = language.filenames.values().next();\n        if (filename.value) {\n            return new URI('file:///' + filename.value);\n        }\n        return new URI('file:///.txt');\n    }\n\n    private isAutoSaveOn(): boolean {\n        const autoSave = this.preferencesService.get(EditorCommandContribution.AUTOSAVE_PREFERENCE);\n        return autoSave === 'on' || autoSave === undefined;\n    }\n    private async toggleAutoSave(): Promise<void> {\n        this.preferencesService.updateValue(EditorCommandContribution.AUTOSAVE_PREFERENCE, this.isAutoSaveOn() ? 'off' : 'on');\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { EditorManager } from './editor-manager';\nimport { TextEditor } from './editor';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { StatusBarAlignment, StatusBar } from '@theia/core/lib/browser/status-bar/status-bar';\nimport { FrontendApplicationContribution, DiffUris, DockLayout } from '@theia/core/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { CommandHandler, DisposableCollection } from '@theia/core';\nimport { EditorCommands } from './editor-command';\nimport { EditorQuickOpenService } from './editor-quick-open-service';\nimport { CommandRegistry, CommandContribution } from '@theia/core/lib/common';\nimport { KeybindingRegistry, KeybindingContribution, QuickOpenContribution, QuickOpenHandlerRegistry } from '@theia/core/lib/browser';\nimport { LanguageService } from '@theia/core/lib/browser/language-service';\nimport { SUPPORTED_ENCODINGS } from '@theia/core/lib/browser/supported-encodings';\n\n@injectable()\nexport class EditorContribution implements FrontendApplicationContribution, CommandContribution, KeybindingContribution, QuickOpenContribution {\n\n    @inject(StatusBar) protected readonly statusBar: StatusBar;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(LanguageService) protected readonly languages: LanguageService;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @inject(EditorQuickOpenService)\n    protected readonly editorQuickOpenService: EditorQuickOpenService;\n\n    onStart(): void {\n        this.initEditorContextKeys();\n\n        this.updateStatusBar();\n        this.editorManager.onCurrentEditorChanged(() => this.updateStatusBar());\n    }\n\n    protected initEditorContextKeys(): void {\n        const editorIsOpen = this.contextKeyService.createKey<boolean>('editorIsOpen', false);\n        const textCompareEditorVisible = this.contextKeyService.createKey<boolean>('textCompareEditorVisible', false);\n        const updateContextKeys = () => {\n            const widgets = this.editorManager.all;\n            editorIsOpen.set(!!widgets.length);\n            textCompareEditorVisible.set(widgets.some(widget => DiffUris.isDiffUri(widget.editor.uri)));\n        };\n        updateContextKeys();\n        for (const widget of this.editorManager.all) {\n            widget.disposed.connect(updateContextKeys);\n        }\n        this.editorManager.onCreated(widget => {\n            updateContextKeys();\n            widget.disposed.connect(updateContextKeys);\n        });\n    }\n\n    protected readonly toDisposeOnCurrentEditorChanged = new DisposableCollection();\n    protected updateStatusBar(): void {\n        this.toDisposeOnCurrentEditorChanged.dispose();\n\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        this.updateLanguageStatus(editor);\n        this.updateEncodingStatus(editor);\n        this.setCursorPositionStatus(editor);\n        if (editor) {\n            this.toDisposeOnCurrentEditorChanged.pushAll([\n                editor.onLanguageChanged(() => this.updateLanguageStatus(editor)),\n                editor.onEncodingChanged(() => this.updateEncodingStatus(editor)),\n                editor.onCursorPositionChanged(() => this.setCursorPositionStatus(editor))\n            ]);\n        }\n    }\n\n    protected updateLanguageStatus(editor: TextEditor | undefined): void {\n        if (!editor) {\n            this.statusBar.removeElement('editor-status-language');\n            return;\n        }\n        const language = this.languages.getLanguage(editor.document.languageId);\n        const languageName = language ? language.name : '';\n        this.statusBar.setElement('editor-status-language', {\n            text: languageName,\n            alignment: StatusBarAlignment.RIGHT,\n            priority: 1,\n            command: EditorCommands.CHANGE_LANGUAGE.id,\n            tooltip: 'Select Language Mode'\n        });\n    }\n\n    protected updateEncodingStatus(editor: TextEditor | undefined): void {\n        if (!editor) {\n            this.statusBar.removeElement('editor-status-encoding');\n            return;\n        }\n        this.statusBar.setElement('editor-status-encoding', {\n            text: SUPPORTED_ENCODINGS[editor.getEncoding()].labelShort,\n            alignment: StatusBarAlignment.RIGHT,\n            priority: 10,\n            command: EditorCommands.CHANGE_ENCODING.id,\n            tooltip: 'Select Encoding'\n        });\n    }\n\n    protected setCursorPositionStatus(editor: TextEditor | undefined): void {\n        if (!editor) {\n            this.statusBar.removeElement('editor-status-cursor-position');\n            return;\n        }\n        const { cursor } = editor;\n        this.statusBar.setElement('editor-status-cursor-position', {\n            text: `Ln ${cursor.line + 1}, Col ${editor.getVisibleColumn(cursor)}`,\n            alignment: StatusBarAlignment.RIGHT,\n            priority: 100,\n            tooltip: 'Go To Line',\n            command: 'editor.action.gotoLine'\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(EditorCommands.SHOW_ALL_OPENED_EDITORS, {\n            execute: () => this.editorQuickOpenService.open()\n        });\n        const splitHandlerFactory = (splitMode: DockLayout.InsertMode): CommandHandler => ({\n            isEnabled: () => !!this.editorManager.currentEditor,\n            isVisible: () => !!this.editorManager.currentEditor,\n            execute: async () => {\n                const { currentEditor } = this.editorManager;\n                if (currentEditor) {\n                    const selection = currentEditor.editor.selection;\n                    const newEditor = await this.editorManager.openToSide(currentEditor.editor.uri, { selection, widgetOptions: { mode: splitMode } });\n                    const oldEditorState = currentEditor.editor.storeViewState();\n                    newEditor.editor.restoreViewState(oldEditorState);\n                }\n            }\n        });\n        commands.registerCommand(EditorCommands.SPLIT_EDITOR_HORIZONTAL, splitHandlerFactory('split-right'));\n        commands.registerCommand(EditorCommands.SPLIT_EDITOR_VERTICAL, splitHandlerFactory('split-bottom'));\n        commands.registerCommand(EditorCommands.SPLIT_EDITOR_RIGHT, splitHandlerFactory('split-right'));\n        commands.registerCommand(EditorCommands.SPLIT_EDITOR_DOWN, splitHandlerFactory('split-bottom'));\n        commands.registerCommand(EditorCommands.SPLIT_EDITOR_UP, splitHandlerFactory('split-top'));\n        commands.registerCommand(EditorCommands.SPLIT_EDITOR_LEFT, splitHandlerFactory('split-left'));\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: EditorCommands.SHOW_ALL_OPENED_EDITORS.id,\n            keybinding: 'ctrlcmd+k ctrlcmd+p'\n        });\n        keybindings.registerKeybinding({\n            command: EditorCommands.SPLIT_EDITOR_HORIZONTAL.id,\n            keybinding: 'ctrlcmd+\\\\',\n        });\n        keybindings.registerKeybinding({\n            command: EditorCommands.SPLIT_EDITOR_VERTICAL.id,\n            keybinding: 'ctrlcmd+k ctrlcmd+\\\\',\n        });\n    }\n\n    registerQuickOpenHandlers(handlers: QuickOpenHandlerRegistry): void {\n        handlers.registerHandler(this.editorQuickOpenService);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/index.css';\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { OpenHandler, WidgetFactory, FrontendApplicationContribution, KeybindingContext, KeybindingContribution, QuickOpenContribution } from '@theia/core/lib/browser';\nimport { VariableContribution } from '@theia/variable-resolver/lib/browser';\nimport { EditorManager, EditorAccess, ActiveEditorAccess, CurrentEditorAccess } from './editor-manager';\nimport { EditorContribution } from './editor-contribution';\nimport { EditorMenuContribution } from './editor-menu';\nimport { EditorCommandContribution } from './editor-command';\nimport { EditorTextFocusContext, StrictEditorTextFocusContext, DiffEditorTextFocusContext } from './editor-keybinding-contexts';\nimport { EditorKeybindingContribution } from './editor-keybinding';\nimport { bindEditorPreferences } from './editor-preferences';\nimport { EditorWidgetFactory } from './editor-widget-factory';\nimport { EditorNavigationContribution } from './editor-navigation-contribution';\nimport { NavigationLocationUpdater } from './navigation/navigation-location-updater';\nimport { NavigationLocationService } from './navigation/navigation-location-service';\nimport { NavigationLocationSimilarity } from './navigation/navigation-location-similarity';\nimport { EditorVariableContribution } from './editor-variable-contribution';\nimport { EditorQuickOpenService } from './editor-quick-open-service';\n\nexport default new ContainerModule(bind => {\n    bindEditorPreferences(bind);\n\n    bind(EditorWidgetFactory).toSelf().inSingletonScope();\n    bind(WidgetFactory).toService(EditorWidgetFactory);\n\n    bind(EditorManager).toSelf().inSingletonScope();\n    bind(OpenHandler).toService(EditorManager);\n\n    bind(EditorCommandContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(EditorCommandContribution);\n\n    bind(EditorMenuContribution).toSelf().inSingletonScope();\n    bind(MenuContribution).toService(EditorMenuContribution);\n\n    bind(StrictEditorTextFocusContext).toSelf().inSingletonScope();\n    bind(KeybindingContext).toService(StrictEditorTextFocusContext);\n    bind(KeybindingContext).to(EditorTextFocusContext).inSingletonScope();\n    bind(KeybindingContext).to(DiffEditorTextFocusContext).inSingletonScope();\n    bind(EditorKeybindingContribution).toSelf().inSingletonScope();\n    bind(KeybindingContribution).toService(EditorKeybindingContribution);\n\n    bind(EditorContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(EditorContribution);\n\n    bind(EditorNavigationContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(EditorNavigationContribution);\n    bind(NavigationLocationService).toSelf().inSingletonScope();\n    bind(NavigationLocationUpdater).toSelf().inSingletonScope();\n    bind(NavigationLocationSimilarity).toSelf().inSingletonScope();\n\n    bind(VariableContribution).to(EditorVariableContribution).inSingletonScope();\n\n    [CommandContribution, KeybindingContribution, QuickOpenContribution].forEach(serviceIdentifier => {\n        bind(serviceIdentifier).toService(EditorContribution);\n    });\n    bind(EditorQuickOpenService).toSelf().inSingletonScope();\n\n    bind(CurrentEditorAccess).toSelf().inSingletonScope();\n    bind(ActiveEditorAccess).toSelf().inSingletonScope();\n    bind(EditorAccess).to(CurrentEditorAccess).inSingletonScope().whenTargetNamed(EditorAccess.CURRENT);\n    bind(EditorAccess).to(ActiveEditorAccess).inSingletonScope().whenTargetNamed(EditorAccess.ACTIVE);\n});\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { KeybindingContext } from '@theia/core/lib/browser/keybinding';\nimport { EditorManager } from './editor-manager';\nimport { EditorWidget } from './editor-widget';\nimport { DiffUris } from '@theia/core/lib/browser';\n\nexport namespace EditorKeybindingContexts {\n\n    /**\n     * ID of a keybinding context that is enabled when the active text editor has the focus.\n     */\n    export const editorTextFocus = 'editorTextFocus';\n\n    /**\n     * ID of a keybinding context that is enabled when the active diff editor has the focus.\n     */\n    export const diffEditorTextFocus = 'diffEditorTextFocus';\n\n    /**\n     * Unique identifier of a keybinding context that is enabled if the active editor has the focus but it does not have any overlaying widgets, such as the content assist widget.\n     */\n    export const strictEditorTextFocus = 'strictEditorTextFocus';\n}\n\n@injectable()\nexport class EditorTextFocusContext implements KeybindingContext {\n\n    readonly id: string = EditorKeybindingContexts.editorTextFocus;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    isEnabled(): boolean {\n        return !!this.getEditor();\n    }\n\n    protected getEditor(): EditorWidget | undefined {\n        const widget = this.editorManager.activeEditor;\n        if (widget && this.canHandle(widget)) {\n            return widget;\n        }\n        return undefined;\n    }\n\n    protected canHandle(widget: EditorWidget): boolean {\n        return widget.editor.isFocused();\n    }\n\n}\n\n@injectable()\nexport class DiffEditorTextFocusContext extends EditorTextFocusContext {\n\n    readonly id: string = EditorKeybindingContexts.diffEditorTextFocus;\n\n    protected canHandle(widget: EditorWidget): boolean {\n        return super.canHandle(widget) && DiffUris.isDiffUri(widget.editor.uri);\n    }\n\n}\n\n/**\n * Keybinding context that is enabled when the active text editor has the focus **AND** it does not\n * have any widgets (for example, the content assist widget) overlaying the active editor.\n */\n@injectable()\nexport class StrictEditorTextFocusContext extends EditorTextFocusContext {\n\n    readonly id: string = EditorKeybindingContexts.strictEditorTextFocus;\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { environment } from '@theia/core/shared/@theia/application-package/lib/environment';\nimport { isOSX, isWindows } from '@theia/core/lib/common/os';\nimport { KeybindingContribution, KeybindingRegistry } from '@theia/core/lib/browser/keybinding';\nimport { EditorCommands } from './editor-command';\n\n@injectable()\nexport class EditorKeybindingContribution implements KeybindingContribution {\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        registry.registerKeybindings(\n            {\n                command: EditorCommands.GO_BACK.id,\n                keybinding: isOSX ? 'ctrl+-' : isWindows ? 'alt+left' : /* isLinux */ 'ctrl+alt+-'\n            },\n            {\n                command: EditorCommands.GO_FORWARD.id,\n                keybinding: isOSX ? 'ctrl+shift+-' : isWindows ? 'alt+right' : /* isLinux */ 'ctrl+shift+-'\n            },\n            {\n                command: EditorCommands.GO_LAST_EDIT.id,\n                keybinding: 'ctrl+alt+q'\n            },\n            {\n                command: EditorCommands.TOGGLE_WORD_WRAP.id,\n                keybinding: 'alt+z'\n            },\n            {\n                command: EditorCommands.REOPEN_CLOSED_EDITOR.id,\n                keybinding: this.isElectron() ? 'ctrlcmd+shift+t' : 'alt+shift+t'\n            }\n        );\n    }\n\n    private isElectron(): boolean {\n        return environment.electron.is();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, postConstruct, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { RecursivePartial, Emitter, Event, MaybePromise } from '@theia/core/lib/common';\nimport { WidgetOpenerOptions, NavigatableWidgetOpenHandler, NavigatableWidgetOptions, Widget } from '@theia/core/lib/browser';\nimport { EditorWidget } from './editor-widget';\nimport { Range, Position, Location } from './editor';\nimport { EditorWidgetFactory } from './editor-widget-factory';\nimport { TextEditor } from './editor';\n\nexport interface WidgetId {\n    id: number;\n    uri: string;\n}\n\nexport interface EditorOpenerOptions extends WidgetOpenerOptions {\n    selection?: RecursivePartial<Range>;\n    preview?: boolean;\n    counter?: number\n}\n\n@injectable()\nexport class EditorManager extends NavigatableWidgetOpenHandler<EditorWidget> {\n\n    readonly id = EditorWidgetFactory.ID;\n\n    readonly label = 'Code Editor';\n\n    protected readonly editorCounters = new Map<string, number>();\n\n    protected readonly onActiveEditorChangedEmitter = new Emitter<EditorWidget | undefined>();\n    /**\n     * Emit when the active editor is changed.\n     */\n    readonly onActiveEditorChanged: Event<EditorWidget | undefined> = this.onActiveEditorChangedEmitter.event;\n\n    protected readonly onCurrentEditorChangedEmitter = new Emitter<EditorWidget | undefined>();\n    /**\n     * Emit when the current editor is changed.\n     */\n    readonly onCurrentEditorChanged: Event<EditorWidget | undefined> = this.onCurrentEditorChangedEmitter.event;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.shell.onDidChangeActiveWidget(() => this.updateActiveEditor());\n        this.shell.onDidChangeCurrentWidget(() => this.updateCurrentEditor());\n        this.onCreated(widget => {\n            widget.onDidChangeVisibility(() => {\n                if (widget.isVisible) {\n                    this.addRecentlyVisible(widget);\n                }\n                this.updateCurrentEditor();\n            });\n            this.checkCounterForWidget(widget);\n            widget.disposed.connect(() => {\n                this.removeFromCounter(widget);\n                this.removeRecentlyVisible(widget);\n                this.updateCurrentEditor();\n            });\n        });\n        for (const widget of this.all) {\n            if (widget.isVisible) {\n                this.addRecentlyVisible(widget);\n            }\n        }\n        this.updateCurrentEditor();\n    }\n\n    getByUri(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget | undefined> {\n        return this.getWidget(uri, options);\n    }\n\n    getOrCreateByUri(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        return this.getOrCreateWidget(uri, options);\n    }\n\n    protected tryGetPendingWidget(uri: URI, options?: EditorOpenerOptions): MaybePromise<EditorWidget> | undefined {\n        const editorPromise = super.tryGetPendingWidget(uri, options);\n        if (editorPromise) {\n            // Reveal selection before attachment to manage nav stack. (https://github.com/eclipse-theia/theia/issues/8955)\n            if (!(editorPromise instanceof Widget)) {\n                editorPromise.then(editor => this.revealSelection(editor, options, uri));\n            } else {\n                this.revealSelection(editorPromise, options);\n            }\n        }\n        return editorPromise;\n    }\n\n    protected async getWidget(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget | undefined> {\n        const editor = await super.getWidget(uri, options);\n        if (editor) {\n            // Reveal selection before attachment to manage nav stack. (https://github.com/eclipse-theia/theia/issues/8955)\n            this.revealSelection(editor, options, uri);\n        }\n        return editor;\n    }\n\n    protected async getOrCreateWidget(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        const editor = await super.getOrCreateWidget(uri, options);\n        // Reveal selection before attachment to manage nav stack. (https://github.com/eclipse-theia/theia/issues/8955)\n        this.revealSelection(editor, options, uri);\n        return editor;\n    }\n\n    protected readonly recentlyVisibleIds: string[] = [];\n    protected get recentlyVisible(): EditorWidget | undefined {\n        const id = this.recentlyVisibleIds[0];\n        return id && this.all.find(w => w.id === id) || undefined;\n    }\n    protected addRecentlyVisible(widget: EditorWidget): void {\n        this.removeRecentlyVisible(widget);\n        this.recentlyVisibleIds.unshift(widget.id);\n    }\n    protected removeRecentlyVisible(widget: EditorWidget): void {\n        const index = this.recentlyVisibleIds.indexOf(widget.id);\n        if (index !== -1) {\n            this.recentlyVisibleIds.splice(index, 1);\n        }\n    }\n\n    protected _activeEditor: EditorWidget | undefined;\n    /**\n     * The active editor.\n     * If there is an active editor (one that has focus), active and current are the same.\n     */\n    get activeEditor(): EditorWidget | undefined {\n        return this._activeEditor;\n    }\n    protected setActiveEditor(active: EditorWidget | undefined): void {\n        if (this._activeEditor !== active) {\n            this._activeEditor = active;\n            this.onActiveEditorChangedEmitter.fire(this._activeEditor);\n        }\n    }\n    protected updateActiveEditor(): void {\n        const widget = this.shell.activeWidget;\n        if (widget instanceof EditorWidget) {\n            this.addRecentlyVisible(widget);\n            this.setActiveEditor(widget);\n        } else {\n            this.setActiveEditor(undefined);\n        }\n    }\n\n    protected _currentEditor: EditorWidget | undefined;\n    /**\n     * The most recently activated editor (which might not have the focus anymore, hence it is not active).\n     * If no editor has focus, e.g. when a context menu is shown, the active editor is `undefined`, but current might be the editor that was active before the menu popped up.\n     */\n    get currentEditor(): EditorWidget | undefined {\n        return this._currentEditor;\n    }\n    protected setCurrentEditor(current: EditorWidget | undefined): void {\n        if (this._currentEditor !== current) {\n            this._currentEditor = current;\n            this.onCurrentEditorChangedEmitter.fire(this._currentEditor);\n        }\n    }\n    protected updateCurrentEditor(): void {\n        const widget = this.shell.currentWidget;\n        if (widget instanceof EditorWidget) {\n            this.setCurrentEditor(widget);\n        } else if (!this._currentEditor || !this._currentEditor.isVisible || this.currentEditor !== this.recentlyVisible) {\n            this.setCurrentEditor(this.recentlyVisible);\n        }\n    }\n\n    canHandle(uri: URI, options?: WidgetOpenerOptions): number {\n        return 100;\n    }\n\n    // This override only serves to inform external callers that they can use EditorOpenerOptions.\n    open(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        return super.open(uri, options);\n    }\n\n    /**\n     * Opens an editor to the side of the current editor. Defaults to opening to the right.\n     * To modify direction, pass options with `{widgetOptions: {mode: ...}}`\n     */\n    openToSide(uri: URI, options?: EditorOpenerOptions): Promise<EditorWidget> {\n        const counter = this.createCounterForUri(uri);\n        const splitOptions: EditorOpenerOptions = { widgetOptions: { mode: 'split-right' }, ...options, counter };\n        return this.open(uri, splitOptions);\n    }\n\n    protected revealSelection(widget: EditorWidget, input?: EditorOpenerOptions, uri?: URI): void {\n        let inputSelection = input?.selection;\n        if (!inputSelection && uri) {\n            const match = /^L?(\\d+)(?:,(\\d+))?/.exec(uri.fragment);\n            if (match) {\n                // support file:///some/file.js#73,84\n                // support file:///some/file.js#L73\n                inputSelection = {\n                    start: {\n                        line: parseInt(match[1]) - 1,\n                        character: match[2] ? parseInt(match[2]) - 1 : 0\n                    }\n                };\n            }\n        }\n        if (inputSelection) {\n            const editor = widget.editor;\n            const selection = this.getSelection(widget, inputSelection);\n            if (Position.is(selection)) {\n                editor.cursor = selection;\n                editor.revealPosition(selection);\n            } else if (Range.is(selection)) {\n                editor.cursor = selection.end;\n                editor.selection = selection;\n                editor.revealRange(selection);\n            }\n        }\n    }\n\n    protected getSelection(widget: EditorWidget, selection: RecursivePartial<Range>): Range | Position | undefined {\n        const { start, end } = selection;\n        const line = start && start.line !== undefined && start.line >= 0 ? start.line : undefined;\n        if (line === undefined) {\n            return undefined;\n        }\n        const character = start && start.character !== undefined && start.character >= 0 ? start.character : widget.editor.document.getLineMaxColumn(line);\n        const endLine = end && end.line !== undefined && end.line >= 0 ? end.line : undefined;\n        if (endLine === undefined) {\n            return { line, character };\n        }\n        const endCharacter = end && end.character !== undefined && end.character >= 0 ? end.character : widget.editor.document.getLineMaxColumn(endLine);\n        return {\n            start: { line, character },\n            end: { line: endLine, character: endCharacter }\n        };\n    }\n\n    protected removeFromCounter(widget: EditorWidget): void {\n        const { id, uri } = this.extractIdFromWidget(widget);\n        if (uri && !Number.isNaN(id)) {\n            let max = -Infinity;\n            this.all.forEach(editor => {\n                const candidateID = this.extractIdFromWidget(editor);\n                if ((candidateID.uri === uri) && (candidateID.id > max)) {\n                    max = candidateID.id!;\n                }\n            });\n\n            if (max > -Infinity) {\n                this.editorCounters.set(uri, max);\n            } else {\n                this.editorCounters.delete(uri);\n            }\n        }\n    }\n\n    protected extractIdFromWidget(widget: EditorWidget): WidgetId {\n        const uri = widget.editor.uri.toString();\n        const id = Number(widget.id.slice(widget.id.lastIndexOf(':') + 1));\n        return { id, uri };\n    }\n\n    protected checkCounterForWidget(widget: EditorWidget): void {\n        const { id, uri } = this.extractIdFromWidget(widget);\n        const numericalId = Number(id);\n        if (uri && !Number.isNaN(numericalId)) {\n            const highestKnownId = this.editorCounters.get(uri) ?? -Infinity;\n            if (numericalId > highestKnownId) {\n                this.editorCounters.set(uri, numericalId);\n            }\n        }\n    }\n\n    protected createCounterForUri(uri: URI): number {\n        const identifier = uri.toString();\n        const next = (this.editorCounters.get(identifier) ?? 0) + 1;\n        return next;\n    }\n\n    protected getCounterForUri(uri: URI): number | undefined {\n        const idWithoutCounter = EditorWidgetFactory.createID(uri);\n        const counterOfMostRecentlyVisibleEditor = this.recentlyVisibleIds.find(id => id.startsWith(idWithoutCounter))?.slice(idWithoutCounter.length + 1);\n        return counterOfMostRecentlyVisibleEditor === undefined ? undefined : parseInt(counterOfMostRecentlyVisibleEditor);\n    }\n\n    protected getOrCreateCounterForUri(uri: URI): number {\n        return this.getCounterForUri(uri) ?? this.createCounterForUri(uri);\n    }\n\n    protected createWidgetOptions(uri: URI, options?: EditorOpenerOptions): NavigatableWidgetOptions {\n        const navigatableOptions = super.createWidgetOptions(uri, options);\n        navigatableOptions.counter = options?.counter ?? this.getOrCreateCounterForUri(uri);\n        return navigatableOptions;\n    }\n}\n\n/**\n * Provides direct access to the underlying text editor.\n */\n@injectable()\nexport abstract class EditorAccess {\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    /**\n     * The URI of the underlying document from the editor.\n     */\n    get uri(): string | undefined {\n        const editor = this.editor;\n        if (editor) {\n            return editor.uri.toString();\n        }\n        return undefined;\n    }\n\n    /**\n     * The selection location from the text editor.\n     */\n    get selection(): Location | undefined {\n        const editor = this.editor;\n        if (editor) {\n            const uri = editor.uri.toString();\n            const range = editor.selection;\n            return {\n                range,\n                uri\n            };\n        }\n        return undefined;\n    }\n\n    /**\n     * The unique identifier of the language the current editor belongs to.\n     */\n    get languageId(): string | undefined {\n        const editor = this.editor;\n        if (editor) {\n            return editor.document.languageId;\n        }\n        return undefined;\n    }\n\n    /**\n     * The text editor.\n     */\n    get editor(): TextEditor | undefined {\n        const editorWidget = this.editorWidget();\n        if (editorWidget) {\n            return editorWidget.editor;\n        }\n        return undefined;\n    }\n\n    /**\n     * The editor widget, or `undefined` if not applicable.\n     */\n    protected abstract editorWidget(): EditorWidget | undefined;\n\n}\n\n/**\n * Provides direct access to the currently active text editor.\n */\n@injectable()\nexport class CurrentEditorAccess extends EditorAccess {\n\n    protected editorWidget(): EditorWidget | undefined {\n        return this.editorManager.currentEditor;\n    }\n\n}\n\n/**\n * Provides access to the active text editor.\n */\n@injectable()\nexport class ActiveEditorAccess extends EditorAccess {\n\n    protected editorWidget(): EditorWidget | undefined {\n        return this.editorManager.activeEditor;\n    }\n\n}\n\nexport namespace EditorAccess {\n    export const CURRENT = 'current-editor-access';\n    export const ACTIVE = 'active-editor-access';\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MenuContribution, MenuModelRegistry, MenuPath, MAIN_MENU_BAR } from '@theia/core';\nimport { CommonCommands, CommonMenus } from '@theia/core/lib/browser';\nimport { EditorCommands } from './editor-command';\n\nexport const EDITOR_CONTEXT_MENU: MenuPath = ['editor_context_menu'];\n\n/**\n * Editor context menu default groups should be aligned\n * with VS Code default groups: https://code.visualstudio.com/api/references/contribution-points#contributes.menus\n */\nexport namespace EditorContextMenu {\n    export const NAVIGATION = [...EDITOR_CONTEXT_MENU, 'navigation'];\n    export const MODIFICATION = [...EDITOR_CONTEXT_MENU, '1_modification'];\n    export const CUT_COPY_PASTE = [...EDITOR_CONTEXT_MENU, '9_cutcopypaste'];\n    export const COMMANDS = [...EDITOR_CONTEXT_MENU, 'z_commands'];\n    export const UNDO_REDO = [...EDITOR_CONTEXT_MENU, '1_undo'];\n}\n\nexport namespace EditorMainMenu {\n\n    /**\n     * The main `Go` menu item.\n     */\n    export const GO = [...MAIN_MENU_BAR, '5_go'];\n\n    /**\n     * Navigation menu group in the `Go` menu.\n     */\n    export const NAVIGATION_GROUP = [...GO, '1_navigation_group'];\n\n}\n\n@injectable()\nexport class EditorMenuContribution implements MenuContribution {\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(EditorContextMenu.UNDO_REDO, {\n            commandId: CommonCommands.UNDO.id\n        });\n        registry.registerMenuAction(EditorContextMenu.UNDO_REDO, {\n            commandId: CommonCommands.REDO.id\n        });\n\n        registry.registerMenuAction(EditorContextMenu.CUT_COPY_PASTE, {\n            commandId: CommonCommands.CUT.id,\n            order: '0'\n        });\n        registry.registerMenuAction(EditorContextMenu.CUT_COPY_PASTE, {\n            commandId: CommonCommands.COPY.id,\n            order: '1'\n        });\n        registry.registerMenuAction(EditorContextMenu.CUT_COPY_PASTE, {\n            commandId: CommonCommands.PASTE.id,\n            order: '2'\n        });\n\n        // Editor navigation. Go > Back and Go > Forward.\n        registry.registerSubmenu(EditorMainMenu.GO, 'Go');\n        registry.registerMenuAction(EditorMainMenu.NAVIGATION_GROUP, {\n            commandId: EditorCommands.GO_BACK.id,\n            label: 'Back'\n        });\n        registry.registerMenuAction(EditorMainMenu.NAVIGATION_GROUP, {\n            commandId: EditorCommands.GO_FORWARD.id,\n            label: 'Forward'\n        });\n        registry.registerMenuAction(EditorMainMenu.NAVIGATION_GROUP, {\n            commandId: EditorCommands.GO_LAST_EDIT.id,\n            label: 'Last Edit Location'\n        });\n\n        // Toggle Commands.\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_WORD_WRAP.id,\n            label: EditorCommands.TOGGLE_WORD_WRAP.label,\n            order: '0'\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_MINIMAP.id,\n            label: 'Show Minimap',\n            order: '1',\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_RENDER_WHITESPACE.id,\n            label: 'Render Whitespace',\n            order: '2'\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { StorageService } from '@theia/core/lib/browser/storage-service';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser/frontend-application';\nimport { CommandRegistry } from '@theia/core/lib/common/command';\nimport { EditorCommands } from './editor-command';\nimport { EditorWidget } from './editor-widget';\nimport { EditorManager } from './editor-manager';\nimport { TextEditor, Position, Range, TextDocumentChangeEvent } from './editor';\nimport { NavigationLocation, RecentlyClosedEditor } from './navigation/navigation-location';\nimport { NavigationLocationService } from './navigation/navigation-location-service';\nimport { PreferenceService, PreferenceScope } from '@theia/core/lib/browser';\n\n@injectable()\nexport class EditorNavigationContribution implements Disposable, FrontendApplicationContribution {\n\n    private static ID = 'editor-navigation-contribution';\n    private static CLOSED_EDITORS_KEY = 'recently-closed-editors';\n\n    protected readonly toDispose = new DisposableCollection();\n    protected readonly toDisposePerCurrentEditor = new DisposableCollection();\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(NavigationLocationService)\n    protected readonly locationStack: NavigationLocationService;\n\n    @inject(StorageService)\n    protected readonly storageService: StorageService;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.pushAll([\n            // TODO listen on file resource changes, if a file gets deleted, remove the corresponding navigation locations (if any).\n            // This would require introducing the FS dependency in the editor extension.\n            this.editorManager.onCurrentEditorChanged(this.onCurrentEditorChanged.bind(this)),\n            this.editorManager.onCreated(widget => {\n                this.locationStack.removeClosedEditor(widget.editor.uri);\n                widget.disposed.connect(() => this.locationStack.addClosedEditor({\n                    uri: widget.editor.uri,\n                    viewState: widget.editor.storeViewState()\n                }));\n            })\n        ]);\n        this.commandRegistry.registerHandler(EditorCommands.GO_BACK.id, {\n            execute: () => this.locationStack.back(),\n            isEnabled: () => this.locationStack.canGoBack()\n        });\n        this.commandRegistry.registerHandler(EditorCommands.GO_FORWARD.id, {\n            execute: () => this.locationStack.forward(),\n            isEnabled: () => this.locationStack.canGoForward()\n        });\n        this.commandRegistry.registerHandler(EditorCommands.GO_LAST_EDIT.id, {\n            execute: () => this.locationStack.reveal(this.locationStack.lastEditLocation()),\n            isEnabled: () => !!this.locationStack.lastEditLocation()\n        });\n        this.commandRegistry.registerHandler(EditorCommands.CLEAR_EDITOR_HISTORY.id, {\n            execute: () => this.locationStack.clearHistory(),\n            isEnabled: () => this.locationStack.locations().length > 0\n        });\n        this.commandRegistry.registerHandler(EditorCommands.TOGGLE_MINIMAP.id, {\n            execute: () => this.toggleMinimap(),\n            isEnabled: () => true,\n            isToggled: () => this.isMinimapEnabled()\n        });\n        this.commandRegistry.registerHandler(EditorCommands.TOGGLE_RENDER_WHITESPACE.id, {\n            execute: () => this.toggleRenderWhitespace(),\n            isEnabled: () => true,\n            isToggled: () => this.isRenderWhitespaceEnabled()\n        });\n        this.commandRegistry.registerHandler(EditorCommands.TOGGLE_WORD_WRAP.id, {\n            execute: () => this.toggleWordWrap(),\n            isEnabled: () => true,\n        });\n        this.commandRegistry.registerHandler(EditorCommands.REOPEN_CLOSED_EDITOR.id, {\n            execute: () => this.reopenLastClosedEditor()\n        });\n    }\n\n    /**\n     * Reopens the last closed editor with its stored view state if possible from history.\n     * If the editor cannot be restored, continue to the next editor in history.\n     */\n    protected async reopenLastClosedEditor(): Promise<void> {\n        const lastClosedEditor = this.locationStack.getLastClosedEditor();\n        if (lastClosedEditor === undefined) {\n            return;\n        }\n\n        try {\n            const widget = await this.editorManager.open(lastClosedEditor.uri);\n            widget.editor.restoreViewState(lastClosedEditor.viewState);\n        } catch {\n            this.locationStack.removeClosedEditor(lastClosedEditor.uri);\n            this.reopenLastClosedEditor();\n        }\n    }\n\n    async onStart(): Promise<void> {\n        await this.restoreState();\n    }\n\n    onStop(): void {\n        this.storeState();\n        this.dispose();\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    /**\n     * Toggle the editor word wrap behavior.\n     */\n    protected async toggleWordWrap(): Promise<void> {\n        // Get the current word wrap.\n        const wordWrap: string | undefined = this.preferenceService.get('editor.wordWrap');\n        if (wordWrap === undefined) {\n            return;\n        }\n        // The list of allowed word wrap values.\n        const values: string[] = ['off', 'on', 'wordWrapColumn', 'bounded'];\n        // Get the index of the current value, and toggle to the next available value.\n        const index = values.indexOf(wordWrap) + 1;\n        if (index > -1) {\n            this.preferenceService.set('editor.wordWrap', values[index % values.length], PreferenceScope.User);\n        }\n    }\n\n    /**\n     * Toggle the display of minimap in the editor.\n     */\n    protected async toggleMinimap(): Promise<void> {\n        const value: boolean | undefined = this.preferenceService.get('editor.minimap.enabled');\n        this.preferenceService.set('editor.minimap.enabled', !value, PreferenceScope.User);\n    }\n\n    /**\n     * Toggle the rendering of whitespace in the editor.\n     */\n    protected async toggleRenderWhitespace(): Promise<void> {\n        const renderWhitespace: string | undefined = this.preferenceService.get('editor.renderWhitespace');\n        let updatedRenderWhitespace: string;\n        if (renderWhitespace === 'none') {\n            updatedRenderWhitespace = 'all';\n        } else {\n            updatedRenderWhitespace = 'none';\n        }\n        this.preferenceService.set('editor.renderWhitespace', updatedRenderWhitespace, PreferenceScope.User);\n    }\n\n    protected onCurrentEditorChanged(editorWidget: EditorWidget | undefined): void {\n        this.toDisposePerCurrentEditor.dispose();\n        if (editorWidget) {\n            const { editor } = editorWidget;\n            this.toDisposePerCurrentEditor.pushAll([\n                // Instead of registering an `onCursorPositionChanged` listener, we treat the zero length selection as a cursor position change.\n                // Otherwise we would have two events for a single cursor change interaction.\n                editor.onSelectionChanged(selection => this.onSelectionChanged(editor, selection)),\n                editor.onDocumentContentChanged(event => this.onDocumentContentChanged(editor, event))\n            ]);\n            this.locationStack.register(NavigationLocation.create(editor, editor.selection));\n        }\n    }\n\n    protected onCursorPositionChanged(editor: TextEditor, position: Position): void {\n        this.locationStack.register(NavigationLocation.create(editor, position));\n    }\n\n    protected onSelectionChanged(editor: TextEditor, selection: Range): void {\n        if (this.isZeroLengthRange(selection)) {\n            this.onCursorPositionChanged(editor, selection.start);\n        } else {\n            this.locationStack.register(NavigationLocation.create(editor, selection));\n        }\n    }\n\n    protected onDocumentContentChanged(editor: TextEditor, event: TextDocumentChangeEvent): void {\n        if (event.contentChanges.length > 0) {\n            this.locationStack.register(NavigationLocation.create(editor, event.contentChanges[0]));\n        }\n    }\n\n    /**\n     * `true` if the `range` argument has zero length. In other words, the `start` and the `end` positions are the same. Otherwise, `false`.\n     */\n    protected isZeroLengthRange(range: Range): boolean {\n        const { start, end } = range;\n        return start.line === end.line && start.character === end.character;\n    }\n\n    protected async storeState(): Promise<void> {\n        this.storageService.setData(EditorNavigationContribution.ID, {\n            locations: this.locationStack.locations().map(NavigationLocation.toObject)\n        });\n        this.storageService.setData(EditorNavigationContribution.CLOSED_EDITORS_KEY, {\n            closedEditors: this.shouldStoreClosedEditors() ? this.locationStack.closedEditorsStack.map(RecentlyClosedEditor.toObject) : []\n        });\n    }\n\n    protected async restoreState(): Promise<void> {\n        await this.restoreNavigationLocations();\n        await this.restoreClosedEditors();\n    }\n\n    protected async restoreNavigationLocations(): Promise<void> {\n        const raw: { locations?: ArrayLike<object> } | undefined = await this.storageService.getData(EditorNavigationContribution.ID);\n        if (raw && raw.locations) {\n            const locations: NavigationLocation[] = [];\n            for (let i = 0; i < raw.locations.length; i++) {\n                const location = NavigationLocation.fromObject(raw.locations[i]);\n                if (location) {\n                    locations.push(location);\n                } else {\n                    this.logger.warn('Could not restore the state of the editor navigation history.');\n                    return;\n                }\n            }\n            this.locationStack.register(...locations);\n        }\n    }\n\n    protected async restoreClosedEditors(): Promise<void> {\n        const raw: { closedEditors?: ArrayLike<object> } | undefined = await this.storageService.getData(EditorNavigationContribution.CLOSED_EDITORS_KEY);\n        if (raw && raw.closedEditors) {\n            for (let i = 0; i < raw.closedEditors.length; i++) {\n                const editor = RecentlyClosedEditor.fromObject(raw.closedEditors[i]);\n                if (editor) {\n                    this.locationStack.addClosedEditor(editor);\n                } else {\n                    this.logger.warn('Could not restore the state of the closed editors stack.');\n                }\n            }\n        }\n    }\n\n    private isMinimapEnabled(): boolean {\n        return !!this.preferenceService.get('editor.minimap.enabled');\n    }\n\n    private isRenderWhitespaceEnabled(): boolean {\n        const renderWhitespace = this.preferenceService.get('editor.renderWhitespace');\n        return renderWhitespace === 'none' ? false : true;\n    }\n\n    private shouldStoreClosedEditors(): boolean {\n        return !!this.preferenceService.get('editor.history.persistClosedEditors');\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceContribution,\n    PreferenceSchema,\n    PreferenceChangeEvent,\n    PreferenceSchemaProperties\n} from '@theia/core/lib/browser/preferences';\nimport { isWindows, isOSX, OS } from '@theia/core/lib/common/os';\n\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'monospace\\', monospace, \\'Droid Sans Fallback\\'';\n\nconst platform = {\n    isMacintosh: isOSX,\n    isLinux: OS.type() === OS.Type.Linux\n};\n\n// should be in sync with https://github.com/theia-ide/vscode/blob/standalone/0.20.x/src/vs/editor/common/config/editorOptions.ts#L3042\nexport const EDITOR_FONT_DEFAULTS = {\n    fontFamily: (\n        isOSX ? DEFAULT_MAC_FONT_FAMILY : (isWindows ? DEFAULT_WINDOWS_FONT_FAMILY : DEFAULT_LINUX_FONT_FAMILY)\n    ),\n    fontWeight: 'normal',\n    fontSize: (\n        isOSX ? 12 : 14\n    ),\n    lineHeight: 0,\n    letterSpacing: 0,\n};\n\n// should be in sync with https://github.com/theia-ide/vscode/blob/standalone/0.20.x/src/vs/editor/common/config/editorOptions.ts#L3057\nexport const EDITOR_MODEL_DEFAULTS = {\n    tabSize: 4,\n    indentSize: 4,\n    insertSpaces: true,\n    detectIndentation: true,\n    trimAutoWhitespace: true,\n    largeFileOptimizations: true\n};\n\nexport const DEFAULT_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n\n// should be in sync with:\n//        1. https://github.com/theia-ide/vscode/blob/standalone/0.20.x/src/vs/editor/common/config/commonEditorConfig.ts#L441\n//        2. https://github.com/theia-ide/vscode/blob/standalone/0.20.x/src/vs/editor/common/config/commonEditorConfig.ts#L530\n\n// 1. Copy from https://github.com/theia-ide/vscode/blob/standalone/0.20.x/src/vs/editor/common/config/commonEditorConfig.ts#L530\n// 2. Align first items with https://github.com/theia-ide/vscode/blob/standalone/0.20.x/src/vs/editor/common/config/commonEditorConfig.ts#L441\n// 3. Find -> Use Regular Expressions to clean up data and replace \" by ', for example -> nls\\.localize\\(.*, \"(.*)\"\\) -> \"$1\"\n// 4. Apply `quotemark` quick fixes\n// 5. Fix the rest manually\nconst codeEditorPreferenceProperties = {\n    'editor.tabSize': {\n        'type': 'number',\n        'default': EDITOR_MODEL_DEFAULTS.tabSize,\n        'minimum': 1,\n        'markdownDescription': 'The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.'\n    },\n    'editor.defaultFormatter': {\n        'type': 'string',\n        'default': null,\n        'description': 'Default formatter'\n    },\n    'editor.insertSpaces': {\n        'type': 'boolean',\n        'default': EDITOR_MODEL_DEFAULTS.insertSpaces,\n        'markdownDescription': 'Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.'\n    },\n    'editor.detectIndentation': {\n        'type': 'boolean',\n        'default': EDITOR_MODEL_DEFAULTS.detectIndentation,\n        'markdownDescription': 'Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.'\n    },\n    'editor.trimAutoWhitespace': {\n        'type': 'boolean',\n        'default': EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,\n        'description': 'Remove trailing auto inserted whitespace.'\n    },\n    'editor.largeFileOptimizations': {\n        'type': 'boolean',\n        'default': EDITOR_MODEL_DEFAULTS.largeFileOptimizations,\n        'description': 'Special handling for large files to disable certain memory intensive features.'\n    },\n    'editor.wordBasedSuggestions': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether completions should be computed based on words in the document.'\n    },\n    'editor.semanticHighlighting.enabled': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether the semanticHighlighting is shown for the languages that support it.'\n    },\n    'editor.stablePeek': {\n        'type': 'boolean',\n        'default': false,\n        'markdownDescription': 'Keep peek editors open even when double clicking their content or when hitting `Escape`.'\n    },\n    'editor.maxTokenizationLineLength': {\n        'type': 'integer',\n        'default': 400,\n        'description': 'Lines above this length will not be tokenized for performance reasons'\n    },\n    'diffEditor.maxComputationTime': {\n        'type': 'number',\n        'default': 5000,\n        'description': 'Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.'\n    },\n    'diffEditor.renderSideBySide': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether the diff editor shows the diff side by side or inline.'\n    },\n    'diffEditor.ignoreTrimWhitespace': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether the diff editor shows changes in leading or trailing whitespace as diffs.'\n    },\n    'diffEditor.renderIndicators': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether the diff editor shows +/- indicators for added/removed changes.'\n    },\n    'editor.acceptSuggestionOnCommitCharacter': {\n        'markdownDescription': 'Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.acceptSuggestionOnEnter': {\n        'markdownEnumDescriptions': [\n            '',\n            'Only accept a suggestion with `Enter` when it makes a textual change.',\n            ''\n        ],\n        'markdownDescription': 'Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.',\n        'type': 'string',\n        'enum': [\n            'on',\n            'smart',\n            'off'\n        ],\n        'default': 'on'\n    },\n    'editor.accessibilitySupport': {\n        'type': 'string',\n        'enum': [\n            'auto',\n            'on',\n            'off'\n        ],\n        'enumDescriptions': [\n            'The editor will use platform APIs to detect when a Screen Reader is attached.',\n            'The editor will be permanently optimized for usage with a Screen Reader.',\n            'The editor will never be optimized for usage with a Screen Reader.'\n        ],\n        'default': 'auto',\n        'description': 'Controls whether the editor should run in a mode where it is optimized for screen readers.'\n    },\n    'editor.accessibilityPageSize': {\n        'description': 'Controls the number of lines in the editor that can be read out by a screen reader. Warning: this has a performance implication for numbers larger than the default.',\n        'type': 'integer',\n        'default': 10,\n        'minimum': 1,\n        'maximum': 1073741824\n    },\n    'editor.autoClosingBrackets': {\n        'enumDescriptions': [\n            '',\n            'Use language configurations to determine when to autoclose brackets.',\n            'Autoclose brackets only when the cursor is to the left of whitespace.',\n            ''\n        ],\n        'description': 'Controls whether the editor should automatically close brackets after the user adds an opening bracket.',\n        'type': 'string',\n        'enum': [\n            'always',\n            'languageDefined',\n            'beforeWhitespace',\n            'never'\n        ],\n        'default': 'languageDefined'\n    },\n    'editor.autoClosingOvertype': {\n        'enumDescriptions': [\n            '',\n            'Type over closing quotes or brackets only if they were automatically inserted.',\n            ''\n        ],\n        'description': 'Controls whether the editor should type over closing quotes or brackets.',\n        'type': 'string',\n        'enum': [\n            'always',\n            'auto',\n            'never'\n        ],\n        'default': 'auto'\n    },\n    'editor.autoClosingQuotes': {\n        'enumDescriptions': [\n            '',\n            'Use language configurations to determine when to autoclose quotes.',\n            'Autoclose quotes only when the cursor is to the left of whitespace.',\n            ''\n        ],\n        'description': 'Controls whether the editor should automatically close quotes after the user adds an opening quote.',\n        'type': 'string',\n        'enum': [\n            'always',\n            'languageDefined',\n            'beforeWhitespace',\n            'never'\n        ],\n        'default': 'languageDefined'\n    },\n    'editor.autoIndent': {\n        'enumDescriptions': [\n            'The editor will not insert indentation automatically.',\n            'The editor will keep the current line\\'s indentation.',\n            'The editor will keep the current line\\'s indentation and honor language defined brackets.',\n            'The editor will keep the current line\\'s indentation, honor language defined brackets and invoke special onEnterRules defined by languages.',\n            'The editor will keep the current line\\'s indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.'\n        ],\n        'description': 'Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.',\n        'type': 'string',\n        'enum': [\n            'none',\n            'keep',\n            'brackets',\n            'advanced',\n            'full'\n        ],\n        'default': 'full'\n    },\n    'editor.autoSurround': {\n        'enumDescriptions': [\n            'Use language configurations to determine when to automatically surround selections.',\n            'Surround with quotes but not brackets.',\n            'Surround with brackets but not quotes.',\n            ''\n        ],\n        'description': 'Controls whether the editor should automatically surround selections.',\n        'type': 'string',\n        'enum': [\n            'languageDefined',\n            'quotes',\n            'brackets',\n            'never'\n        ],\n        'default': 'languageDefined'\n    },\n    'editor.codeLens': {\n        'description': 'Controls whether the editor shows CodeLens.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.colorDecorators': {\n        'description': 'Controls whether the editor should render the inline color decorators and color picker.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.comments.insertSpace': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether a space character is inserted when commenting.'\n    },\n    'editor.copyWithSyntaxHighlighting': {\n        'description': 'Controls whether syntax highlighting should be copied into the clipboard.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.cursorBlinking': {\n        'description': 'Control the cursor animation style.',\n        'type': 'string',\n        'enum': [\n            'blink',\n            'smooth',\n            'phase',\n            'expand',\n            'solid'\n        ],\n        'default': 'blink'\n    },\n    'editor.cursorSmoothCaretAnimation': {\n        'description': 'Controls whether the smooth caret animation should be enabled.',\n        'type': 'boolean',\n        'default': false\n    },\n    'editor.cursorStyle': {\n        'description': 'Controls the cursor style.',\n        'type': 'string',\n        'enum': [\n            'line',\n            'block',\n            'underline',\n            'line-thin',\n            'block-outline',\n            'underline-thin'\n        ],\n        'default': 'line'\n    },\n    'editor.cursorSurroundingLines': {\n        'description': 'Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as `scrollOff` or `scrollOffset` in some other editors.',\n        'type': 'integer',\n        'default': 0,\n        'minimum': 0,\n        'maximum': 1073741824\n    },\n    'editor.cursorSurroundingLinesStyle': {\n        'enumDescriptions': [\n            '`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.',\n            '`cursorSurroundingLines` is enforced always.'\n        ],\n        'description': 'Controls when `cursorSurroundingLines` should be enforced.',\n        'type': 'string',\n        'enum': [\n            'default',\n            'all'\n        ],\n        'default': 'default'\n    },\n    'editor.cursorWidth': {\n        'markdownDescription': 'Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.',\n        'type': 'integer',\n        'default': 0,\n        'minimum': 0,\n        'maximum': 1073741824\n    },\n    'editor.dragAndDrop': {\n        'description': 'Controls whether the editor should allow moving selections via drag and drop.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.emptySelectionClipboard': {\n        'description': 'Controls whether copying without a selection copies the current line.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.fastScrollSensitivity': {\n        'markdownDescription': 'Scrolling speed multiplier when pressing `Alt`.',\n        'type': 'number',\n        'default': 5\n    },\n    'editor.find.seedSearchStringFromSelection': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether the search string in the Find Widget is seeded from the editor selection.'\n    },\n    'editor.find.autoFindInSelection': {\n        'type': 'string',\n        'enum': [\n            'never',\n            'always',\n            'multiline'\n        ],\n        'default': 'never',\n        'enumDescriptions': [\n            'Never turn on Find in selection automatically (default)',\n            'Always turn on Find in selection automatically',\n            'Turn on Find in selection automatically when multiple lines of content are selected.'\n        ],\n        'description': 'Controls whether the find operation is carried out on selected text or the entire file in the editor.'\n    },\n    'editor.find.globalFindClipboard': {\n        'type': 'boolean',\n        'default': false,\n        'description': 'Controls whether the Find Widget should read or modify the shared find clipboard on macOS.',\n        'included': isOSX\n    },\n    'editor.find.addExtraSpaceOnTop': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.'\n    },\n    'editor.folding': {\n        'description': 'Controls whether the editor has code folding enabled.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.foldingStrategy': {\n        'markdownDescription': 'Controls the strategy for computing folding ranges. `auto` uses a language specific folding strategy, if available. `indentation` uses the indentation based folding strategy.',\n        'type': 'string',\n        'enum': [\n            'auto',\n            'indentation'\n        ],\n        'default': 'auto'\n    },\n    'editor.foldingHighlight': {\n        'description': 'Controls whether the editor should highlight folded ranges.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.fontFamily': {\n        'description': 'Controls the font family.',\n        'type': 'string',\n        'default': EDITOR_FONT_DEFAULTS.fontFamily\n    },\n    'editor.fontLigatures': {\n        'anyOf': [\n            {\n                'type': 'boolean',\n                'description': 'Enables/Disables font ligatures.'\n            },\n            {\n                'type': 'string',\n                'description': 'Explicit font-feature-settings.'\n            }\n        ],\n        'description': 'Configures font ligatures.',\n        'default': false\n    },\n    'editor.fontSize': {\n        'type': 'number',\n        'minimum': 6,\n        'maximum': 100,\n        'default': EDITOR_FONT_DEFAULTS.fontSize,\n        'description': 'Controls the font size in pixels.'\n    },\n    'editor.fontWeight': {\n        'enum': [\n            'normal',\n            'bold',\n            '100',\n            '200',\n            '300',\n            '400',\n            '500',\n            '600',\n            '700',\n            '800',\n            '900'\n        ],\n        'description': 'Controls the font weight.',\n        'type': 'string',\n        'default': EDITOR_FONT_DEFAULTS.fontWeight\n    },\n    'editor.formatOnPaste': {\n        'description': 'Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.',\n        'type': 'boolean',\n        'default': false\n    },\n    'editor.formatOnType': {\n        'description': 'Controls whether the editor should automatically format the line after typing.',\n        'type': 'boolean',\n        'default': false\n    },\n    'editor.glyphMargin': {\n        'description': 'Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.gotoLocation.multiple': {\n        'type': 'string',\n        'default': '',\n        'deprecationMessage': 'This setting is deprecated, please use separate settings like `editor.editor.gotoLocation.multipleDefinitions` or `editor.editor.gotoLocation.multipleImplementations` instead.'\n    },\n    'editor.gotoLocation.multipleDefinitions': {\n        'description': 'Controls the behavior the `Go to Definition`-command when multiple target locations exist.',\n        'type': 'string',\n        'enum': [\n            'peek',\n            'gotoAndPeek',\n            'goto'\n        ],\n        'default': 'peek',\n        'enumDescriptions': [\n            'Show peek view of the results (default)',\n            'Go to the primary result and show a peek view',\n            'Go to the primary result and enable peek-less navigation to others'\n        ]\n    },\n    'editor.gotoLocation.multipleTypeDefinitions': {\n        'description': 'Controls the behavior the `Go to Type Definition`-command when multiple target locations exist.',\n        'type': 'string',\n        'enum': [\n            'peek',\n            'gotoAndPeek',\n            'goto'\n        ],\n        'default': 'peek',\n        'enumDescriptions': [\n            'Show peek view of the results (default)',\n            'Go to the primary result and show a peek view',\n            'Go to the primary result and enable peek-less navigation to others'\n        ]\n    },\n    'editor.gotoLocation.multipleDeclarations': {\n        'description': 'Controls the behavior the `Go to Declaration`-command when multiple target locations exist.',\n        'type': 'string',\n        'enum': [\n            'peek',\n            'gotoAndPeek',\n            'goto'\n        ],\n        'default': 'peek',\n        'enumDescriptions': [\n            'Show peek view of the results (default)',\n            'Go to the primary result and show a peek view',\n            'Go to the primary result and enable peek-less navigation to others'\n        ]\n    },\n    'editor.gotoLocation.multipleImplementations': {\n        'description': 'Controls the behavior the `Go to Implementations`-command when multiple target locations exist.',\n        'type': 'string',\n        'enum': [\n            'peek',\n            'gotoAndPeek',\n            'goto'\n        ],\n        'default': 'peek',\n        'enumDescriptions': [\n            'Show peek view of the results (default)',\n            'Go to the primary result and show a peek view',\n            'Go to the primary result and enable peek-less navigation to others'\n        ]\n    },\n    'editor.gotoLocation.multipleReferences': {\n        'description': 'Controls the behavior the `Go to References`-command when multiple target locations exist.',\n        'type': 'string',\n        'enum': [\n            'peek',\n            'gotoAndPeek',\n            'goto'\n        ],\n        'default': 'peek',\n        'enumDescriptions': [\n            'Show peek view of the results (default)',\n            'Go to the primary result and show a peek view',\n            'Go to the primary result and enable peek-less navigation to others'\n        ]\n    },\n    'editor.gotoLocation.alternativeDefinitionCommand': {\n        'type': 'string',\n        'default': 'editor.action.goToReferences',\n        'description': 'Alternative command id that is being executed when the result of `Go to Definition` is the current location.'\n    },\n    'editor.gotoLocation.alternativeTypeDefinitionCommand': {\n        'type': 'string',\n        'default': 'editor.action.goToReferences',\n        'description': 'Alternative command id that is being executed when the result of `Go to Type Definition` is the current location.'\n    },\n    'editor.gotoLocation.alternativeDeclarationCommand': {\n        'type': 'string',\n        'default': 'editor.action.goToReferences',\n        'description': 'Alternative command id that is being executed when the result of `Go to Declaration` is the current location.'\n    },\n    'editor.gotoLocation.alternativeImplementationCommand': {\n        'type': 'string',\n        'default': '',\n        'description': 'Alternative command id that is being executed when the result of `Go to Implementation` is the current location.'\n    },\n    'editor.gotoLocation.alternativeReferenceCommand': {\n        'type': 'string',\n        'default': '',\n        'description': 'Alternative command id that is being executed when the result of `Go to Reference` is the current location.'\n    },\n    'editor.hideCursorInOverviewRuler': {\n        'description': 'Controls whether the cursor should be hidden in the overview ruler.',\n        'type': 'boolean',\n        'default': false\n    },\n    'editor.highlightActiveIndentGuide': {\n        'description': 'Controls whether the editor should highlight the active indent guide.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.hover.enabled': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether the hover is shown.'\n    },\n    'editor.hover.delay': {\n        'type': 'number',\n        'default': 300,\n        'description': 'Controls the delay in milliseconds after which the hover is shown.'\n    },\n    'editor.hover.sticky': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether the hover should remain visible when mouse is moved over it.'\n    },\n    'editor.letterSpacing': {\n        'description': 'Controls the letter spacing in pixels.',\n        'type': 'number',\n        'default': EDITOR_FONT_DEFAULTS.letterSpacing\n    },\n    'editor.lightbulb.enabled': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Enables the code action lightbulb in the editor.'\n    },\n    'editor.lineHeight': {\n        'description': 'Controls the line height. Use 0 to compute the line height from the font size.',\n        'type': 'integer',\n        'default': EDITOR_FONT_DEFAULTS.lineHeight,\n        'minimum': 0,\n        'maximum': 150\n    },\n    'editor.lineNumbers': {\n        'type': 'string',\n        'enum': [\n            'off',\n            'on',\n            'relative',\n            'interval'\n        ],\n        'enumDescriptions': [\n            'Line numbers are not rendered.',\n            'Line numbers are rendered as absolute number.',\n            'Line numbers are rendered as distance in lines to cursor position.',\n            'Line numbers are rendered every 10 lines.'\n        ],\n        'default': 'on',\n        'description': 'Controls the display of line numbers.'\n    },\n    'editor.links': {\n        'description': 'Controls whether the editor should detect links and make them clickable.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.matchBrackets': {\n        'description': 'Highlight matching brackets.',\n        'type': 'string',\n        'enum': [\n            'always',\n            'near',\n            'never'\n        ],\n        'default': 'always'\n    },\n    'editor.minimap.enabled': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether the minimap is shown.'\n    },\n    'editor.minimap.side': {\n        'type': 'string',\n        'enum': [\n            'left',\n            'right'\n        ],\n        'default': 'right',\n        'description': 'Controls the side where to render the minimap.'\n    },\n    'editor.minimap.showSlider': {\n        'type': 'string',\n        'enum': [\n            'always',\n            'mouseover'\n        ],\n        'default': 'mouseover',\n        'description': 'Controls when the minimap slider is shown.'\n    },\n    'editor.minimap.scale': {\n        'type': 'number',\n        'default': 1,\n        'minimum': 1,\n        'maximum': 3,\n        'description': 'Scale of content drawn in the minimap.'\n    },\n    'editor.minimap.renderCharacters': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Render the actual characters on a line as opposed to color blocks.'\n    },\n    'editor.minimap.maxColumn': {\n        'type': 'number',\n        'default': 120,\n        'description': 'Limit the width of the minimap to render at most a certain number of columns.'\n    },\n    'editor.mouseWheelScrollSensitivity': {\n        'markdownDescription': 'A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.',\n        'type': 'number',\n        'default': 1\n    },\n    'editor.mouseWheelZoom': {\n        'markdownDescription': 'Zoom the font of the editor when using mouse wheel and holding `Ctrl`.',\n        'type': 'boolean',\n        'default': false\n    },\n    'editor.multiCursorMergeOverlapping': {\n        'description': 'Merge multiple cursors when they are overlapping.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.multiCursorModifier': {\n        'markdownEnumDescriptions': [\n            'Maps to `Control` on Windows and Linux and to `Command` on macOS.',\n            'Maps to `Alt` on Windows and Linux and to `Option` on macOS.'\n        ],\n        'markdownDescription': 'The modifier to be used to add multiple cursors with the mouse. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).',\n        'type': 'string',\n        'enum': [\n            'ctrlCmd',\n            'alt'\n        ],\n        'default': 'alt'\n    },\n    'editor.multiCursorPaste': {\n        'markdownEnumDescriptions': [\n            'Each cursor pastes a single line of the text.',\n            'Each cursor pastes the full text.'\n        ],\n        'markdownDescription': 'Controls pasting when the line count of the pasted text matches the cursor count.',\n        'type': 'string',\n        'enum': [\n            'spread',\n            'full'\n        ],\n        'default': 'spread'\n    },\n    'editor.occurrencesHighlight': {\n        'description': 'Controls whether the editor should highlight semantic symbol occurrences.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.overviewRulerBorder': {\n        'description': 'Controls whether a border should be drawn around the overview ruler.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.parameterHints.enabled': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Enables a pop-up that shows parameter documentation and type information as you type.'\n    },\n    'editor.parameterHints.cycle': {\n        'type': 'boolean',\n        'default': false,\n        'description': 'Controls whether the parameter hints menu cycles or closes when reaching the end of the list.'\n    },\n    'editor.peekWidgetDefaultFocus': {\n        'enumDescriptions': [\n            'Focus the tree when opening peek',\n            'Focus the editor when opening peek'\n        ],\n        'description': 'Controls whether to focus the inline editor or the tree in the peek widget.',\n        'type': 'string',\n        'enum': [\n            'tree',\n            'editor'\n        ],\n        'default': 'tree'\n    },\n    'editor.quickSuggestions': {\n        'anyOf': [\n            {\n                'type': 'boolean'\n            },\n            {\n                'type': 'object',\n                'properties': {\n                    'strings': {\n                        'type': 'boolean',\n                        'default': false,\n                        'description': 'Enable quick suggestions inside strings.'\n                    },\n                    'comments': {\n                        'type': 'boolean',\n                        'default': false,\n                        'description': 'Enable quick suggestions inside comments.'\n                    },\n                    'other': {\n                        'type': 'boolean',\n                        'default': true,\n                        'description': 'Enable quick suggestions outside of strings and comments.'\n                    }\n                }\n            }\n        ],\n        'default': {\n            'other': true,\n            'comments': false,\n            'strings': false\n        },\n        'description': 'Controls whether suggestions should automatically show up while typing.'\n    },\n    'editor.quickSuggestionsDelay': {\n        'description': 'Controls the delay in milliseconds after which quick suggestions will show up.',\n        'type': 'integer',\n        'default': 10,\n        'minimum': 0,\n        'maximum': 1073741824\n    },\n    'editor.rename.enablePreview': {\n        'description': 'Controls whether the editor should display refactor preview pane for rename.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.renderControlCharacters': {\n        'description': 'Controls whether the editor should render control characters.',\n        'type': 'boolean',\n        'default': false\n    },\n    'editor.renderIndentGuides': {\n        'description': 'Controls whether the editor should render indent guides.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.renderFinalNewline': {\n        'description': 'Render last line number when the file ends with a newline.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.renderLineHighlight': {\n        'enumDescriptions': [\n            '',\n            '',\n            '',\n            'Highlights both the gutter and the current line.'\n        ],\n        'description': 'Controls how the editor should render the current line highlight.',\n        'type': 'string',\n        'enum': [\n            'none',\n            'gutter',\n            'line',\n            'all'\n        ],\n        'default': 'line'\n    },\n    'editor.renderWhitespace': {\n        'enumDescriptions': [\n            '',\n            'Render whitespace characters except for single spaces between words.',\n            'Render whitespace characters only on selected text.',\n            ''\n        ],\n        'description': 'Controls how the editor should render whitespace characters.',\n        'type': 'string',\n        'enum': [\n            'none',\n            'boundary',\n            'selection',\n            'all'\n        ],\n        'default': 'none'\n    },\n    'editor.roundedSelection': {\n        'description': 'Controls whether selections should have rounded corners.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.rulers': {\n        'type': 'array',\n        'items': {\n            'type': 'number'\n        },\n        'default': [],\n        'description': 'Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.'\n    },\n    'editor.scrollBeyondLastColumn': {\n        'description': 'Controls the number of extra characters beyond which the editor will scroll horizontally.',\n        'type': 'integer',\n        'default': 5,\n        'minimum': 0,\n        'maximum': 1073741824\n    },\n    'editor.scrollBeyondLastLine': {\n        'description': 'Controls whether the editor will scroll beyond the last line.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.selectionClipboard': {\n        'description': 'Controls whether the Linux primary clipboard should be supported.',\n        'included': platform.isLinux,\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.selectionHighlight': {\n        'description': 'Controls whether the editor should highlight matches similar to the selection.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.showFoldingControls': {\n        'description': 'Controls whether the fold controls on the gutter are automatically hidden.',\n        'type': 'string',\n        'enum': [\n            'always',\n            'mouseover'\n        ],\n        'default': 'mouseover'\n    },\n    'editor.showUnused': {\n        'description': 'Controls fading out of unused code.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.snippetSuggestions': {\n        'enumDescriptions': [\n            'Show snippet suggestions on top of other suggestions.',\n            'Show snippet suggestions below other suggestions.',\n            'Show snippets suggestions with other suggestions.',\n            'Do not show snippet suggestions.'\n        ],\n        'description': 'Controls whether snippets are shown with other suggestions and how they are sorted.',\n        'type': 'string',\n        'enum': [\n            'top',\n            'bottom',\n            'inline',\n            'none'\n        ],\n        'default': 'inline'\n    },\n    'editor.smoothScrolling': {\n        'description': 'Controls whether the editor will scroll using an animation.',\n        'type': 'boolean',\n        'default': false\n    },\n    'editor.suggest.insertMode': {\n        'type': 'string',\n        'enum': [\n            'insert',\n            'replace'\n        ],\n        'enumDescriptions': [\n            'Insert suggestion without overwriting text right of the cursor.',\n            'Insert suggestion and overwrite text right of the cursor.'\n        ],\n        'default': 'insert',\n        'description': 'Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.'\n    },\n    'editor.suggest.insertHighlight': {\n        'type': 'boolean',\n        'default': false,\n        'description': 'Controls whether unexpected text modifications while accepting completions should be highlighted, e.g `insertMode` is `replace` but the completion only supports `insert`.'\n    },\n    'editor.suggest.filterGraceful': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether filtering and sorting suggestions accounts for small typos.'\n    },\n    'editor.suggest.localityBonus': {\n        'type': 'boolean',\n        'default': false,\n        'description': 'Controls whether sorting favours words that appear close to the cursor.'\n    },\n    'editor.suggest.shareSuggestSelections': {\n        'type': 'boolean',\n        'default': false,\n        'markdownDescription': 'Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).'\n    },\n    'editor.suggest.snippetsPreventQuickSuggestions': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether an active snippet prevents quick suggestions.'\n    },\n    'editor.suggest.showIcons': {\n        'type': 'boolean',\n        'default': true,\n        'description': 'Controls whether to show or hide icons in suggestions.'\n    },\n    'editor.suggest.maxVisibleSuggestions': {\n        'type': 'number',\n        'default': 12,\n        'minimum': 1,\n        'maximum': 15,\n        'description': 'Controls how many suggestions IntelliSense will show before showing a scrollbar (maximum 15).'\n    },\n    'editor.suggest.filteredTypes': {\n        'type': 'object',\n        'default': {},\n        'deprecationMessage': 'This setting is deprecated, please use separate settings like `editor.suggest.showKeywords` or `editor.suggest.showSnippets` instead.'\n    },\n    'editor.suggest.showMethods': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `method`-suggestions.'\n    },\n    'editor.suggest.showFunctions': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `function`-suggestions.'\n    },\n    'editor.suggest.showConstructors': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `constructor`-suggestions.'\n    },\n    'editor.suggest.showFields': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `field`-suggestions.'\n    },\n    'editor.suggest.showVariables': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `variable`-suggestions.'\n    },\n    'editor.suggest.showClasses': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `class`-suggestions.'\n    },\n    'editor.suggest.showStructs': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `struct`-suggestions.'\n    },\n    'editor.suggest.showInterfaces': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `interface`-suggestions.'\n    },\n    'editor.suggest.showModules': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `module`-suggestions.'\n    },\n    'editor.suggest.showProperties': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `property`-suggestions.'\n    },\n    'editor.suggest.showEvents': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `event`-suggestions.'\n    },\n    'editor.suggest.showOperators': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `operator`-suggestions.'\n    },\n    'editor.suggest.showUnits': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `unit`-suggestions.'\n    },\n    'editor.suggest.showValues': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `value`-suggestions.'\n    },\n    'editor.suggest.showConstants': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `constant`-suggestions.'\n    },\n    'editor.suggest.showEnums': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `enum`-suggestions.'\n    },\n    'editor.suggest.showEnumMembers': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `enumMember`-suggestions.'\n    },\n    'editor.suggest.showKeywords': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `keyword`-suggestions.'\n    },\n    'editor.suggest.showWords': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `text`-suggestions.'\n    },\n    'editor.suggest.showColors': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `color`-suggestions.'\n    },\n    'editor.suggest.showFiles': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `file`-suggestions.'\n    },\n    'editor.suggest.showReferences': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `reference`-suggestions.'\n    },\n    'editor.suggest.showCustomcolors': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `customcolor`-suggestions.'\n    },\n    'editor.suggest.showFolders': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `folder`-suggestions.'\n    },\n    'editor.suggest.showTypeParameters': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `typeParameter`-suggestions.'\n    },\n    'editor.suggest.showSnippets': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'When enabled IntelliSense shows `snippet`-suggestions.'\n    },\n    'editor.suggest.hideStatusBar': {\n        'type': 'boolean',\n        'default': true,\n        'markdownDescription': 'Controls the visibility of the status bar at the bottom of the suggest widget.'\n    },\n    'editor.suggestFontSize': {\n        'markdownDescription': 'Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.',\n        'type': 'integer',\n        'default': 0,\n        'minimum': 0,\n        'maximum': 1000\n    },\n    'editor.suggestLineHeight': {\n        'markdownDescription': 'Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used.',\n        'type': 'integer',\n        'default': 0,\n        'minimum': 0,\n        'maximum': 1000\n    },\n    'editor.suggestOnTriggerCharacters': {\n        'description': 'Controls whether suggestions should automatically show up when typing trigger characters.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.suggestSelection': {\n        'markdownEnumDescriptions': [\n            'Always select the first suggestion.',\n            'Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.',\n            'Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.'\n        ],\n        'description': 'Controls how suggestions are pre-selected when showing the suggest list.',\n        'type': 'string',\n        'enum': [\n            'first',\n            'recentlyUsed',\n            'recentlyUsedByPrefix'\n        ],\n        'default': 'recentlyUsed'\n    },\n    'editor.tabCompletion': {\n        'enumDescriptions': [\n            'Tab complete will insert the best matching suggestion when pressing tab.',\n            'Disable tab completions.',\n            'Tab complete snippets when their prefix match. Works best when `quickSuggestions` aren\\'t enabled.'\n        ],\n        'description': 'Enables tab completions.',\n        'type': 'string',\n        'enum': [\n            'on',\n            'off',\n            'onlySnippets'\n        ],\n        'default': 'off'\n    },\n    'editor.useTabStops': {\n        'description': 'Inserting and deleting whitespace follows tab stops.',\n        'type': 'boolean',\n        'default': true\n    },\n    'editor.wordSeparators': {\n        'description': 'Characters that will be used as word separators when doing word related navigations or operations.',\n        'type': 'string',\n        'default': DEFAULT_WORD_SEPARATORS\n    },\n    'editor.wordWrap': {\n        'markdownEnumDescriptions': [\n            'Lines will never wrap.',\n            'Lines will wrap at the viewport width.',\n            'Lines will wrap at `#editor.wordWrapColumn#`.',\n            'Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.'\n        ],\n        'description': 'Controls how lines should wrap.',\n        'type': 'string',\n        'enum': [\n            'off',\n            'on',\n            'wordWrapColumn',\n            'bounded'\n        ],\n        'default': 'off'\n    },\n    'editor.wordWrapColumn': {\n        'markdownDescription': 'Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.',\n        'type': 'integer',\n        'default': 80,\n        'minimum': 1,\n        'maximum': 1073741824\n    },\n    'editor.wrappingIndent': {\n        'enumDescriptions': [\n            'No indentation. Wrapped lines begin at column 1.',\n            'Wrapped lines get the same indentation as the parent.',\n            'Wrapped lines get +1 indentation toward the parent.',\n            'Wrapped lines get +2 indentation toward the parent.'\n        ],\n        'description': 'Controls the indentation of wrapped lines.',\n        'type': 'string',\n        'enum': [\n            'none',\n            'same',\n            'indent',\n            'deepIndent'\n        ],\n        'default': 'same'\n    },\n    'editor.wrappingStrategy': {\n        'enumDescriptions': [\n            'Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.',\n            'Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.'\n        ],\n        'description': 'Controls the algorithm that computes wrapping points.',\n        'type': 'string',\n        'enum': [\n            'simple',\n            'advanced'\n        ],\n        'default': 'simple'\n    }\n};\n/* eslint-enable max-len */\n\nexport const editorPreferenceSchema: PreferenceSchema = {\n    'type': 'object',\n    'scope': 'resource',\n    'overridable': true,\n    'properties': {\n        ...(<PreferenceSchemaProperties>codeEditorPreferenceProperties),\n        'editor.autoSave': {\n            'enum': [\n                'on',\n                'off'\n            ],\n            'default': 'off',\n            'description': 'Controls auto save of dirty files.',\n            overridable: false\n        },\n        'editor.autoSaveDelay': {\n            'type': 'number',\n            'default': 500,\n            'description': 'Configure the auto save delay in milliseconds.',\n            overridable: false\n        },\n        'editor.formatOnSave': {\n            'type': 'boolean',\n            'default': false,\n            'description': 'Enable format on manual save.'\n        },\n        'editor.formatOnSaveTimeout': {\n            'type': 'number',\n            'default': 750,\n            'description': 'Timeout in milliseconds after which the formatting that is run on file save is cancelled.'\n        },\n        'editor.history.persistClosedEditors': {\n            'type': 'boolean',\n            'default': false,\n            'description': 'Controls whether to persist closed editor history for the workspace across window reloads.'\n        },\n        'files.eol': {\n            'type': 'string',\n            'enum': [\n                '\\n',\n                '\\r\\n',\n                'auto'\n            ],\n            'enumDescriptions': [\n                'LF',\n                'CRLF',\n                'Uses operating system specific end of line character.'\n            ],\n            'default': 'auto',\n            'description': 'The default end of line character.'\n        }\n    }\n};\n\ntype CodeEditorPreferenceProperties = typeof codeEditorPreferenceProperties;\nexport type CodeEditorConfiguration = {\n    [P in keyof CodeEditorPreferenceProperties]:\n    CodeEditorPreferenceProperties[P] extends { enum: string[] } ?\n    CodeEditorPreferenceProperties[P]['enum'][number] : // eslint-disable-line @typescript-eslint/indent\n    CodeEditorPreferenceProperties[P]['default']; // eslint-disable-line @typescript-eslint/indent\n};\n\nexport interface EditorConfiguration extends CodeEditorConfiguration {\n    'editor.autoSave': 'on' | 'off'\n    'editor.autoSaveDelay': number\n    'editor.formatOnSave': boolean\n    'editor.formatOnSaveTimeout': number\n    'editor.history.persistClosedEditors': boolean\n    'files.eol': EndOfLinePreference\n}\nexport type EndOfLinePreference = '\\n' | '\\r\\n' | 'auto';\n\nexport type EditorPreferenceChange = PreferenceChangeEvent<EditorConfiguration>;\n\nexport const EditorPreferences = Symbol('EditorPreferences');\nexport type EditorPreferences = PreferenceProxy<EditorConfiguration>;\n\nexport function createEditorPreferences(preferences: PreferenceService): EditorPreferences {\n    return createPreferenceProxy(preferences, editorPreferenceSchema);\n}\n\nexport function bindEditorPreferences(bind: interfaces.Bind): void {\n    bind(EditorPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createEditorPreferences(preferences);\n    }).inSingletonScope();\n\n    bind(PreferenceContribution).toConstantValue({ schema: editorPreferenceSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport {\n    QuickOpenModel, QuickOpenItem, QuickOpenMode, PrefixQuickOpenService,\n    OpenerService, QuickOpenItemOptions,\n    QuickOpenHandler, QuickOpenOptions\n} from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { EditorManager } from './editor-manager';\nimport { EditorWidget } from './editor-widget';\n\n@injectable()\nexport class EditorQuickOpenService implements QuickOpenModel, QuickOpenHandler {\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    @inject(PrefixQuickOpenService)\n    protected readonly prefixQuickOpenService: PrefixQuickOpenService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    readonly prefix: string = 'edt ';\n\n    get description(): string {\n        return 'Show All Opened Editors';\n    }\n\n    getModel(): QuickOpenModel {\n        return this;\n    }\n\n    getOptions(): QuickOpenOptions {\n        return {\n            fuzzyMatchLabel: {\n                enableSeparateSubstringMatching: true\n            },\n            fuzzyMatchDescription: {\n                enableSeparateSubstringMatching: true\n            }\n        };\n    }\n\n    open(): void {\n        this.prefixQuickOpenService.open(this.prefix);\n    }\n\n    onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): void {\n        const editorItems: QuickOpenItem[] = [];\n\n        // Get the alphabetically sorted list of URIs of all currently opened editor widgets.\n        const widgets: URI[] = this.editorManager.all\n            .map((w: EditorWidget) => w.editor.uri)\n            .sort();\n\n        if (widgets.length === 0) {\n            editorItems.push(new QuickOpenItem({\n                label: 'List of opened editors is currently empty',\n                run: () => false\n            }));\n            acceptor(editorItems);\n            return;\n        }\n\n        for (const uri of widgets) {\n            const item = this.toItem(uri);\n            editorItems.push(item);\n            acceptor(editorItems);\n        }\n        return;\n    }\n\n    protected toItem(uri: URI): QuickOpenItem<QuickOpenItemOptions> {\n        const description = this.labelProvider.getLongName(uri.parent);\n        const icon = this.labelProvider.getIcon(uri);\n        const iconClass = icon === '' ? undefined : icon + ' file-icon';\n\n        const options: QuickOpenItemOptions = {\n            label: this.labelProvider.getName(uri),\n            iconClass,\n            description: description,\n            tooltip: uri.path.toString(),\n            uri: uri,\n            hidden: false,\n            run: this.getRunFunction(uri)\n        };\n        return new QuickOpenItem<QuickOpenItemOptions>(options);\n    }\n\n    /**\n     * Gets the function that can open the editor file\n     * @param uri the file uri\n     * @returns the function that opens the file if mode === QuickOpenMode.OPEN\n     */\n    protected getRunFunction(uri: URI): (mode: QuickOpenMode) => boolean {\n        return (mode: QuickOpenMode) => {\n            if (mode !== QuickOpenMode.OPEN) {\n                return false;\n            }\n            this.openFile(uri);\n            return true;\n        };\n    }\n\n    protected openFile(uri: URI): void {\n        this.openerService.getOpener(uri)\n            .then(opener => opener.open(uri));\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { VariableRegistry, VariableContribution } from '@theia/variable-resolver/lib/browser';\nimport { TextEditor } from './editor';\nimport { EditorManager } from './editor-manager';\n\n@injectable()\nexport class EditorVariableContribution implements VariableContribution {\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    registerVariables(variables: VariableRegistry): void {\n        variables.registerVariable({\n            name: 'lineNumber',\n            description: 'The current line number in the currently opened file',\n            resolve: () => {\n                const editor = this.getCurrentEditor();\n                return editor ? `${editor.cursor.line + 1}` : undefined;\n            }\n        });\n        variables.registerVariable({\n            name: 'selectedText',\n            description: 'The current selected text in the active file',\n            resolve: () => {\n                const editor = this.getCurrentEditor();\n                return editor ? editor.document.getText(editor.selection) : undefined;\n            }\n        });\n    }\n\n    protected getCurrentEditor(): TextEditor | undefined {\n        const currentEditor = this.editorManager.currentEditor;\n        if (!currentEditor) {\n            return undefined;\n        }\n        return currentEditor.editor;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { SelectionService } from '@theia/core/lib/common';\nimport { NavigatableWidgetOptions, WidgetFactory, LabelProvider } from '@theia/core/lib/browser';\nimport { EditorWidget } from './editor-widget';\nimport { TextEditorProvider } from './editor';\n\n@injectable()\nexport class EditorWidgetFactory implements WidgetFactory {\n\n    static createID(uri: URI, counter?: number): string {\n        return EditorWidgetFactory.ID\n            + `:${uri.toString()}`\n            + (counter !== undefined ? `:${counter}` : '');\n    }\n\n    static ID = 'code-editor-opener';\n\n    readonly id = EditorWidgetFactory.ID;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(TextEditorProvider)\n    protected readonly editorProvider: TextEditorProvider;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    createWidget(options: NavigatableWidgetOptions): Promise<EditorWidget> {\n        const uri = new URI(options.uri);\n        return this.createEditor(uri, options);\n    }\n\n    protected async createEditor(uri: URI, options?: NavigatableWidgetOptions): Promise<EditorWidget> {\n        const newEditor = await this.constructEditor(uri);\n\n        this.setLabels(newEditor, uri);\n        const labelListener = this.labelProvider.onDidChange(event => {\n            if (event.affects(uri)) {\n                this.setLabels(newEditor, uri);\n            }\n        });\n        newEditor.onDispose(() => labelListener.dispose());\n\n        newEditor.id = EditorWidgetFactory.createID(uri, options?.counter);\n\n        newEditor.title.closable = true;\n        return newEditor;\n    }\n\n    protected async constructEditor(uri: URI): Promise<EditorWidget> {\n        const textEditor = await this.editorProvider(uri);\n        return new EditorWidget(textEditor, this.selectionService);\n    }\n\n    private setLabels(editor: EditorWidget, uri: URI): void {\n        editor.title.caption = this.labelProvider.getLongName(uri);\n        const icon = this.labelProvider.getIcon(uri);\n        editor.title.label = this.labelProvider.getName(uri);\n        editor.title.iconClass = icon + ' file-icon';\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Disposable, SelectionService, Event } from '@theia/core/lib/common';\nimport { Widget, BaseWidget, Message, Saveable, SaveableSource, Navigatable, StatefulWidget } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { TextEditor } from './editor';\n\nexport class EditorWidget extends BaseWidget implements SaveableSource, Navigatable, StatefulWidget {\n\n    constructor(\n        readonly editor: TextEditor,\n        protected readonly selectionService: SelectionService\n    ) {\n        super(editor);\n        this.addClass('theia-editor');\n        this.toDispose.push(this.editor);\n        this.toDispose.push(this.editor.onSelectionChanged(() => this.setSelection()));\n        this.toDispose.push(this.editor.onFocusChanged(() => this.setSelection()));\n        this.toDispose.push(Disposable.create(() => {\n            if (this.selectionService.selection === this.editor) {\n                this.selectionService.selection = undefined;\n            }\n        }));\n    }\n\n    setSelection(): void {\n        if (this.editor.isFocused() && this.selectionService.selection !== this.editor) {\n            this.selectionService.selection = this.editor;\n        }\n    }\n\n    get saveable(): Saveable {\n        return this.editor.document;\n    }\n\n    getResourceUri(): URI | undefined {\n        return this.editor.getResourceUri();\n    }\n    createMoveToUri(resourceUri: URI): URI | undefined {\n        return this.editor.createMoveToUri(resourceUri);\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.editor.focus();\n        this.selectionService.selection = this.editor;\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        if (this.isVisible) {\n            this.editor.refresh();\n        }\n    }\n\n    protected onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.editor.refresh();\n    }\n\n    protected onResize(msg: Widget.ResizeMessage): void {\n        if (msg.width < 0 || msg.height < 0) {\n            this.editor.resizeToFit();\n        } else {\n            this.editor.setSize(msg);\n        }\n    }\n\n    storeState(): object {\n        return this.editor.storeViewState();\n    }\n\n    restoreState(oldState: object): void {\n        this.editor.restoreViewState(oldState);\n    }\n\n    get onDispose(): Event<void> {\n        return this.toDispose.onDispose;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Position, Range, Location } from '@theia/core/shared/vscode-languageserver-types';\nimport * as lsp from '@theia/core/shared/vscode-languageserver-types';\nimport URI from '@theia/core/lib/common/uri';\nimport { Event, Disposable, TextDocumentContentChangeDelta } from '@theia/core/lib/common';\nimport { Saveable, Navigatable, Widget } from '@theia/core/lib/browser';\nimport { EditorDecoration } from './decorations';\nimport { Reference } from '@theia/core/lib/common';\n\nexport {\n    Position, Range, Location\n};\n\nexport const TextEditorProvider = Symbol('TextEditorProvider');\nexport type TextEditorProvider = (uri: URI) => Promise<TextEditor>;\n\nexport interface TextEditorDocument extends lsp.TextDocument, Saveable, Disposable {\n    getLineContent(lineNumber: number): string;\n    getLineMaxColumn(lineNumber: number): number;\n    /**\n     * @since 1.8.0\n     */\n    findMatches?(options: FindMatchesOptions): FindMatch[];\n}\n\n// Refactoring\nexport { TextDocumentContentChangeDelta };\n\nexport interface TextDocumentChangeEvent {\n    readonly document: TextEditorDocument;\n    readonly contentChanges: TextDocumentContentChangeDelta[];\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n * Copied from monaco editor.\n */\nexport enum MouseTargetType {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    UNKNOWN = 0,\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    TEXTAREA = 1,\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    GUTTER_GLYPH_MARGIN = 2,\n    /**\n     * Mouse is on top of the line numbers\n     */\n    GUTTER_LINE_NUMBERS = 3,\n    /**\n     * Mouse is on top of the line decorations\n     */\n    GUTTER_LINE_DECORATIONS = 4,\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    GUTTER_VIEW_ZONE = 5,\n    /**\n     * Mouse is on top of text in the content.\n     */\n    CONTENT_TEXT = 6,\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    CONTENT_EMPTY = 7,\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    CONTENT_VIEW_ZONE = 8,\n    /**\n     * Mouse is on top of a content widget.\n     */\n    CONTENT_WIDGET = 9,\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    OVERVIEW_RULER = 10,\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    SCROLLBAR = 11,\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    OVERLAY_WIDGET = 12,\n    /**\n     * Mouse is outside of the editor.\n     */\n    OUTSIDE_EDITOR = 13,\n}\n\nexport interface MouseTarget {\n    /**\n     * The target element\n     */\n    readonly element?: Element;\n    /**\n     * The target type\n     */\n    readonly type: MouseTargetType;\n    /**\n     * The 'approximate' editor position\n     */\n    readonly position?: Position;\n    /**\n     * Desired mouse column (e.g. when position.column gets clamped to text length -- clicking after text on a line).\n     */\n    readonly mouseColumn: number;\n    /**\n     * The 'approximate' editor range\n     */\n    readonly range?: Range;\n    /**\n     * Some extra detail.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly detail: any;\n}\n\nexport interface EditorMouseEvent {\n    readonly event: MouseEvent;\n    readonly target: MouseTarget;\n}\n\nexport const enum EncodingMode {\n\n    /**\n     * Instructs the encoding support to encode the current input with the provided encoding\n     */\n    Encode,\n\n    /**\n     * Instructs the encoding support to decode the current input with the provided encoding\n     */\n    Decode\n}\n\n/**\n * Options for searching in an editor.\n */\nexport interface FindMatchesOptions {\n    /**\n     * The string used to search. If it is a regular expression, set `isRegex` to true.\n     */\n    searchString: string;\n    /**\n     * Used to indicate that `searchString` is a regular expression.\n     */\n    isRegex: boolean;\n    /**\n     * Force the matching to match lower/upper case exactly.\n     */\n    matchCase: boolean;\n    /**\n     * Force the matching to match entire words only.\n     */\n    matchWholeWord: boolean;\n    /**\n     * Limit the number of results.\n     */\n    limitResultCount?: number;\n}\n\n/**\n * Representation of a find match.\n */\nexport interface FindMatch {\n    /**\n     * The textual match.\n     */\n    readonly matches: string[];\n    /**\n     * The range for the given match.\n     */\n    readonly range: Range;\n}\n\nexport interface TextEditor extends Disposable, TextEditorSelection, Navigatable {\n    readonly node: HTMLElement;\n\n    readonly uri: URI;\n    readonly document: TextEditorDocument;\n    readonly onDocumentContentChanged: Event<TextDocumentChangeEvent>;\n\n    cursor: Position;\n    readonly onCursorPositionChanged: Event<Position>;\n\n    selection: Range;\n    readonly onSelectionChanged: Event<Range>;\n\n    /**\n     * The text editor should be revealed,\n     * otherwise it won't receive the focus.\n     */\n    focus(): void;\n    blur(): void;\n    isFocused(): boolean;\n    readonly onFocusChanged: Event<boolean>;\n\n    readonly onMouseDown: Event<EditorMouseEvent>;\n\n    readonly onScrollChanged: Event<void>;\n    getVisibleRanges(): Range[];\n\n    revealPosition(position: Position, options?: RevealPositionOptions): void;\n    revealRange(range: Range, options?: RevealRangeOptions): void;\n\n    /**\n     * Rerender the editor.\n     */\n    refresh(): void;\n    /**\n     * Resize the editor to fit its node.\n     */\n    resizeToFit(): void;\n    setSize(size: Dimension): void;\n\n    /**\n     * Applies given new decorations, and removes old decorations identified by ids.\n     *\n     * @returns identifiers of applied decorations, which can be removed in next call.\n     */\n    deltaDecorations(params: DeltaDecorationParams): string[];\n\n    /**\n     * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n     * @param startLineNumber The start line number.\n     * @param endLineNumber The end line number.\n     * @return An array with the decorations.\n     */\n    getLinesDecorations(startLineNumber: number, endLineNumber: number): EditorDecoration[];\n\n    getVisibleColumn(position: Position): number;\n\n    /**\n     * Replaces the text of source given in ReplaceTextParams.\n     * @param params: ReplaceTextParams\n     */\n    replaceText(params: ReplaceTextParams): Promise<boolean>;\n\n    /**\n     * Execute edits on the editor.\n     * @param edits: edits created with `lsp.TextEdit.replace`, `lsp.TextEdit.insert`, `lsp.TextEdit.del`\n     */\n    executeEdits(edits: lsp.TextEdit[]): boolean;\n\n    storeViewState(): object;\n    restoreViewState(state: object): void;\n\n    detectLanguage(): void;\n    setLanguage(languageId: string): void;\n    readonly onLanguageChanged: Event<string>;\n\n    /**\n     * Gets the encoding of the input if known.\n     */\n    getEncoding(): string;\n\n    /**\n     * Sets the encoding for the input for saving.\n     */\n    setEncoding(encoding: string, mode: EncodingMode): void;\n\n    readonly onEncodingChanged: Event<string>;\n}\n\nexport interface Dimension {\n    width: number;\n    height: number;\n}\n\nexport interface TextEditorSelection {\n    uri: URI\n    cursor?: Position\n    selection?: Range\n}\n\nexport interface RevealPositionOptions {\n    vertical: 'auto' | 'center' | 'centerIfOutsideViewport';\n    horizontal?: boolean;\n}\n\nexport interface RevealRangeOptions {\n    at: 'auto' | 'center' | 'top' | 'centerIfOutsideViewport';\n}\n\nexport interface DeltaDecorationParams {\n    oldDecorations: string[];\n    newDecorations: EditorDecoration[];\n}\n\nexport interface ReplaceTextParams {\n    /**\n     * the source to edit\n     */\n    source: string;\n    /**\n     * the replace operations\n     */\n    replaceOperations: ReplaceOperation[];\n}\n\nexport interface ReplaceOperation {\n    /**\n     * the position that shall be replaced\n     */\n    range: Range;\n    /**\n     * the text to replace with\n     */\n    text: string;\n}\n\nexport namespace TextEditorSelection {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(e: any): e is TextEditorSelection {\n        return e && e['uri'] instanceof URI;\n    }\n}\n\nexport namespace CustomEditorWidget {\n    export function is(arg: Widget | undefined): arg is CustomEditorWidget {\n        return !!arg && 'modelRef' in arg;\n    }\n}\n\nexport interface CustomEditorWidget extends Widget {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly modelRef: Reference<any>;\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { OpenerService, OpenerOptions, open } from '@theia/core/lib/browser/opener-service';\nimport { EditorOpenerOptions } from '../editor-manager';\nimport { NavigationLocationUpdater } from './navigation-location-updater';\nimport { NavigationLocationSimilarity } from './navigation-location-similarity';\nimport { NavigationLocation, Range, ContentChangeLocation, RecentlyClosedEditor } from './navigation-location';\nimport URI from '@theia/core/lib/common/uri';\n\n/**\n * The navigation location service.\n * It also stores and manages navigation locations and recently closed editors.\n */\n@injectable()\nexport class NavigationLocationService {\n\n    private static MAX_STACK_ITEMS = 30;\n    private static readonly MAX_RECENTLY_CLOSED_EDITORS = 20;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    @inject(NavigationLocationUpdater)\n    protected readonly updater: NavigationLocationUpdater;\n\n    @inject(NavigationLocationSimilarity)\n    protected readonly similarity: NavigationLocationSimilarity;\n\n    protected pointer = -1;\n    protected stack: NavigationLocation[] = [];\n    protected canRegister = true;\n    protected _lastEditLocation: ContentChangeLocation | undefined;\n\n    protected recentlyClosedEditors: RecentlyClosedEditor[] = [];\n\n    /**\n     * Registers the give locations into the service.\n     */\n    register(...locations: NavigationLocation[]): void {\n        if (this.canRegister) {\n            const max = this.maxStackItems();\n            [...locations].forEach(location => {\n                if (ContentChangeLocation.is(location)) {\n                    this._lastEditLocation = location;\n                }\n                const current = this.currentLocation();\n                this.debug(`Registering new location: ${NavigationLocation.toString(location)}.`);\n                if (!this.isSimilar(current, location)) {\n                    this.debug('Before location registration.');\n                    this.debug(this.stackDump);\n                    // Just like in VSCode; if we are not at the end of stack, we remove anything after.\n                    if (this.stack.length > this.pointer + 1) {\n                        this.debug(`Discarding all locations after ${this.pointer}.`);\n                        this.stack = this.stack.slice(0, this.pointer + 1);\n                    }\n                    this.stack.push(location);\n                    this.pointer = this.stack.length - 1;\n                    if (this.stack.length > max) {\n                        this.debug('Trimming exceeding locations.');\n                        this.stack.shift();\n                        this.pointer--;\n                    }\n                    this.debug('Updating preceding navigation locations.');\n                    for (let i = this.stack.length - 1; i >= 0; i--) {\n                        const candidate = this.stack[i];\n                        const update = this.updater.affects(candidate, location);\n                        if (update === undefined) {\n                            this.debug(`Erasing obsolete location: ${NavigationLocation.toString(candidate)}.`);\n                            this.stack.splice(i, 1);\n                            this.pointer--;\n                        } else if (typeof update !== 'boolean') {\n                            this.debug(`Updating location at index: ${i} => ${NavigationLocation.toString(candidate)}.`);\n                            this.stack[i] = update;\n                        }\n                    }\n                    this.debug('After location registration.');\n                    this.debug(this.stackDump);\n                } else {\n                    if (current) {\n                        this.debug(`The new location ${NavigationLocation.toString(location)} is similar to the current one: ${NavigationLocation.toString(current)}. Aborting.`);\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Navigates one back. Returns with the previous location, or `undefined` if it could not navigate back.\n     */\n    async back(): Promise<NavigationLocation | undefined> {\n        this.debug('Navigating back.');\n        if (this.canGoBack()) {\n            this.pointer--;\n            await this.reveal();\n            this.debug(this.stackDump);\n            return this.currentLocation();\n        }\n        this.debug('Cannot navigate back.');\n        return undefined;\n    }\n\n    /**\n     * Navigates one forward. Returns with the next location, or `undefined` if it could not go forward.\n     */\n    async forward(): Promise<NavigationLocation | undefined> {\n        this.debug('Navigating forward.');\n        if (this.canGoForward()) {\n            this.pointer++;\n            await this.reveal();\n            this.debug(this.stackDump);\n            return this.currentLocation();\n        }\n        this.debug('Cannot navigate forward.');\n        return undefined;\n    }\n\n    /**\n     * Checks whether the service can go [`back`](#back).\n     */\n    canGoBack(): boolean {\n        return this.pointer >= 1;\n    }\n\n    /**\n     * Checks whether the service can go [`forward`](#forward).\n     */\n    canGoForward(): boolean {\n        return this.pointer >= 0 && this.pointer !== this.stack.length - 1;\n    }\n\n    /**\n     * Returns with all known navigation locations in chronological order.\n     */\n    locations(): ReadonlyArray<NavigationLocation> {\n        return this.stack;\n    }\n\n    /**\n     * Returns with the current location.\n     */\n    currentLocation(): NavigationLocation | undefined {\n        return this.stack[this.pointer];\n    }\n\n    /**\n     * Returns with the location of the most recent edition if any. If there were no modifications,\n     * returns `undefined`.\n     */\n    lastEditLocation(): NavigationLocation | undefined {\n        return this._lastEditLocation;\n    }\n\n    /**\n     * Clears the total history.\n     */\n    clearHistory(): void {\n        this.stack = [];\n        this.pointer = -1;\n        this._lastEditLocation = undefined;\n        this.recentlyClosedEditors = [];\n    }\n\n    /**\n     * Reveals the location argument. If not given, reveals the `current location`. Does nothing, if the argument is `undefined`.\n     */\n    async reveal(location: NavigationLocation | undefined = this.currentLocation()): Promise<void> {\n        if (location === undefined) {\n            return;\n        }\n        try {\n            this.canRegister = false;\n            const { uri } = location;\n            const options = this.toOpenerOptions(location);\n            await open(this.openerService, uri, options);\n        } catch (e) {\n            this.logger.error(`Error occurred while revealing location: ${NavigationLocation.toString(location)}.`, e);\n        } finally {\n            this.canRegister = true;\n        }\n    }\n\n    /**\n     * `true` if the two locations are similar.\n     */\n    protected isSimilar(left: NavigationLocation | undefined, right: NavigationLocation | undefined): boolean {\n        return this.similarity.similar(left, right);\n    }\n\n    /**\n     * Returns with the number of navigation locations that the application can handle and manage.\n     * When the number of locations exceeds this number, old locations will be erased.\n     */\n    protected maxStackItems(): number {\n        return NavigationLocationService.MAX_STACK_ITEMS;\n    }\n\n    /**\n     * Returns with the opener option for the location argument.\n     */\n    protected toOpenerOptions(location: NavigationLocation): OpenerOptions {\n        let { start } = NavigationLocation.range(location);\n        // Here, the `start` and represents the previous state that has been updated with the `text`.\n        // So we calculate the range by appending the `text` length to the `start`.\n        if (ContentChangeLocation.is(location)) {\n            start = { ...start, character: start.character + location.context.text.length };\n        }\n        return {\n            selection: Range.create(start, start)\n        } as EditorOpenerOptions;\n    }\n\n    private async debug(message: string | (() => string)): Promise<void> {\n        this.logger.trace(typeof message === 'string' ? message : message());\n    }\n\n    private get stackDump(): string {\n        return `----- Navigation location stack [${new Date()}] -----\nPointer: ${this.pointer}\n${this.stack.map((location, i) => `${i}: ${JSON.stringify(NavigationLocation.toObject(location))}`).join('\\n')}\n----- o -----`;\n    }\n\n    /**\n     * Get the recently closed editors stack in chronological order.\n     *\n     * @returns readonly closed editors stack.\n     */\n    get closedEditorsStack(): ReadonlyArray<RecentlyClosedEditor> {\n        return this.recentlyClosedEditors;\n    }\n\n    /**\n     * Get the last recently closed editor.\n     *\n     * @returns the recently closed editor if it exists.\n     */\n    getLastClosedEditor(): RecentlyClosedEditor | undefined {\n        return this.recentlyClosedEditors[this.recentlyClosedEditors.length - 1];\n    }\n\n    /**\n     * Add the recently closed editor to the history.\n     *\n     * @param editor the recently closed editor.\n     */\n    addClosedEditor(editor: RecentlyClosedEditor): void {\n        this.removeClosedEditor(editor.uri);\n        this.recentlyClosedEditors.push(editor);\n\n        // Removes the oldest entry from the history if the maximum size is reached.\n        if (this.recentlyClosedEditors.length > NavigationLocationService.MAX_RECENTLY_CLOSED_EDITORS) {\n            this.recentlyClosedEditors.shift();\n        }\n    }\n\n    /**\n     * Remove all occurrences of the given editor in the history if they exist.\n     *\n     * @param uri the uri of the editor that should be removed from the history.\n     */\n    removeClosedEditor(uri: URI): void {\n        this.recentlyClosedEditors = this.recentlyClosedEditors.filter(e => !uri.isEqual(e.uri));\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { NavigationLocation } from './navigation-location';\n\n/**\n * Service for checking whether two navigation locations are similar or not.\n */\n@injectable()\nexport class NavigationLocationSimilarity {\n\n    /**\n     * The number of lines to move in the editor to justify for new state.\n     */\n    private static EDITOR_SELECTION_THRESHOLD = 10;\n\n    /**\n     * `true` if the `left` and `right` locations are withing +- 10 lines in the same editor. Otherwise, `false`.\n     */\n    similar(left: NavigationLocation | undefined, right: NavigationLocation | undefined): boolean {\n        if (left === undefined || right === undefined) {\n            return left === right;\n        }\n\n        if (left.uri.toString() !== right.uri.toString()) {\n            return false;\n        }\n\n        const leftRange = NavigationLocation.range(left);\n        const rightRange = NavigationLocation.range(right);\n        if (leftRange === undefined || rightRange === undefined) {\n            return leftRange === rightRange;\n        }\n\n        const leftLineNumber = Math.min(leftRange.start.line, leftRange.end.line);\n        const rightLineNumber = Math.min(rightRange.start.line, rightRange.end.line);\n        return Math.abs(leftLineNumber - rightLineNumber) < this.getThreshold();\n    }\n\n    protected getThreshold(): number {\n        return NavigationLocationSimilarity.EDITOR_SELECTION_THRESHOLD;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { NavigationLocation, ContentChangeLocation, CursorLocation, SelectionLocation, Position, Range } from './navigation-location';\n\n/**\n * A navigation location updater that is responsible for adapting editor navigation locations.\n *\n * 1. Inserting or deleting text before the position shifts the position accordingly.\n * 2. Inserting text at the position offset shifts the position accordingly.\n * 3. Inserting or deleting text strictly contained by the position shrinks or stretches the position.\n * 4. Inserting or deleting text after a position does not affect the position.\n * 5. Deleting text which strictly contains the position deletes the position.\n * Note that the position is not deleted if its only shrunken to length zero. To delete a position, the modification must delete from\n * strictly before to strictly after the position.\n * 6. Replacing text contained by the position shrinks or expands the position (but does not shift it), such that the final position\n * contains the original position and the replacing text.\n * 7. Replacing text overlapping the position in other ways is considered as a sequence of first deleting the replaced text and\n * afterwards inserting the new text. Thus, a position is shrunken and can then be shifted (if the replaced text overlaps the offset of the position).\n */\n@injectable()\nexport class NavigationLocationUpdater {\n\n    /**\n     * Checks whether `candidateLocation` has to be updated when applying `other`.\n     *  - `false` if the `other` does not affect the `candidateLocation`.\n     *  - A `NavigationLocation` object if the `candidateLocation` has to be replaced with the return value.\n     *  - `undefined` if the candidate has to be deleted.\n     *\n     * If the `otherLocation` is not a `ContentChangeLocation` or it does not contain any actual content changes, this method returns with `false`\n     */\n    affects(candidateLocation: NavigationLocation, otherLocation: NavigationLocation): false | NavigationLocation | undefined {\n        if (!ContentChangeLocation.is(otherLocation)) {\n            return false;\n        }\n        if (candidateLocation.uri.toString() !== otherLocation.uri.toString()) {\n            return false;\n        }\n\n        const candidate = NavigationLocation.range(candidateLocation);\n        const other = NavigationLocation.range(otherLocation);\n        if (candidate === undefined || other === undefined) {\n            return false;\n        }\n\n        const { uri, type } = candidateLocation;\n        const modification = otherLocation.context.text;\n        const newLineCount = modification.split(/[\\n\\r]/g).length - 1;\n\n        // Spec (1. and 2.)\n        if (other.end.line < candidate.start.line\n            || (other.end.line === candidate.start.line && other.end.character <= candidate.start.character)) {\n\n            // Shortcut for the general case. The user is typing above the candidate range. Nothing to do.\n            if (other.start.line === other.end.line && newLineCount === 0) {\n                return false;\n            }\n\n            const lineDiff = other.start.line - other.end.line + newLineCount;\n            let startCharacter = candidate.start.character;\n            let endCharacter = candidate.end.character;\n\n            if (other.start.line !== other.end.line) {\n                startCharacter = other.start.character + (candidate.start.character - other.end.character) + (modification.length - (modification.lastIndexOf('\\n') + 1));\n                endCharacter = candidate.start.line === candidate.end.line\n                    ? candidate.end.character + startCharacter - candidate.start.character\n                    : candidate.end.character;\n            }\n\n            const context = this.handleBefore(candidateLocation, other, lineDiff, startCharacter, endCharacter);\n            return {\n                uri,\n                type,\n                context\n            };\n        }\n\n        // Spec (3.,  5., and 6.)\n        if (this.contained(other, candidate)) {\n            const endLine = candidate.end.line - other.end.line + candidate.start.line + newLineCount;\n            let endCharacter = candidate.end.character - (other.end.character - other.start.character) + modification.length;\n\n            if (newLineCount > 0) {\n                if (candidate.end.line === other.end.line) {\n                    endCharacter = modification.length - (modification.lastIndexOf('\\n') + 1) + (candidate.end.character - other.end.character);\n                } else {\n                    endCharacter = endCharacter - 1;\n                }\n            }\n\n            const context = this.handleInside(candidateLocation, endLine, endCharacter);\n            return {\n                uri,\n                type,\n                context\n            };\n        }\n\n        // Spec (5.)\n        if (other.start.line === candidate.start.line && other.start.character === candidate.start.character\n            && (other.end.line > candidate.end.line || (other.end.line === candidate.end.line && other.end.character > candidate.end.character))) {\n            return undefined;\n        }\n\n        // Spec (4.)\n        if (candidate.end.line < other.start.line\n            || (candidate.end.line === other.start.line && candidate.end.character < other.end.character)) {\n            return false;\n        }\n\n        return false;\n    }\n\n    protected handleInside(candidate: NavigationLocation, endLine: number, endCharacter: number): NavigationLocation.Context {\n        if (CursorLocation.is(candidate)) {\n            throw new Error('Modifications are not allowed inside a cursor location.');\n        }\n        const { start } = NavigationLocation.range(candidate);\n        const range = {\n            start,\n            end: {\n                line: endLine,\n                character: endCharacter\n            }\n        };\n        if (SelectionLocation.is(candidate)) {\n            return range;\n        }\n        if (ContentChangeLocation.is(candidate)) {\n            const { rangeLength, text } = candidate.context;\n            return {\n                range,\n                rangeLength,\n                text\n            };\n        }\n        throw new Error(`Unexpected navigation location: ${NavigationLocation.toString(candidate)}.`);\n    }\n\n    protected handleBefore(candidate: NavigationLocation, modification: Range, lineDiff: number, startCharacter: number, endCharacter: number): NavigationLocation.Context {\n        let range = NavigationLocation.range(candidate);\n        range = this.shiftLine(range, lineDiff);\n        range = {\n            start: {\n                line: range.start.line,\n                character: startCharacter\n            },\n            end: {\n                line: range.end.line,\n                character: endCharacter\n            }\n        };\n        if (CursorLocation.is(candidate)) {\n            return range.start;\n        }\n        if (SelectionLocation.is(candidate)) {\n            return range;\n        }\n        if (ContentChangeLocation.is(candidate)) {\n            const { rangeLength, text } = candidate.context;\n            return {\n                range,\n                rangeLength,\n                text\n            };\n        }\n        throw new Error(`Unexpected navigation location: ${NavigationLocation.toString(candidate)}.`);\n    }\n\n    protected shiftLine(position: Position, diff: number): Position;\n    protected shiftLine(range: Range, diff: number): Range;\n    protected shiftLine(input: Position | Range, diff: number): Position | Range {\n        if (Position.is(input)) {\n            const { line, character } = input;\n            return {\n                line: line + diff,\n                character\n            };\n        }\n        const { start, end } = input;\n        return {\n            start: this.shiftLine(start, diff),\n            end: this.shiftLine(end, diff)\n        };\n    }\n\n    /**\n     * `true` if `subRange` is strictly contained in the `range`. Otherwise, `false`.\n     */\n    protected contained(subRange: Range, range: Range): boolean {\n        if (subRange.start.line > range.start.line && subRange.end.line < range.end.line) {\n            return true;\n        }\n        if (subRange.start.line < range.start.line || subRange.end.line > range.end.line) {\n            return false;\n        }\n        if (subRange.start.line === range.start.line && subRange.start.character < range.start.character) {\n            return false;\n        }\n        if (subRange.end.line === range.end.line && subRange.end.character > range.end.character) {\n            return false;\n        }\n        return true;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Position, Range, TextDocumentContentChangeDelta } from '../editor';\nexport { Position, Range };\n\nexport namespace NavigationLocation {\n\n    /**\n     * The navigation location type.\n     */\n    export enum Type {\n\n        /**\n         * Cursor position change type.\n         */\n        CURSOR,\n\n        /**\n         * Text selection change type.\n         */\n        SELECTION,\n\n        /**\n         * Content change type.\n         */\n        CONTENT_CHANGE\n\n    }\n\n    /**\n     * The type of the context for the navigation location.\n     */\n    export type Context = Position | Range | TextDocumentContentChangeDelta;\n\n    export namespace Context {\n\n        /**\n         * Returns with the type for the context.\n         */\n        export function getType(context: Context): Type {\n            if (Position.is(context)) {\n                return Type.CURSOR;\n            }\n            if (Range.is(context)) {\n                return Type.SELECTION;\n            }\n            if (TextDocumentContentChangeDelta.is(context)) {\n                return Type.CONTENT_CHANGE;\n            }\n            throw new Error(`Unexpected context for type: ${context}.`);\n        }\n\n    }\n\n}\n\n/**\n * Representation of a navigation location in a text editor.\n */\nexport interface NavigationLocation {\n\n    /**\n     * The URI of the resource opened in the editor.\n     */\n    readonly uri: URI;\n\n    /**\n     * The type of the navigation location.\n     */\n    readonly type: NavigationLocation.Type;\n\n    /**\n     * Context of the navigation location.\n     */\n    readonly context: NavigationLocation.Context;\n\n}\n\nexport namespace NavigationLocation {\n\n    /**\n     * Transforms the location into an object that can be safely serialized.\n     */\n    export function toObject(location: NavigationLocation): object {\n        const { uri, type } = location;\n        const context = (() => {\n            if (CursorLocation.is(location)) {\n                return CursorLocation.toObject(location.context);\n            }\n            if (SelectionLocation.is(location)) {\n                return SelectionLocation.toObject(location.context);\n            }\n            if (ContentChangeLocation.is(location)) {\n                return ContentChangeLocation.toObject(location.context);\n            }\n        })();\n        return {\n            uri: uri.toString(),\n            type,\n            context\n        };\n    }\n\n    /**\n     * Returns with the navigation location object from its serialized counterpart.\n     */\n    export function fromObject(object: Partial<NavigationLocation>): NavigationLocation | undefined {\n        const { uri, type } = object;\n        if (uri !== undefined && type !== undefined && object.context !== undefined) {\n            const context = (() => {\n                switch (type) {\n                    case NavigationLocation.Type.CURSOR: return CursorLocation.fromObject(object.context as Position);\n                    case NavigationLocation.Type.SELECTION: return SelectionLocation.fromObject(object.context as Range);\n                    case NavigationLocation.Type.CONTENT_CHANGE: return ContentChangeLocation.fromObject(object.context as TextDocumentContentChangeDelta);\n                }\n            })();\n            if (context) {\n                return {\n                    uri: toUri(uri),\n                    context,\n                    type\n                };\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns with the context of the location as a `Range`.\n     */\n    export function range(location: NavigationLocation): Range {\n        if (CursorLocation.is(location)) {\n            return Range.create(location.context, location.context);\n        }\n        if (SelectionLocation.is(location)) {\n            return location.context;\n        }\n        if (ContentChangeLocation.is(location)) {\n            return location.context.range;\n        }\n        throw new Error(`Unexpected navigation location: ${location}.`);\n    }\n\n    /**\n     * Creates a new cursor location.\n     */\n    export function create(uri: URI | { uri: URI } | string, context: Position): CursorLocation;\n\n    /**\n     * Creates a new selection location.\n     */\n    export function create(uri: URI | { uri: URI } | string, context: Range): SelectionLocation;\n\n    /**\n     * Creates a new text content change location type.\n     */\n    export function create(uri: URI | { uri: URI } | string, context: TextDocumentContentChangeDelta): ContentChangeLocation;\n\n    /**\n     * Creates a new navigation location object.\n     */\n    export function create(uri: URI | { uri: URI } | string, context: NavigationLocation.Context): NavigationLocation {\n        const type = NavigationLocation.Context.getType(context);\n        return {\n            uri: toUri(uri),\n            type,\n            context\n        };\n    }\n\n    /**\n     * Returns with the human-consumable (JSON) string representation of the location argument.\n     */\n    export function toString(location: NavigationLocation): string {\n        return JSON.stringify(toObject(location));\n    }\n\n}\n\nfunction toUri(arg: URI | { uri: URI } | string): URI {\n    if (arg instanceof URI) {\n        return arg;\n    }\n    if (typeof arg === 'string') {\n        return new URI(arg);\n    }\n    return arg.uri;\n}\n\n/**\n * Representation of a closed editor.\n */\nexport interface RecentlyClosedEditor {\n\n    /**\n     * The uri of the closed editor.\n     */\n    readonly uri: URI,\n\n    /**\n     * The serializable view state of the closed editor.\n     */\n    readonly viewState: object\n\n}\n\nexport namespace RecentlyClosedEditor {\n\n    /**\n     * Transform a RecentlyClosedEditor into an object for storing.\n     *\n     * @param closedEditor the editor needs to be transformed.\n     */\n    export function toObject(closedEditor: RecentlyClosedEditor): object {\n        const { uri, viewState } = closedEditor;\n        return {\n            uri: uri.toString(),\n            viewState: viewState\n        };\n    }\n\n    /**\n     * Transform the given object to a RecentlyClosedEditor object if possible.\n     */\n    export function fromObject(object: Partial<RecentlyClosedEditor>): RecentlyClosedEditor | undefined {\n        const { uri, viewState } = object;\n        if (uri !== undefined && viewState !== undefined) {\n            return {\n                uri: toUri(uri),\n                viewState: viewState\n            };\n        }\n        return undefined;\n    }\n\n}\n\n/**\n * Navigation location representing the cursor location change.\n */\nexport interface CursorLocation extends NavigationLocation {\n\n    /**\n     * The type is always `cursor`.\n     */\n    readonly type: NavigationLocation.Type.CURSOR;\n\n    /**\n     * The context for the location, that is always a position.\n     */\n    readonly context: Position;\n\n}\n\nexport namespace CursorLocation {\n\n    /**\n     * `true` if the argument is a cursor location. Otherwise, `false`.\n     */\n    export function is(location: NavigationLocation): location is CursorLocation {\n        return location.type === NavigationLocation.Type.CURSOR;\n    }\n\n    /**\n     * Returns with the serialized format of the position argument.\n     */\n    export function toObject(context: Position): object {\n        const { line, character } = context;\n        return {\n            line,\n            character\n        };\n    }\n\n    /**\n     * Returns with the position from its serializable counterpart, or `undefined`.\n     */\n    export function fromObject(object: Partial<Position>): Position | undefined {\n        if (object.line !== undefined && object.character !== undefined) {\n            const { line, character } = object;\n            return {\n                line,\n                character\n            };\n        }\n        return undefined;\n    }\n\n}\n\n/**\n * Representation of a selection location.\n */\nexport interface SelectionLocation extends NavigationLocation {\n\n    /**\n     * The `selection` type.\n     */\n    readonly type: NavigationLocation.Type.SELECTION;\n\n    /**\n     * The context of the selection; a range.\n     */\n    readonly context: Range;\n\n}\n\nexport namespace SelectionLocation {\n\n    /**\n     * `true` if the argument is a selection location.\n     */\n    export function is(location: NavigationLocation): location is SelectionLocation {\n        return location.type === NavigationLocation.Type.SELECTION;\n    }\n\n    /**\n     * Converts the range argument into a serializable object.\n     */\n    export function toObject(context: Range): object {\n        const { start, end } = context;\n        return {\n            start: CursorLocation.toObject(start),\n            end: CursorLocation.toObject(end)\n        };\n    }\n\n    /**\n     * Creates a range object from its serializable counterpart. Returns with `undefined` if the argument cannot be converted into a range.\n     */\n    export function fromObject(object: Partial<Range>): Range | undefined {\n        if (!!object.start && !!object.end) {\n            const start = CursorLocation.fromObject(object.start);\n            const end = CursorLocation.fromObject(object.end);\n            if (start && end) {\n                return {\n                    start,\n                    end\n                };\n            }\n        }\n        return undefined;\n    }\n}\n\n/**\n * Content change location type.\n */\nexport interface ContentChangeLocation extends NavigationLocation {\n\n    /**\n     * The type, that is always `content change`.\n     */\n    readonly type: NavigationLocation.Type.CONTENT_CHANGE;\n\n    /**\n     * A text document content change deltas as the context.\n     */\n    readonly context: TextDocumentContentChangeDelta;\n\n}\n\nexport namespace ContentChangeLocation {\n\n    /**\n     * `true` if the argument is a content change location. Otherwise, `false`.\n     */\n    export function is(location: NavigationLocation): location is ContentChangeLocation {\n        return location.type === NavigationLocation.Type.CONTENT_CHANGE;\n    }\n\n    /**\n     * Returns with a serializable object representing the arguments.\n     */\n    export function toObject(context: TextDocumentContentChangeDelta): object {\n        return {\n            range: SelectionLocation.toObject(context.range),\n            rangeLength: context.rangeLength,\n            text: context.text\n        };\n    }\n\n    /**\n     * Returns with a text document change delta for the argument. `undefined` if the argument cannot be mapped to a content change delta.\n     */\n    export function fromObject(object: Partial<TextDocumentContentChangeDelta>): TextDocumentContentChangeDelta | undefined {\n        if (!!object.range && object.rangeLength !== undefined && object.text !== undefined) {\n            const range = SelectionLocation.fromObject(object.range!);\n            const rangeLength = object.rangeLength;\n            const text = object.text;\n            if (!!range) {\n                return {\n                    range,\n                    rangeLength: rangeLength!,\n                    text: text!\n                };\n            }\n        } else {\n            return undefined;\n        }\n    }\n\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/index.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}