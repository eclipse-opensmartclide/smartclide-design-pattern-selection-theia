{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/application-package/src/environment.ts","webpack://browser-app/../node_modules/@theia/core/src/common/application-error.ts","webpack://browser-app/../node_modules/@theia/core/src/common/cancellation.ts","webpack://browser-app/../node_modules/@theia/core/src/common/command.ts","webpack://browser-app/../node_modules/@theia/core/src/common/contribution-filter/contribution-filter-registry.ts","webpack://browser-app/../node_modules/@theia/core/src/common/contribution-filter/contribution-filter.ts","webpack://browser-app/../node_modules/@theia/core/src/common/contribution-filter/filter.ts","webpack://browser-app/../node_modules/@theia/core/src/common/contribution-filter/index.ts","webpack://browser-app/../node_modules/@theia/core/src/common/contribution-provider.ts","webpack://browser-app/../node_modules/@theia/core/src/common/disposable.ts","webpack://browser-app/../node_modules/@theia/core/src/common/event.ts","webpack://browser-app/../node_modules/@theia/core/src/common/index.ts","webpack://browser-app/../node_modules/@theia/core/src/common/logger-protocol.ts","webpack://browser-app/../node_modules/@theia/core/src/common/logger-watcher.ts","webpack://browser-app/../node_modules/@theia/core/src/common/logger.ts","webpack://browser-app/../node_modules/@theia/core/src/common/lsp-types.ts","webpack://browser-app/../node_modules/@theia/core/src/common/menu.ts","webpack://browser-app/../node_modules/@theia/core/src/common/message-service-protocol.ts","webpack://browser-app/../node_modules/@theia/core/src/common/message-service.ts","webpack://browser-app/../node_modules/@theia/core/src/common/messaging/connection-error-handler.ts","webpack://browser-app/../node_modules/@theia/core/src/common/messaging/handler.ts","webpack://browser-app/../node_modules/@theia/core/src/common/messaging/index.ts","webpack://browser-app/../node_modules/@theia/core/src/common/messaging/proxy-factory.ts","webpack://browser-app/../node_modules/@theia/core/src/common/objects.ts","webpack://browser-app/../node_modules/@theia/core/src/common/os.ts","webpack://browser-app/../node_modules/@theia/core/src/common/path.ts","webpack://browser-app/../node_modules/@theia/core/src/common/progress-service-protocol.ts","webpack://browser-app/../node_modules/@theia/core/src/common/progress-service.ts","webpack://browser-app/../node_modules/@theia/core/src/common/reference.ts","webpack://browser-app/../node_modules/@theia/core/src/common/resource.ts","webpack://browser-app/../node_modules/@theia/core/src/common/selection-service.ts","webpack://browser-app/../node_modules/@theia/core/src/common/selection.ts","webpack://browser-app/../node_modules/@theia/core/src/common/stream.ts","webpack://browser-app/../node_modules/@theia/core/src/common/strings.ts","webpack://browser-app/../node_modules/@theia/core/src/common/types.ts","webpack://browser-app/../node_modules/@theia/core/src/common/uri.ts","webpack://browser-app/../node_modules/@theia/core/shared/inversify.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;AAElF,IAAM,UAAU,GAAkB,mBAAO,CAAC,yDAAa,CAAC,CAAC;AAEzD;;GAEG;AACH;IAAA;QAEI;;WAEG;QACM,2BAAsB,GAAG,wBAAwB,CAAC;IA6C/D,CAAC;IA3CG;;;;OAIG;IACH,wBAAE,GAAF;QACI,OAAO,UAAU,EAAE,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACH,+BAAS,GAAT;QACI,OAAO,IAAI,CAAC,EAAE,EAAE;eACT,OAAO,OAAO,KAAK,WAAW;YACjC,qFAAqF;eAClF,CAAE,OAAe,CAAC,UAAU,IAAI,4BAA4B,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,yDAAyD;IAC1J,CAAC;IAED;;;;;;;;;;OAUG;IACH,8DAA8D;IAC9D,kCAAY,GAAZ,UAAa,GAAS;QAClB,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACrD;QACD,6BACO,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAC1C,oBAAoB,EAAE,CAAC,IACzB;IACN,CAAC;IAEL,kBAAC;AAAD,CAAC;AAED,IAAM,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;AACnC,IAAM,WAAW,GAAwC,EAAE,QAAQ,YAAE,CAAC;AAC7D,kCAAW;;;;;;;;;;;;;AC3EpB;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlF,IAAiB,gBAAgB,CAmDhC;AAnDD,WAAiB,gBAAgB;IAW7B,IAAM,KAAK,GAAa,EAAE,CAAC;IAC3B,SAAgB,OAAO,CAAsB,IAAO,EAAE,OAAuC;QACzF,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,+BAA6B,IAAI,+BAA4B,CAAC,CAAC;SAClF;QACD,IAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC;YAAC,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YAAK,WAAI,IAAI,CAAC,IAAI,EAAE,OAAO,wBAAI,IAAI,IAAG,cAAc,CAAC;QAAhD,CAAgD,EAAE;YACvG,IAAI;YACJ,EAAE,EAAF,UAAG,GAAuB;gBACtB,OAAO,GAAG,YAAY,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC;YACpD,CAAC;SACJ,CAAC,CAAC;QACH,OAAO,cAAc,CAAC;IAC1B,CAAC;IAXe,wBAAO,UAWtB;IACD,SAAgB,EAAE,CAAsB,GAAuB;QAC3D,OAAO,GAAG,YAAY,IAAI,CAAC;IAC/B,CAAC;IAFe,mBAAE,KAEjB;IACD,SAAgB,QAAQ,CAAsB,IAAO,EAAE,GAAe;QAClE,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC;IAFe,yBAAQ,WAEvB;IACD;QAAwC,wBAAK;QAEzC,cACa,IAAO,EAChB,GAAgC,EAChC,cAAyB;YAH7B,YAKI,kBAAM,GAAG,CAAC,OAAO,CAAC,SAQrB;YAZY,UAAI,GAAJ,IAAI,CAAG;YAKhB,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACrB,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,IAAI,GAAG,CAAC,KAAK,EAAE;gBACX,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;aAC1B;iBAAM,IAAI,KAAK,CAAC,iBAAiB,IAAI,cAAc,EAAE;gBAClD,KAAK,CAAC,iBAAiB,CAAC,KAAI,EAAE,cAAc,CAAC,CAAC;aACjD;;QACL,CAAC;QACD,qBAAM,GAAN;YACU,SAA2B,IAAI,EAA7B,OAAO,eAAE,IAAI,YAAE,KAAK,WAAS,CAAC;YACtC,OAAO,EAAE,OAAO,WAAE,IAAI,QAAE,KAAK,SAAE,CAAC;QACpC,CAAC;QACL,WAAC;IAAD,CAAC,CApBuC,KAAK,GAoB5C;AACL,CAAC,EAnDgB,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAmDhC;;;;;;;;;;;;;AC1ED;;;;;;;;;;;;;;kFAckF;AAClF;;;gGAGgG;;;AAEhG,oGAAyC;AAWzC,8DAA8D;AAC9D,IAAM,aAAa,GAAgB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,QAAa,EAAE,OAAa;IACjG,IAAM,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,OAAO,EAAE,OAAO,EAAP,cAAkB,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACzD,CAAC,EAAE,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAEzB,IAAiB,iBAAiB,CAWjC;AAXD,WAAiB,iBAAiB;IAEjB,sBAAI,GAAsB,MAAM,CAAC,MAAM,CAAC;QACjD,uBAAuB,EAAE,KAAK;QAC9B,uBAAuB,EAAE,aAAK,CAAC,IAAI;KACtC,CAAC,CAAC;IAEU,2BAAS,GAAsB,MAAM,CAAC,MAAM,CAAC;QACtD,uBAAuB,EAAE,IAAI;QAC7B,uBAAuB,EAAE,aAAa;KACzC,CAAC,CAAC;AACP,CAAC,EAXgB,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAWjC;AAED;IAAA;QAEY,iBAAY,GAAY,KAAK,CAAC;IA0B1C,CAAC;IAvBU,6BAAM,GAAb;QACI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;aAC7B;SACJ;IACL,CAAC;IAED,sBAAI,iDAAuB;aAA3B;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IAED,sBAAI,iDAAuB;aAA3B;YACI,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,OAAO,aAAa,CAAC;aACxB;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAO,EAAQ,CAAC;aACvC;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IACL,mBAAC;AAAD,CAAC;AAED;IAAA;IA2BA,CAAC;IAvBG,sBAAI,0CAAK;aAAT;YACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACd,yCAAyC;gBACzC,kBAAkB;gBAClB,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;aACpC;YACD,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IAED,wCAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,0CAA0C;YAC1C,4CAA4C;YAC5C,oCAAoC;YACpC,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC,SAAS,CAAC;SAC7C;aAAM,IAAI,IAAI,CAAC,MAAM,KAAK,iBAAiB,CAAC,SAAS,EAAE;YACrC,IAAI,CAAC,MAAO,CAAC,MAAM,EAAE,CAAC;SACxC;IACL,CAAC;IAED,yCAAO,GAAP;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IACL,8BAAC;AAAD,CAAC;AA3BY,0DAAuB;AA6BpC,IAAM,gBAAgB,GAAG,WAAW,CAAC;AAErC,SAAgB,SAAS;IACrB,OAAO,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACvC,CAAC;AAFD,8BAEC;AAED,SAAgB,WAAW,CAAC,GAAsB;IAC9C,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,KAAK,gBAAgB,CAAC;AACrD,CAAC;AAFD,kCAEC;AAED,SAAgB,cAAc,CAAC,KAAyB;IACpD,IAAI,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,uBAAuB,EAAE;QAC1C,MAAM,SAAS,EAAE,CAAC;KACrB;AACL,CAAC;AAJD,wCAIC;;;;;;;;;;;;;AC3HD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAAsD;AACtD,oGAAyD;AACzD,mHAAgE;AAChE,oJAA+D;AA0B/D,IAAiB,OAAO,CAgCvB;AAhCD,WAAiB,OAAO;IACpB,2CAA2C;IAC3C,8DAA8D;IAC9D,SAAgB,EAAE,CAAC,GAAkB;QACjC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC;IACvD,CAAC;IAFe,UAAE,KAEjB;IAED,oDAAoD;IACpD,SAAgB,eAAe,CAAC,CAAU,EAAE,CAAU;QAClD,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,EAAE;YACpB,IAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAI,CAAC,CAAC,QAAQ,UAAK,CAAC,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;YACpF,IAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAI,CAAC,CAAC,QAAQ,UAAK,CAAC,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;YACpF,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SAC7C;aAAM;YACH,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;IARe,uBAAe,kBAQ9B;IAED;;;;;OAKG;IACH,SAAgB,MAAM,CAAC,CAAU,EAAE,CAAU;QACzC,OAAO,CACH,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE;YACb,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK;YACnB,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;YAC3B,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAC5B,CAAC;IACN,CAAC;IAPe,cAAM,SAOrB;AACL,CAAC,EAhCgB,OAAO,GAAP,eAAO,KAAP,eAAO,QAgCvB;AAkCY,2BAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AAoBpD,0BAAkB,GAAG,oBAAoB,CAAC;AAC1C,sBAAc,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAwBvD;;GAEG;AAEH;IAgBI,yBAEuB,oBAA+D;QAA/D,yBAAoB,GAApB,oBAAoB,CAA2C;QAhBnE,cAAS,GAA8B,EAAE,CAAC;QAC1C,cAAS,GAAuC,EAAE,CAAC;QAEnD,yBAAoB,GAAG,IAAI,GAAG,EAAsB,CAAC;QAExE,kCAAkC;QACxB,YAAO,GAAc,EAAE,CAAC;QAEf,gCAA2B,GAAG,IAAI,eAAO,EAA2B,CAAC;QAC/E,yBAAoB,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;QAEpD,+BAA0B,GAAG,IAAI,eAAO,EAAgB,CAAC;QACnE,wBAAmB,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;IAKjE,CAAC;IAEL,iCAAO,GAAP;;QACI,IAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;;YACnE,KAAsB,4CAAa,oHAAE;gBAAhC,IAAM,OAAO;gBACd,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAClC;;;;;;;;;IACL,CAAC;IAED;;;;OAIG;IACH,yCAAe,GAAf,UAAgB,OAAgB,EAAE,OAAwB;QAA1D,iBAYC;QAXG,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YAC5B,OAAO,CAAC,IAAI,CAAC,eAAa,OAAO,CAAC,EAAE,4BAAyB,CAAC,CAAC;YAC/D,OAAO,uBAAU,CAAC,IAAI,CAAC;SAC1B;QACD,IAAM,SAAS,GAAG,IAAI,iCAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;QAC5E,IAAI,OAAO,EAAE;YACT,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;SAC7D;QACD,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QACrD,SAAS,CAAC,IAAI,CAAC,uBAAU,CAAC,MAAM,CAAC,cAAM,YAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAA5C,CAA4C,CAAC,CAAC,CAAC;QACtF,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,2CAAiB,GAA3B,UAA4B,OAAgB;QAA5C,iBAOC;QANG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;QACrC,OAAO;YACH,OAAO,EAAE;gBACL,OAAO,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACtC,CAAC;SACJ,CAAC;IACN,CAAC;IAcD,2CAAiB,GAAjB,UAAkB,WAA6B;QAC3C,IAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;QAClE,IAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACvD,IAAI,YAAY,EAAE;YACd,YAAY,CAAC,OAAO,EAAE,CAAC;SAC1B;IACL,CAAC;IAED;;;;;;OAMG;IACH,yCAAe,GAAf,UAAgB,SAAiB,EAAE,OAAuB;QACtD,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC;SAC7C;QACD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO;YACH,OAAO,EAAE;gBACL,IAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACtC,IAAI,GAAG,IAAI,CAAC,EAAE;oBACV,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iBAC3B;YACL,CAAC;SACJ,CAAC;IACN,CAAC;IAED;;OAEG;IACH,8DAA8D;IAC9D,mCAAS,GAAT,UAAU,OAAe;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACrC,OAAO,OAAO,IAAI,CAAC,gBAAgB,OAArB,IAAI,YAAkB,OAAO,GAAK,IAAI,EAAC,KAAK,WAAW,CAAC;IAC1E,CAAC;IAED;;OAEG;IACH,8DAA8D;IAC9D,mCAAS,GAAT,UAAU,OAAe;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACrC,OAAO,OAAO,IAAI,CAAC,iBAAiB,OAAtB,IAAI,YAAmB,OAAO,GAAK,IAAI,EAAC,KAAK,WAAW,CAAC;IAC3E,CAAC;IAED;;OAEG;IACH,8DAA8D;IAC9D,mCAAS,GAAT,UAAU,OAAe;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACrC,OAAO,OAAO,IAAI,CAAC,iBAAiB,OAAtB,IAAI,YAAmB,OAAO,GAAK,IAAI,EAAC,KAAK,WAAW,CAAC;IAC3E,CAAC;IAED;;;;OAIG;IACH,8DAA8D;IACxD,wCAAc,GAApB,UAAwB,SAAiB;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;;;;;;wBAC/C,OAAO,GAAG,IAAI,CAAC,gBAAgB,OAArB,IAAI,YAAkB,SAAS,GAAK,IAAI,EAAC,CAAC;6BACtD,OAAO,EAAP,wBAAO;wBACP,qBAAM,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,IAAI,CAAC;;wBAAlD,SAAkD,CAAC;wBACpC,qBAAM,OAAO,CAAC,OAAO,OAAf,OAAO,WAAY,IAAI,IAAC;;wBAAvC,MAAM,GAAG,SAA8B;wBAC7C,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAE,SAAS,aAAE,IAAI,QAAE,CAAC,CAAC;wBAC1D,sBAAO,MAAM,EAAC;4BAElB,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,kBAAgB,SAAS,kFAA+E,CAAC,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,CAAC;;;;KAC3K;IAED,8DAA8D;IAC9C,gDAAsB,GAAtC,UAAuC,SAAiB,EAAE,IAAgB;QAAhB,gCAAgB;;;;4BACtE,qBAAM,sBAAc,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAE,SAAS,aAAE,IAAI,QAAE,EAAE,KAAK,CAAC;;wBAAvF,SAAuF,CAAC;;;;;KAC3F;IAED;;OAEG;IACH,8DAA8D;IAC9D,2CAAiB,GAAjB,UAAkB,SAAiB;;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC/C,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,QAAQ,EAAE;;gBACV,KAAsB,kCAAQ,2FAAE;oBAA3B,IAAM,OAAO;oBACd,IAAI;wBACA,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,OAAjB,OAAO,WAAc,IAAI,EAAC,EAAE;4BAClD,OAAO,OAAO,CAAC;yBAClB;qBACJ;oBAAC,OAAO,KAAK,EAAE;wBACZ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;qBACxB;iBACJ;;;;;;;;;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,8DAA8D;IAC9D,0CAAgB,GAAhB,UAAiB,SAAiB;;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC9C,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,QAAQ,EAAE;;gBACV,KAAsB,kCAAQ,2FAAE;oBAA3B,IAAM,OAAO;oBACd,IAAI;wBACA,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,OAAjB,OAAO,WAAc,IAAI,EAAC,EAAE;4BAClD,OAAO,OAAO,CAAC;yBAClB;qBACJ;oBAAC,OAAO,KAAK,EAAE;wBACZ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;qBACxB;iBACJ;;;;;;;;;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,8DAA8D;IAC9D,2CAAiB,GAAjB,UAAkB,SAAiB;;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC/C,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,QAAQ,EAAE;;gBACV,KAAsB,kCAAQ,2FAAE;oBAA3B,IAAM,OAAO;oBACd,IAAI;wBACA,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,OAAjB,OAAO,WAAc,IAAI,EAAC,EAAE;4BACjD,OAAO,OAAO,CAAC;yBAClB;qBACJ;oBAAC,OAAO,KAAK,EAAE;wBACZ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;qBACxB;iBACJ;;;;;;;;;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,wCAAc,GAAd,UAAe,SAAiB;QAC5B,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC3C,OAAO,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IAKD,sBAAI,qCAAQ;QAHZ;;WAEG;aACH;;YACI,IAAM,QAAQ,GAAc,EAAE,CAAC;;gBAC/B,KAAiB,sBAAI,CAAC,UAAU,6CAAE;oBAA7B,IAAM,EAAE;oBACT,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;oBAChC,IAAI,GAAG,EAAE;wBACL,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACtB;iBACJ;;;;;;;;;YACD,OAAO,QAAQ,CAAC;QACpB,CAAC;;;OAAA;IAED;;OAEG;IACH,oCAAU,GAAV,UAAW,EAAU;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAKD,sBAAI,uCAAU;QAHd;;WAEG;aACH;YACI,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC;;;OAAA;IAKD,sBAAI,mCAAM;QAHV;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAED;;;WAGG;aACH,UAAW,QAAmB;YAC1B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QAC5B,CAAC;;;OARA;IAUD;;;;;OAKG;IACH,0CAAgB,GAAhB,UAAiB,MAA2B;QAA5C,iBAWC;QAVG,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACvB,MAAM,CAAC,OAAO,CAAC,UAAC,OAAgB,IAAK,YAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAA9B,CAA8B,CAAC,CAAC;SACxE;aAAM;YACH,uEAAuE;YACvE,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAC,OAAgB,IAAK,cAAO,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,EAA/B,CAA+B,CAAC,CAAC;YAC5F,wFAAwF;YACxF,IAAI,KAAK,IAAI,CAAC,EAAE;gBAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAAE;YAClD,sEAAsE;YACtE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAChC;IACL,CAAC;IAED;;OAEG;IACH,6CAAmB,GAAnB;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAzRQ,eAAe;QAD3B,sBAAU,EAAE;QAkBJ,6BAAM,CAAC,4CAAoB,CAAC,GAAE,4BAAK,CAAC,2BAAmB,CAAC;;OAjBpD,eAAe,CA2R3B;IAAD,sBAAC;CAAA;AA3RY,0CAAe;;;;;;;;;;;;;AChK5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAA8D;AAC9D,kKAAyG;AAGzG;;;;GAIG;AAEH;IAMI,wCACiD,aAAwC;;QAAxC,kDAAwC;QAL/E,gBAAW,GAAG,KAAK,CAAC;QACpB,mBAAc,GAAqB,EAAE,CAAC;QACtC,kBAAa,GAAG,IAAI,GAAG,EAAsC,CAAC;;YAKpE,KAA2B,4CAAa,oHAAE;gBAArC,IAAM,YAAY;gBACnB,YAAY,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;aAClD;;;;;;;;;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,mDAAU,GAAV,UAAW,KAA+B,EAAE,OAAyB;;QACjE,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;SACvE;aAAM,IAAI,KAAK,KAAK,GAAG,EAAE;YACtB,UAAI,CAAC,cAAc,EAAC,IAAI,oBAAI,OAAO,GAAE;SACxC;aAAM;;gBACH,KAAmB,4BAAK,4EAAE;oBAArB,IAAM,IAAI;oBACX,UAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,oBAAI,OAAO,GAAE;iBAC3C;;;;;;;;;SACJ;IACL,CAAC;IAED,qDAAY,GAAZ,UAA+B,QAAa,EAAE,IAAsB;QAChE,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO,QAAQ,CAAC;SACnB;QACD,OAAO,QAAQ,CAAC,MAAM,CAClB,gBAAM,IAAI,cAAO,CAAC,KAAK,CAAC,gBAAM,IAAI,aAAM,CAAC,MAAM,CAAC,EAAd,CAAc,CAAC,EAAvC,CAAuC,CACpD,CAAC;IACN,CAAC;IAES,oDAAW,GAArB,UAAsB,IAAsB;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC;SAC5C;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,mDAAU,GAApB,UAAqB,IAAsB;QACvC,gBACO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAClC,IAAI,CAAC,cAAc,EACxB;IACN,CAAC;IAlDQ,8BAA8B;QAD1C,sBAAU,EAAE;QAQJ,kCAAW,CAAC,wCAAkB,CAAC,GAAE,+BAAQ,EAAE;;OAPvC,8BAA8B,CAmD1C;IAAD,qCAAC;CAAA;AAnDY,wEAA8B;;;;;;;;;;;;;AC1B3C;;;;;;;;;;;;;;kFAckF;;;AAQrE,kCAA0B,GAAG,MAAM,CAAC,4BAA4B,CAAC,CAAC;AAuBlE,0BAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;;;;;;;;;;;;;AC7C/D;;;;;;;;;;;;;;kFAckF;;;AAErE,cAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;;;;;;;;;;;;;AChBvC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,6JAAsC;AACtC,+KAA+C;AAC/C,mIAAyB;;;;;;;;;;;;;AClBzB;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlF,oJAAmE;AAEtD,4BAAoB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAUnE;IAII,4CACuB,iBAAkD,EAClD,SAA+B;QAD/B,sBAAiB,GAAjB,iBAAiB,CAAiC;QAClD,cAAS,GAAT,SAAS,CAAsB;IAClD,CAAC;IAEL,6DAAgB,GAAhB,UAAiB,SAAmB;QAChC,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC7B,IAAM,eAAe,GAAQ,EAAE,CAAC;YAChC,IAAI,cAAc,SAAwC,CAAC;YAC3D,IAAI,gBAAgB,GAAgC,IAAI,CAAC,SAAS,CAAC;YACnE,2CAA2C;YAC3C,OAAO,gBAAgB,KAAK,IAAI,EAAE;gBAC9B,IAAI,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;oBAClD,IAAI;wBACA,eAAe,CAAC,IAAI,OAApB,eAAe,WAAS,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAE;qBAC5E;oBAAC,OAAO,KAAK,EAAE;wBACZ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;qBACxB;iBACJ;gBACD,IAAI,cAAc,KAAK,SAAS,IAAI,gBAAgB,CAAC,OAAO,CAAC,gDAA0B,CAAC,EAAE;oBACtF,cAAc,GAAG,gBAAgB,CAAC,GAAG,CAAC,gDAA0B,CAAC,CAAC;iBACrE;gBACD,2CAA2C;gBAC3C,gBAAgB,GAAG,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;aAC1E;YAED,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;SAE3H;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,yCAAC;AAAD,CAAC;AAGD,IAAiB,QAAQ,CAOxB;AAPD,WAAiB,QAAQ;IACrB,SAAgB,WAAW,CAAC,GAAa;QACrC,OAAO,OAAO,GAAG,KAAK,UAAU;YAC5B,qEAAqE;YACrE,uEAAuE;eACpE,CAAC,MAAM,IAAI,GAAG,IAAI,QAAQ,IAAI,GAAG,CAAC,CAAC;IAC9C,CAAC;IALe,oBAAW,cAK1B;AACL,CAAC,EAPgB,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAOxB;AAED,SAAgB,wBAAwB,CAAC,QAAkB,EAAE,EAAU;IACnE,IAAM,eAAe,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAAoB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,4BAAoB,CAAC,CAAC,CAAC;IAChI,eAAe;SACV,cAAc,CAAC,aAAG,IAAI,WAAI,kCAAkC,CAAC,EAAE,EAAE,GAAG,CAAC,SAAS,CAAC,EAAzD,CAAyD,CAAC;SAChF,gBAAgB,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;AAChD,CAAC;AALD,4DAKC;AAED;;;;;GAKG;AACH,8DAA8D;AAC9D,SAAgB,gBAAgB,CAAC,QAAkB,EAAE,OAA0C,EAAE,aAAkD;;IAC/I,IAAM,IAAI,GAAoB,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;;QACvG,KAA2B,4CAAa,oHAAE;YAArC,IAAM,YAAY;YACnB,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACzC;;;;;;;;;AACL,CAAC;AALD,4CAKC;;;;;;;;;;;;;;;AC/FD;;;;;;;;;;;;;;kFAckF;AAClF,oGAAyC;AASzC,IAAiB,UAAU,CAW1B;AAXD,WAAiB,UAAU;IACvB,8DAA8D;IAC9D,SAAgB,EAAE,CAAC,GAAQ;QACvB,OAAO,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,SAAS,IAAI,GAAG,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,KAAK,UAAU,CAAC;IACxG,CAAC;IAFe,aAAE,KAEjB;IACD,SAAgB,MAAM,CAAC,IAAgB;QACnC,OAAO;YACH,OAAO,EAAE,IAAI;SAChB,CAAC;IACN,CAAC;IAJe,iBAAM,SAIrB;IACY,eAAI,GAAG,MAAM,CAAC,cAAQ,CAAC,CAAC,CAAC;AAC1C,CAAC,EAXgB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAW1B;AAED;IAKI;QAAA,iBAEC;QAFW,mBAA0B;aAA1B,UAA0B,EAA1B,qBAA0B,EAA1B,IAA0B;YAA1B,8BAA0B;;QAHnB,gBAAW,GAAiB,EAAE,CAAC;QAC/B,qBAAgB,GAAG,IAAI,eAAO,EAAQ,CAAC;QAyBlD,sBAAiB,GAAG,KAAK,CAAC;QAtB9B,SAAS,CAAC,OAAO,CAAC,WAAC,IAAI,YAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAZ,CAAY,CAAC,CAAC;IACzC,CAAC;IAMD,sBAAI,2CAAS;QAJb;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QACvC,CAAC;;;OAAA;IAES,4CAAa,GAAvB;QACI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC1C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACtC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;SACnC;IACL,CAAC;IAED,sBAAI,0CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC;QACzC,CAAC;;;OAAA;IAGD,sCAAO,GAAP;QACI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACzC,OAAO;SACV;QACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnB,IAAI;gBACA,IAAI,CAAC,WAAW,CAAC,GAAG,EAAG,CAAC,OAAO,EAAE,CAAC;aACrC;YAAC,OAAO,CAAC,EAAE;gBACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACpB;SACJ;QACD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,mCAAI,GAAJ,UAAK,UAAsB;QAA3B,iBAiBC;QAhBG,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,IAAM,eAAe,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC;YAC/B,IAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC9C,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBACd,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAChC;YACD,KAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,OAAO,GAAG;YACjB,QAAQ,CAAC,OAAO,EAAE,CAAC;YACnB,UAAU,CAAC,OAAO,GAAG,eAAe,CAAC;YACrC,eAAe,EAAE,CAAC;QACtB,CAAC,CAAC;QACF,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED,sCAAO,GAAP,UAAQ,WAAyB;QAAjC,iBAIC;QAHG,OAAO,WAAW,CAAC,GAAG,CAAC,oBAAU;YAC7B,YAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QAArB,CAAqB,CACxB,CAAC;IACN,CAAC;IAEL,2BAAC;AAAD,CAAC;AAtEY,oDAAoB;;;;;;;;;;;;;ACrCjC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BlF,IAAiB,KAAK,CAgBrB;AAhBD,WAAiB,KAAK;IAClB,IAAM,WAAW,GAAG,EAAE,OAAO,EAAP,cAAkB,CAAC,EAAE,CAAC;IAC/B,UAAI,GAAe,MAAM,CAAC,MAAM,CAAC,cAAmC,OAAO,WAAW,CAAC,CAAC,CAAC,EAAE;QACpG,IAAI,YAAY,KAAa,OAAO,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,YAAY,CAAC,YAAoB,IAAI,CAAC;KAC7C,CAAC,CAAC;IAEH;;;OAGG;IACH,SAAgB,GAAG,CAAO,KAAe,EAAE,OAAoB;QAC3D,OAAO,MAAM,CAAC,MAAM,CAAC,UAAC,QAAuB,EAAE,QAAc,EAAE,WAA0B,IAAK,YAAK,CAAC,WAAC,IAAI,eAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAnC,CAAmC,EAAE,SAAS,EAAE,WAAW,CAAC,EAAvE,CAAuE,EAAE;YACnK,YAAY,EAAE,CAAC;SAClB,CAAC,CAAC;IACP,CAAC;IAJe,SAAG,MAIlB;AACL,CAAC,EAhBgB,KAAK,GAAL,aAAK,KAAL,aAAK,QAgBrB;AAGD;IAAA;IA+EA,CAAC;IA1EG,sBAAI,gCAAM;aAAV;YACI,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC;QAC1D,CAAC;;;OAAA;IAEM,0BAAG,GAAV,UAAW,QAAkB,EAAE,OAAwB,EAAE,MAAqB;QAA9E,iBAWC;QAX8B,6CAAwB;QACnD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACvB;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,SAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE9B,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACvB,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,cAAM,YAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,EAA9B,CAA8B,EAAE,CAAC,CAAC;SAClE;IACL,CAAC;IAEM,6BAAM,GAAb,UAAc,QAAkB,EAAE,OAAwB;QAAxB,6CAAwB;QACtD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,OAAO;SACV;QAED,IAAI,iCAAiC,GAAG,KAAK,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBACjC,IAAI,IAAI,CAAC,SAAU,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;oBAChC,wCAAwC;oBACxC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7B,IAAI,CAAC,SAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7B,OAAO;iBACV;qBAAM;oBACH,iCAAiC,GAAG,IAAI,CAAC;iBAC5C;aACJ;SACJ;QAED,IAAI,iCAAiC,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;SACxG;IACL,CAAC;IAED,mCAAmC;IAC5B,uBAAC,MAAM,CAAC,QAAQ,CAAC,GAAxB;QACI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,OAAO,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;SAChC;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAE1C,OAAO,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ,EAAE,CAAC;YAC7B;gBAAC,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;gBAAK,eAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;YAAjC,CAAiC;QAArD,CAAqD,CACxD,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;IACzB,CAAC;IAEM,6BAAM,GAAb;;QAAc,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACxB,IAAM,GAAG,GAAU,EAAE,CAAC;;YACtB,KAAuB,sBAAI,6CAAE;gBAAxB,IAAM,QAAQ;gBACf,IAAI;oBACA,GAAG,CAAC,IAAI,CAAC,QAAQ,wBAAI,IAAI,GAAE,CAAC;iBAC/B;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACpB;aACJ;;;;;;;;;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,8BAAO,GAAd;QACI,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC;IAC5D,CAAC;IAEM,8BAAO,GAAd;QACI,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IACL,mBAAC;AAAD,CAAC;AAOD;IAaI,iBACY,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;QAN7B,cAAS,GAAG,KAAK,CAAC;QAGlB,uBAAkB,GAAG,CAAC,CAAC;IAI3B,CAAC;IAML,sBAAI,0BAAK;QAJT;;;WAGG;aACH;YAAA,iBAsCC;YArCG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAC,QAAuB,EAAE,QAAc,EAAE,WAA0B;oBAC5F,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE;wBAClB,KAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;qBACxC;oBACD,IAAI,KAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,QAAQ,CAAC,kBAAkB,IAAI,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE;wBAChF,KAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,KAAI,CAAC,CAAC;qBAC1C;oBACD,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;oBACxC,IAAM,uBAAuB,GAAG,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBAEjF,IAAM,MAAM,GAAe;wBACvB,OAAO,EAAE;4BACL,IAAI,uBAAuB,EAAE;gCACzB,uBAAuB,EAAE,CAAC;6BAC7B;4BACD,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;4BAC/B,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE;gCACjB,KAAI,CAAC,UAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gCAC5C,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gCAC/B,IAAI,KAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,QAAQ,CAAC,oBAAoB,IAAI,KAAI,CAAC,UAAW,CAAC,OAAO,EAAE,EAAE;oCACnF,KAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,KAAI,CAAC,CAAC;iCAC5C;6BACJ;wBACL,CAAC;qBACJ,CAAC;oBACF,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;wBAC5B,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAC5B;oBAED,OAAO,MAAM,CAAC;gBAClB,CAAC,EAAE;oBACC,YAAY,EAAE,OAAO,CAAC,uBAAuB;iBAChD,CACA,CAAC;aACL;YACD,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IAES,mCAAiB,GAA3B,UAA4B,YAAoB;QAC5C,IAAI,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACxC,OAAO,SAAS,CAAC;SACpB;QACD,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC7C,IAAI,aAAa,IAAI,YAAY,EAAE;YAC/B,OAAO,SAAS,CAAC;SACpB;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAEzC,IAAI,CAAC,kBAAkB,IAAI,CAAC,CAAC;QAC7B,IAAI,IAAI,CAAC,kBAAkB,IAAI,CAAC,EAAE;YAC9B,0DAA0D;YAC1D,2BAA2B;YAC3B,IAAI,CAAC,kBAAkB,GAAG,YAAY,GAAG,GAAG,CAAC;YAE7C,IAAI,UAAgB,CAAC;YACrB,IAAI,UAAQ,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,cAAe,CAAC,OAAO,CAAC,UAAC,UAAU,EAAE,KAAK;gBAC3C,IAAI,CAAC,UAAQ,IAAI,UAAQ,GAAG,UAAU,EAAE;oBACpC,UAAQ,GAAG,KAAK,CAAC;oBACjB,UAAQ,GAAG,UAAU,CAAC;iBACzB;YACL,CAAC,CAAC,CAAC;YAEH,mCAAmC;YACnC,OAAO,CAAC,IAAI,CAAC,4CAA0C,aAAa,wEAAmE,YAAY,mCAA8B,UAAQ,OAAI,CAAC,CAAC;YAC/L,OAAO,CAAC,IAAI,CAAC,UAAS,CAAC,CAAC;SAC3B;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;IAES,kCAAgB,GAA1B;QAAA,iBAQC;QAPG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACtB,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;SACnC;QACD,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;QAC1C,OAAO,cAAM,YAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAA3B,CAA2B,CAAC;IAC7C,CAAC;IAES,iCAAe,GAAzB,UAA0B,KAAa;QACnC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACtB,OAAO;SACV;QACD,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED;;;OAGG;IACH,sBAAI,GAAJ,UAAK,KAAQ;QACT,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjC;IACL,CAAC;IAED;;;OAGG;IACG,0BAAQ,GAAd,UAAe,SAA6D;;;;;;;6BACpE,IAAI,CAAC,UAAU,EAAf,wBAAe;;;;wBACQ,kBAAI,CAAC,UAAU;;;;wBAA3B,QAAQ;wBACV,qBAAM,SAAS,CAAC,QAAQ,CAAC;;wBAA9B,IAAI,CAAC,UAAyB,GAAE;4BAC5B,wBAAM;yBACT;;;;;;;;;;;;;;;;;;;;KAGZ;IAED,yBAAO,GAAP;QACI,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;SACnC;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC/B;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAjJc,+BAAuB,GAAG,GAAG,CAAC;IAE9B,aAAK,GAAG,cAAoB,CAAC,CAAC;IAgJjD,cAAC;CAAA;AApJY,0BAAO;AAgKpB,IAAiB,cAAc,CAoC9B;AApCD,WAAiB,cAAc;IAC3B;;;;OAIG;IACH,SAAsB,IAAI,CACtB,OAAmB,EACnB,KAA2B,EAC3B,OAAuC;QAAvC,6CAAuC;;;;;;wBAEjC,SAAS,GAAoB,EAAE,CAAC;wBAChC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;4BACpC,SAAS,EAAE,UAAC,QAAsB;gCAC9B,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oCAC5B,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;iCACjE;gCACD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;4BAC7B,CAAC;yBACJ,CAAM,CAAC;wBACR,IAAI;4BACA,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;4BACzB,iDAAiD;4BACjD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;yBAC5B;gCAAS;4BACN,OAAO,UAAU,CAAC,WAAW,CAAC,CAAC;yBAClC;wBACD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;4BACnB,sBAAO;yBACV;6BACG,QAAO,KAAK,SAAS,GAArB,wBAAqB;wBACrB,qBAAM,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,OAAO,CAAC,EAA5B,CAA4B,CAAC,CAAC,CAAC;;wBAAlG,SAAkG,CAAC;;4BAEnG,qBAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;;wBAA5B,SAA4B,CAAC;;;;;;KAEpC;IA7BqB,mBAAI,OA6BzB;AACL,CAAC,EApCgB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAoC9B;AAED,yHAAmD;AAEnD;IAA4D,gCAAU;IAAtE;;IA0DA,CAAC;IAtDG;;OAEG;IACH,2BAAI,GAAJ,UAAK,KAA2B,EAAE,KAAiD,EAC/E,WAAmE;QADvE,iBAWC;QAXiC,gCAA2B,gCAAiB,CAAC,IAAI;QAE/E,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC5B;QACD,IAAM,SAAS,YAAO,SAAS,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAM,YAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,CAAC,EAAlD,CAAkD,CAAC,CAAC;SACjH;QACD,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IACnF,CAAC;IAEe,8BAAO,GAAvB,UAAwB,SAAqB,EAAE,KAA2B,EAAE,KAAwB,EAChG,WAAmE;;;;;;;4CACxD,QAAQ;;;;;wCACf,IAAI,KAAK,CAAC,uBAAuB,EAAE;;yCAElC;wCACK,SAAS,GAAoB,EAAE,CAAC;wCAChC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;4CACpC,SAAS,EAAE,UAAC,QAAsB;gDAC9B,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oDAC5B,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;iDACjE;gDACD,IAAI,WAAW,EAAE;oDACb,QAAQ,GAAG,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;iDAC9C;gDACD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;4CAC7B,CAAC;yCACJ,CAAM,CAAC;wCACR,IAAI;4CACA,QAAQ,CAAC,KAAK,CAAC,CAAC;4CAChB,iDAAiD;4CACjD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;yCAC5B;wCAAC,OAAO,CAAC,EAAE;4CACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;yCACpB;gDAAS;4CACN,OAAO,UAAU,CAAC,WAAW,CAAC,CAAC;yCAClC;wCACD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;;yCAEtB;;;;wCAEG,qBAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;;wCAA5B,SAA4B,CAAC;;;;wCAE7B,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;;;;;;;wBA/BF,gCAAS;;;;wBAArB,QAAQ;sDAAR,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;KAkCtB;IAEL,mBAAC;AAAD,CAAC,CA1D2D,OAAO,GA0DlE;AA1DY,oCAAY;;;;;;;;;;;;;AC3VzB;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;AAElF,6GAAwB;AACxB,uHAA6B;AAC7B,qHAA4B;AAC5B,6GAAwB;AACxB,2HAA+B;AAC/B,iHAA0B;AAC1B,2GAAuB;AACvB,qIAAoC;AACpC,iHAA0B;AAC1B,uGAAqB;AACrB,mHAA2B;AAC3B,6IAAwC;AACxC,2GAAuB;AACvB,+GAAyB;AACzB,2HAA4B;AAC5B,iIAAkC;AAClC,mJAA2C;AAC3C,mIAAmC;AACnC,qJAA4C;AAC5C,qHAA4B;AAC5B,iHAA0B;AAC1B,qIAAoC;AACpC,qHAA4B;AAC5B,+IAAsC;AAEtC,2JAAyE;AAChE,6FADA,yBAAW,QACA;;;;;;;;;;;;;AC1CpB;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAAuC;AAG1B,qBAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAExC,kBAAU,GAAG,kBAAkB,CAAC;AAUhC,qBAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAYrD;IAAA;QAEa,YAAO,GAAG,IAAI,GAAG,EAAiB,CAAC;IAMhD,CAAC;IAJG,mDAAiB,GAAjB,UAAkB,KAA4B;QAC1C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM,IAAI,aAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAA/B,CAA+B,CAAC,CAAC;IACpE,CAAC;IANQ,uBAAuB;QADnC,sBAAU,EAAE;OACA,uBAAuB,CAQnC;IAAD,8BAAC;CAAA;AARY,0DAAuB;AAUvB,sBAAc,GAAG,MAAM,CAAC;AAErC,IAAY,QAOX;AAPD,WAAY,QAAQ;IAChB,0CAAU;IACV,0CAAU;IACV,wCAAS;IACT,wCAAS;IACT,0CAAU;IACV,0CAAU;AACd,CAAC,EAPW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAOnB;AACD,WAAiB,QAAQ;IACR,gBAAO,GAAG,IAAI,GAAG,CAAmB;QAC7C,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;QACzB,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;QACzB,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;QACvB,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;QACvB,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;QACzB,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC;KAC5B,CAAC,CAAC;IAEH,SAAgB,QAAQ,CAAC,KAAe;QACpC,OAAO,gBAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAFe,iBAAQ,WAEvB;IAED,SAAgB,UAAU,CAAC,QAAgB;;;YACvC,KAAmB,yCAAO,sFAAE;gBAAvB,IAAM,IAAI;gBACX,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;oBACtB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;iBAClB;aACJ;;;;;;;;;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IARe,mBAAU,aAQzB;AACL,CAAC,EAvBgB,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAuBxB;AAED,uDAAuD;AACvD,IAAiB,aAAa,CAwB7B;AAxBD,WAAiB,aAAa;IAE1B,IAAM,kBAAkB,GAAG,OAAO,CAAC,GAAG,CAAC;IACvC,IAAM,QAAQ,GAAG,IAAI,GAAG,CAAoB;QACxC,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC;QAC/B,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC;QAC/B,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC;QAC7B,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC;QAC7B,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC;QAC/B,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC;KAClC,CAAC,CAAC;IACH,SAAgB,KAAK;QACjB,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;QAC9C,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAE,CAAC;QAC5C,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAE,CAAC;QAC5C,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;QAC9C,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;QAC9C,OAAO,CAAC,GAAG,GAAG,kBAAkB,CAAC;IACrC,CAAC;IAPe,mBAAK,QAOpB;IACD,SAAgB,GAAG,CAAC,IAAY,EAAE,QAAgB,EAAE,OAAe,EAAE,MAAa;QAC9E,IAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,kBAAkB,CAAC;QAC7D,IAAM,QAAQ,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7E,OAAO,yBAAI,IAAI,SAAI,QAAQ,SAAI,OAAS,GAAK,MAAM,GAAE;IACzD,CAAC;IAJe,iBAAG,MAIlB;AACL,CAAC,EAxBgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAwB7B;;;;;;;;;;;;;ACjHD;;;;;;;;;;;;;;kFAckF;;;;;;;;;AAElF,qGAAuC;AACvC,oGAAyC;AAIzC;IAAA;QAWY,6BAAwB,GAAG,IAAI,eAAO,EAAyB,CAAC;IAU5E,CAAC;IAnBG,uCAAe,GAAf;QACI,IAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC;QAC9C,OAAO;YACH,iBAAiB,EAAjB,UAAkB,KAA4B;gBAC1C,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC;SACJ,CAAC;IACN,CAAC;IAID,sBAAI,4CAAiB;aAArB;YACI,OAAO,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;QAC/C,CAAC;;;OAAA;IAED,mFAAmF;IACnF,2CAAmB,GAAnB,UAAoB,KAA4B;QAC5C,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IApBQ,aAAa;QADzB,sBAAU,EAAE;OACA,aAAa,CAqBzB;IAAD,oBAAC;CAAA;AArBY,sCAAa;;;;;;;;;;;;;ACrB1B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAA+C;AAC/C,+HAAiD;AACjD,kIAA2F;AAKvF,0FALoB,0BAAQ,QAKpB;AAAE,gGALmC,gCAAc,QAKnC;AAM5B;;;;GAIG;AACH,SAAgB,eAAe;IAC3B,IAAI,cAAM,KAAK,SAAS,EAAE;QACtB,+BAAa,CAAC,KAAK,EAAE,CAAC;QAChB,cAAO,GAAG,SAAS,CAAC;KAC7B;AACL,CAAC;AALD,0CAKC;AAED,SAAgB,aAAa,CAAC,OAAgB;IAC1C,cAAM,GAAG,OAAO,CAAC;IACjB,IAAM,GAAG,GAAG,UAAC,QAAgB,EAAE,OAAa;QAAE,wBAAwB;aAAxB,UAAwB,EAAxB,qBAAwB,EAAxB,IAAwB;YAAxB,uCAAwB;;QAClE,qBAAM,CAAC,GAAG,OAAV,cAAM,YAAK,QAAQ,EAAE,OAAO,GAAK,cAAc;IAA/C,CAAgD,CAAC;IAErD,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,0BAAQ,CAAC,KAAK,CAAC,CAAC;IACpD,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,0BAAQ,CAAC,IAAI,CAAC,CAAC;IAClD,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,0BAAQ,CAAC,IAAI,CAAC,CAAC;IAClD,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,0BAAQ,CAAC,KAAK,CAAC,CAAC;IACpD,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,0BAAQ,CAAC,KAAK,CAAC,CAAC;IACpD,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,0BAAQ,CAAC,IAAI,CAAC,CAAC;AACrD,CAAC;AAXD,sCAWC;AAKY,qBAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAGxC,kBAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAElC,eAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAuKzC;IAQI;;OAEG;IACH,gBAC8C,MAAqB,EACrB,aAA4B,EAC5B,OAAsB,EAClC,IAAY;QAJ9C,iBAyBC;QAxB6C,WAAM,GAAN,MAAM,CAAe;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAe;QAClC,SAAI,GAAJ,IAAI,CAAQ;QAE1C,IAAI,IAAI,KAAK,gCAAc,EAAE;YACzB,+BAA+B;YAC/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACrC;aAAM;YACH,+DAA+D;YAC/D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;SACpC;QAED,0DAA0D;QAC1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAA7B,CAA6B,CAAC,CAAC;QAEvE,wDAAwD;QACxD,aAAa,CAAC,iBAAiB,CAAC,eAAK;YACjC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBACd,IAAI,KAAK,CAAC,UAAU,KAAK,IAAI,EAAE;oBAC3B,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;iBACvD;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4BAAW,GAAX,UAAY,QAAgB;QAA5B,iBAWC;QAVG,OAAO,IAAI,OAAO,CAAO,iBAAO;YAC5B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBACd,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAQ;oBACxB,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC;wBAC9C,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;wBAC3C,OAAO,EAAE,CAAC;oBACd,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACD,4BAAW,GAAX;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,0BAAS,GAAT,UAAU,QAAgB;QACtB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAK;YAC5B,eAAQ,IAAI,KAAK;QAAjB,CAAiB,CACpB,CAAC;IACN,CAAC;IACD,0BAAS,GAAT,UAAU,QAAgB;QAA1B,iBAQC;QAPG,OAAO,IAAI,OAAO,CAAO,iBAAO;YAC5B,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,iBAAO;gBACjC,IAAI,OAAO,EAAE;oBACT,OAAO,EAAE,CAAC;iBACb;YACL,CAAC,CAAC;QAJF,CAIE,CACL,CAAC;IACN,CAAC;IACD,oBAAG,GAAH,UAAI,QAAgB,EAAE,IAAoB;QAAE,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,+BAAgB;;QACxD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,aAAG;YACjC,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;gBAC5B,IAAM,QAAQ,GAAG,IAAI,CAAC;gBACtB,QAAQ,CAAC,GAAG,CAAC,CAAC;aACjB;iBAAM,IAAI,IAAI,EAAE;gBACb,GAAG,yBAAC,IAAI,GAAK,MAAM,GAAE;aACxB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACS,uBAAM,GAAhB,UAAiB,QAAgB;QAAjC,iBAOC;QANG,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;YACjC,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBACd,iBAAC,OAAY;oBAAE,gBAAgB;yBAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;wBAAhB,+BAAgB;;oBAC3B,YAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;gBAA3F,CAA2F;YAD/F,CAC+F,CAClG;QAHD,CAGC,CACJ,CAAC;IACN,CAAC;IACS,uBAAM,GAAhB,UAAiB,KAAU;QACvB,IAAI,KAAK,YAAY,KAAK,EAAE;YACxB,OAAO,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;SAC1C;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,sBAAK,GAAL,UAAM,GAAmB;QAAE,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,+BAAgB;;QACvC,OAAO,IAAI,CAAC,GAAG,OAAR,IAAI,YAAK,0BAAQ,CAAC,KAAK,EAAE,GAAG,GAAK,MAAM,GAAE;IACpD,CAAC;IAED,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,sBAAK,GAAL,UAAM,GAAmB;QAAE,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,+BAAgB;;QACvC,OAAO,IAAI,CAAC,GAAG,OAAR,IAAI,YAAK,0BAAQ,CAAC,KAAK,EAAE,GAAG,GAAK,MAAM,GAAE;IACpD,CAAC;IAED,uBAAM,GAAN;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,uBAAM,GAAN;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,qBAAI,GAAJ,UAAK,GAAmB;QAAE,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,+BAAgB;;QACtC,OAAO,IAAI,CAAC,GAAG,OAAR,IAAI,YAAK,0BAAQ,CAAC,IAAI,EAAE,GAAG,GAAK,MAAM,GAAE;IACnD,CAAC;IAED,uBAAM,GAAN;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,uBAAM,GAAN;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,qBAAI,GAAJ,UAAK,GAAmB;QAAE,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,+BAAgB;;QACtC,OAAO,IAAI,CAAC,GAAG,OAAR,IAAI,YAAK,0BAAQ,CAAC,IAAI,EAAE,GAAG,GAAK,MAAM,GAAE;IACnD,CAAC;IAED,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,sBAAK,GAAL,UAAM,GAAmB;QAAE,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,+BAAgB;;QACvC,OAAO,IAAI,CAAC,GAAG,OAAR,IAAI,YAAK,0BAAQ,CAAC,KAAK,EAAE,GAAG,GAAK,MAAM,GAAE;IACpD,CAAC;IAED,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,0BAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,sBAAK,GAAL,UAAM,GAAmB;QAAE,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,+BAAgB;;QACvC,OAAO,IAAI,CAAC,GAAG,OAAR,IAAI,YAAK,0BAAQ,CAAC,KAAK,EAAE,GAAG,GAAK,MAAM,GAAE;IACpD,CAAC;IAED,sBAAK,GAAL,UAAM,IAAY;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IA3JQ,MAAM;QADlB,sBAAU,EAAE;QAaJ,6BAAM,CAAC,+BAAa,CAAC;QACrB,6BAAM,CAAC,8BAAa,CAAC;QACrB,6BAAM,CAAC,qBAAa,CAAC;QACrB,6BAAM,CAAC,kBAAU,CAAC;iDAFsC,8BAAa;OAbjE,MAAM,CA4JlB;IAAD,aAAC;CAAA;AA5JY,wBAAM;;;;;;;;;;;;;ACrOnB;;;;;;;;;;;;;;kFAckF;;;AAElF,0JAAoD;AAOpD,IAAiB,8BAA8B,CAO9C;AAPD,WAAiB,8BAA8B;IAE3C,8DAA8D;IAC9D,SAAgB,EAAE,CAAC,GAAQ;QACvB,OAAO,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,aAAa,CAAC,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,aAAa,CAAC,KAAK,WAAW,CAAC,IAAI,mCAAK,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IACvK,CAAC;IAFe,iCAAE,KAEjB;AAEL,CAAC,EAPgB,8BAA8B,GAA9B,sCAA8B,KAA9B,sCAA8B,QAO9C;;;;;;;;;;;;;AC9BD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAAsD;AAEtD,0GAAqD;AACrD,oJAA+D;AAoC/D,IAAiB,UAAU,CAM1B;AAND,WAAiB,UAAU;IACvB,8CAA8C;IAC9C,8DAA8D;IAC9D,SAAgB,EAAE,CAAC,GAAqB;QACpC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,WAAW,IAAI,GAAG,CAAC;IAC9D,CAAC;IAFe,aAAE,KAEjB;AACL,CAAC,EANgB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAM1B;AAmBY,qBAAa,GAAa,CAAC,SAAS,CAAC,CAAC;AAEtC,qBAAa,GAAa,CAAC,eAAe,CAAC,CAAC;AAC5C,qBAAa,GAAa,CAAC,eAAe,CAAC,CAAC;AAC5C,wBAAgB,YAAO,qBAAa,GAAE,oBAAoB,GAAE;AAE5D,wBAAgB,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAoC3D;;;;GAIG;AAEH;IAGI,2BAEuB,aAAqD,EAC5B,QAAyB;QADlD,kBAAa,GAAb,aAAa,CAAwC;QAC5B,aAAQ,GAAR,QAAQ,CAAiB;QALtD,SAAI,GAAG,IAAI,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAMhD,CAAC;IAEL,mCAAO,GAAP;;;YACI,KAAsB,sBAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,6CAAE;gBAAxD,IAAM,OAAO;gBACd,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aAC/B;;;;;;;;;IACL,CAAC;IAED;;;;OAIG;IACH,8CAAkB,GAAlB,UAAmB,QAAkB,EAAE,IAAgB;QACnD,IAAM,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED;;;;OAIG;IACH,4CAAgB,GAAhB,UAAiB,QAAkB,EAAE,QAAkB;QACnD,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACxC,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED;;;;;;;;;;;;;;OAcG;IACH,2CAAe,GAAf,UAAgB,QAAkB,EAAE,KAAa,EAAE,OAAwB;QACvE,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;SACzD;QACD,IAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAClC,IAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAM,SAAS,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC9D,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAClD,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC1D,IAAI,CAAC,SAAS,EAAE;YACZ,SAAS,GAAG,IAAI,iBAAiB,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC1D,OAAO,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACpC;aAAM;YACH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;gBAClB,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;aAC3B;iBAAM,IAAI,SAAS,CAAC,KAAK,KAAK,KAAK,EAAE;gBAClC,MAAM,IAAI,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,kCAAkC,CAAC,CAAC;aAC5F;YACD,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;oBACtB,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;iBAC3C;gBACD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;oBAClB,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;iBACnC;aACJ;YACD,OAAO,EAAE,OAAO,EAAE,cAAQ,CAAC,EAAE,CAAC;SACjC;IACL,CAAC;IAuBD,gDAAoB,GAApB,UAAqB,iBAAgD,EAAE,QAAmB;QACtF,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,SAAS;YACrE,CAAC,CAAC,iBAAO,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,EAAE;gBAClD,CAAC,CAAC,iBAAiB,CAAC;QAE5B,IAAI,QAAQ,EAAE;YACV,IAAM,QAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACxC,QAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YACtB,OAAO;SACV;QAED,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED;;;;OAIG;IACH,8CAAkB,GAAlB,UAAmB,EAAU;QACzB,IAAM,OAAO,GAAG,UAAC,IAAuB;YACpC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAI;gBACtB,IAAI,IAAI,YAAY,iBAAiB,EAAE;oBACnC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;oBACpB,OAAO,CAAC,IAAI,CAAC,CAAC;iBACjB;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAES,qCAAS,GAAnB,UAAoB,QAAkB,EAAE,OAAwB;;QAC5D,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;;YAC5B,KAAsB,kCAAQ,2FAAE;gBAA3B,IAAM,OAAO;gBACd,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;aACjE;;;;;;;;;QACD,OAAO,WAAW,CAAC;IACvB,CAAC;IAES,uCAAW,GAArB,UAAsB,OAA0B,EAAE,MAAc,EAAE,OAAwB;QACtF,IAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,MAAM,EAAf,CAAe,CAAC,CAAC;QACxD,IAAI,GAAG,YAAY,iBAAiB,EAAE;YAClC,OAAO,GAAG,CAAC;SACd;QACD,IAAI,GAAG,EAAE;YACL,MAAM,IAAI,KAAK,CAAC,MAAI,MAAM,2BAAwB,CAAC,CAAC;SACvD;QACD,IAAM,MAAM,GAAG,IAAI,iBAAiB,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACjE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;;OAOG;IACH,mCAAO,GAAP,UAAQ,QAAuB;QAAvB,wCAAuB;QAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAnKQ,iBAAiB;QAD7B,sBAAU,EAAE;QAKJ,6BAAM,CAAC,4CAAoB,CAAC,GAAE,4BAAK,CAAC,wBAAgB,CAAC;QAErD,6BAAM,CAAC,yBAAe,CAAC;iDAA8B,yBAAe;OANhE,iBAAiB,CAoK7B;IAAD,wBAAC;CAAA;AApKY,8CAAiB;AAwL9B;;GAEG;AACH;IAKI,2BACoB,EAAU,EACnB,KAAc,EACrB,OAAwB;QAFR,OAAE,GAAF,EAAE,CAAQ;QACnB,UAAK,GAAL,KAAK,CAAS;QANN,cAAS,GAAe,EAAE,CAAC;QAS1C,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;YACnC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;SAC9B;IACL,CAAC;IAED,sBAAI,uCAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAED;;;;OAIG;IACI,mCAAO,GAAd,UAAe,IAAc;QAA7B,iBA0BC;QAzBG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,EAAE,EAAE,EAAE;YACvB,8FAA8F;YAC9F,IAAI,iBAAiB,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE;gBACzC,OAAO,CAAC,CAAC,CAAC;aACb;YACD,IAAI,iBAAiB,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE;gBACzC,OAAO,CAAC,CAAC;aACZ;YACD,IAAI,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,EAAE;gBAC/B,OAAO,CAAC,CAAC,CAAC;aACb;iBAAM,IAAI,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,EAAE;gBACtC,OAAO,CAAC,CAAC;aACZ;iBAAM;gBACH,OAAO,CAAC,CAAC;aACZ;QACL,CAAC,CAAC,CAAC;QACH,OAAO;YACH,OAAO,EAAE;gBACL,IAAM,GAAG,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,GAAG,IAAI,CAAC,EAAE;oBACV,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iBACjC;YACL,CAAC;SACJ,CAAC;IACN,CAAC;IAED;;;;OAIG;IACI,sCAAU,GAAjB,UAAkB,EAAU;QACxB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC;QACnD,IAAI,IAAI,EAAE;YACN,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,GAAG,IAAI,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aACjC;SACJ;IACL,CAAC;IAED,sBAAI,yCAAU;aAAd;YACI,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC;QACjC,CAAC;;;OAAA;IAED,sBAAI,wCAAS;aAAb;YACI,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC;QACpC,CAAC;;;OAAA;IAED;;;;;;OAMG;IACI,mCAAiB,GAAxB,UAAyB,IAAc;QACnC,OAAO,IAAI,YAAY,iBAAiB,IAAI,IAAI,CAAC,EAAE,KAAK,YAAY,CAAC;IACzE,CAAC;IACL,wBAAC;AAAD,CAAC;AAtFY,8CAAiB;AAwF9B;;;;GAIG;AACH;IAII,wBACoB,MAAkB,EACf,QAAyB;QAD5B,WAAM,GAAN,MAAM,CAAY;QACf,aAAQ,GAAR,QAAQ,CAAiB;QAE5C,IAAI,MAAM,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;SAC1E;IACL,CAAC;IAED,sBAAI,8BAAE;aAAN;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QACjC,CAAC;;;OAAA;IAED,sBAAI,iCAAK;aAAT;YACI,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACnB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;aAC5B;YACD,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,GAAG,EAAE;gBACN,MAAM,IAAI,KAAK,CAAC,wBAAsB,IAAI,CAAC,MAAM,CAAC,SAAS,sBAAmB,CAAC,CAAC;aACnF;YACD,OAAO,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,EAAE,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAI,gCAAI;aAAR;YACI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBAClB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;aAC3B;YACD,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAChE,OAAO,OAAO,IAAI,OAAO,CAAC,SAAS,CAAC;QACxC,CAAC;;;OAAA;IAED,sBAAI,sCAAU;aAAd;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;QAC3C,CAAC;;;OAAA;IACL,qBAAC;AAAD,CAAC;AAvCY,wCAAc;;;;;;;;;;;;;ACxZ3B;;;;;;;;;;;;;;kFAckF;;;;;;;;;AAElF,qGAAuC;AAG1B,0BAAkB,GAAG,0BAA0B,CAAC;AAE7D,IAAY,WAMX;AAND,WAAY,WAAW;IACnB,+CAAS;IACT,mDAAW;IACX,6CAAQ;IACR,2CAAO;IACP,qDAAY;AAChB,CAAC,EANW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAMtB;AA0BD,IAAiB,eAAe,CAK/B;AALD,WAAiB,eAAe;IACf,sBAAM,GAAG,QAAQ,CAAC;IAC/B,SAAgB,YAAY,CAAC,OAAwB;;QACjD,OAAO,CAAC,QAAC,OAAO,CAAC,OAAO,0CAAE,UAAU,EAAC;IACzC,CAAC;IAFe,4BAAY,eAE3B;AACL,CAAC,EALgB,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAK/B;AAwDD;IAAA;IAgCA,CAAC;IA9BG;;;;;;OAMG;IACH,mCAAW,GAAX,UAAY,OAAgB;QACxB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACH,oCAAY,GAAZ,UAAa,UAAkB,EAAE,OAAwB,EAAE,iBAAoC;QAC3F,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACH,sCAAc,GAAd,UAAe,UAAkB,EAAE,MAAsB,EAAE,OAAwB,EAAE,iBAAoC;QACrH,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IA/BQ,aAAa;QADzB,sBAAU,EAAE;OACA,aAAa,CAgCzB;IAAD,oBAAC;CAAA;AAhCY,sCAAa;;;;;;;;;;;;;AClH1B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAA+C;AAC/C,6JAOoC;AACpC,yHAAyD;AAEzD;;;;;;;;;;;;;;;;;;GAkBG;AAEH;IAEI,wBAC8C,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAyK3D,qBAAgB,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3D,YAAO,GAAG,CAAC,CAAC;IAzKhB,CAAC;IAmBL,8DAA8D;IAC9D,4BAAG,GAAH,UAAI,OAAe;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC/B,OAAO,IAAI,CAAC,cAAc,CAAC,sCAAW,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAmBD,8DAA8D;IAC9D,6BAAI,GAAJ,UAAK,OAAe;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAChC,OAAO,IAAI,CAAC,cAAc,CAAC,sCAAW,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAmBD,8DAA8D;IAC9D,6BAAI,GAAJ,UAAK,OAAe;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAChC,OAAO,IAAI,CAAC,cAAc,CAAC,sCAAW,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAmBD,8DAA8D;IAC9D,8BAAK,GAAL,UAAM,OAAe;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACjC,OAAO,IAAI,CAAC,cAAc,CAAC,sCAAW,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,8DAA8D;IACpD,uCAAc,GAAxB,UAAyB,IAAiB,EAAE,IAAY,EAAE,IAAY;QAClE,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,IAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAS,IAAI,CAAC,MAAM,CAAC,WAAC,IAAI,cAAO,CAAC,KAAK,QAAQ,EAArB,CAAqB,CAAC,CAAC,CAAC,CAAC;YACrF,IAAM,OAAO,GAAG,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAChE,CAAC,CAAiB,KAAK;gBACvB,CAAC,CAAC,SAAS,CAAC;YAChB,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,QAAE,OAAO,WAAE,IAAI,QAAE,OAAO,WAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,QAAE,IAAI,QAAE,CAAC,CAAC;IACnD,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAoCG;IACG,qCAAY,GAAlB,UAAmB,OAAwB,EAAE,WAAwB;;;;;gBAC3D,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBAC1B,kBAAkB,GAAG,IAAI,sCAAuB,EAAE,CAAC;gBACnD,MAAM,GAAG,UAAC,MAAsB;oBAClC,KAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAC9E,CAAC,CAAC;gBACI,OAAO,GAAG,IAAI,GAAG,CAAS,OAAO,CAAC,OAAO,CAAC,CAAC;gBACjD,IAAI,0CAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;oBACvC,OAAO,CAAC,MAAM,CAAC,0CAAe,CAAC,MAAM,CAAC,CAAC;oBACvC,OAAO,CAAC,GAAG,CAAC,0CAAe,CAAC,MAAM,CAAC,CAAC;iBACvC;gBACK,aAAa,yBAAQ,OAAO,KAAE,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAE,CAAC;gBAC7D,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,aAAa,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBACrF,IAAI,0CAAe,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;oBAC5E,MAAM,CAAC,IAAI,CAAC,eAAK;wBACb,IAAI,KAAK,KAAK,0CAAe,CAAC,MAAM,EAAE;4BAClC,WAAW,EAAE,CAAC;yBACjB;oBACL,CAAC,CAAC,CAAC;iBACN;gBACD,sBAAO;wBACH,EAAE;wBACF,MAAM,EAAE,cAAM,yBAAkB,CAAC,MAAM,EAAE,EAA3B,CAA2B;wBACzC,MAAM;wBACN,MAAM;qBACT,EAAC;;;KACL;IAIS,sCAAa,GAAvB;QACI,OAAU,IAAI,CAAC,gBAAgB,SAAI,EAAE,IAAI,CAAC,OAAS,CAAC;IACxD,CAAC;IAhLQ,cAAc;QAD1B,sBAAU,EAAE;QAIJ,6BAAM,CAAC,wCAAa,CAAC;yCAA4B,wCAAa;OAH1D,cAAc,CAiL1B;IAAD,qBAAC;CAAA;AAjLY,wCAAc;;;;;;;;;;;;;AC/C3B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;AA2BlF;IAGI,gCAAY,OAAsC;QAa/B,aAAQ,GAAa,EAAE,CAAC;QAZvC,IAAI,CAAC,OAAO,cACR,SAAS,EAAE,CAAC,EACZ,WAAW,EAAE,CAAC,EACd,eAAe,EAAE,CAAC,IACf,OAAO,CACb,CAAC;IACN,CAAC;IAED,2CAAU,GAAV,UAAW,KAAY,EAAE,OAAiB,EAAE,KAAc;QACtD,OAAO,CAAC,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;IACpD,CAAC;IAGD,8CAAa,GAAb;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAClD,OAAO,IAAI,CAAC;SACf;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,EAAE,GAAG,IAAI,EAAE;YAClD,mCAAmC;YACnC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,SAAO,IAAI,CAAC,OAAO,CAAC,UAAU,wBAAmB,IAAI,CAAC,OAAO,CAAC,WAAW,2BAAsB,IAAI,CAAC,OAAO,CAAC,eAAe,gDAA6C,CAAC,CAAC;YACpM,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEL,6BAAC;AAAD,CAAC;AAhCY,wDAAsB;;;;;;;;;;;;;ACzCnC;;;;;;;;;;;;;;kFAckF;;;AAIrE,yBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;;;;;;;;;;;;;AClB7D;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,2HAA0B;AAC1B,uIAAgC;AAChC,6JAA2C;;;;;;;;;;;;;AClB3C;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,uDAAuD;AAEvD,yHAAqE;AACrE,yIAAwD;AACxD,qGAA0C;AAoB1C;IACI,kCACa,IAAY,EACZ,aAA8C,EAC9C,kBAA0E;QAA1E,6EAA0E;QAF1E,SAAI,GAAJ,IAAI,CAAQ;QACZ,kBAAa,GAAb,aAAa,CAAiC;QAC9C,uBAAkB,GAAlB,kBAAkB,CAAwD;IACnF,CAAC;IAEL,+CAAY,GAAZ,UAAa,UAA6B;QACtC,IAAM,OAAO,GAAG,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9C,IAAM,KAAK,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QACpC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3C,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IACL,+BAAC;AAAD,CAAC;AAbY,4DAAwB;AAerC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH;IAQI;;;;;OAKG;IACH,6BAAmB,MAAY;QAAZ,WAAM,GAAN,MAAM,CAAM;QAZZ,+BAA0B,GAAG,IAAI,eAAO,EAAQ,CAAC;QACjD,gCAA2B,GAAG,IAAI,eAAO,EAAQ,CAAC;QAYjE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAES,+CAAiB,GAA3B;QAAA,iBAUC;QATG,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,CAAC,iBAAO;YACxC,YAAI,CAAC,wBAAwB,GAAG,OAAO;QAAvC,CAAuC,CAC1C,CAAC;QACF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAU;YAClC,UAAU,CAAC,OAAO,CAAC;gBACf,YAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC;YAAhD,CAAgD,CACnD,CAAC;YACF,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACH,oCAAM,GAAN,UAAO,UAA6B;QAApC,iBAMC;QALG,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YAAE,cAAO;iBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;gBAAP,6BAAO;;YAAK,YAAI,CAAC,SAAS,OAAd,KAAI,YAAW,IAAI,GAAK,IAAI;QAA5B,CAA6B,CAAC,CAAC;QACvE,UAAU,CAAC,cAAc,CAAC,UAAC,IAAI;YAAE,cAAO;iBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;gBAAP,6BAAO;;YAAK,YAAI,CAAC,cAAc,OAAnB,KAAI,YAAgB,IAAI,GAAK,IAAI;QAAjC,CAAkC,CAAC,CAAC;QACjF,UAAU,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,iBAAiB,EAAE,EAAxB,CAAwB,CAAC,CAAC;QACrD,UAAU,CAAC,MAAM,EAAE,CAAC;QACpB,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;;;;;;;OAWG;IACa,uCAAS,GAAzB,UAA0B,MAAc;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;;;;;;;;6BAE5C,IAAI,CAAC,MAAM,EAAX,wBAAW;wBACJ,qBAAM,UAAI,CAAC,MAAM,EAAC,MAAM,CAAC,oBAAI,IAAI,IAAC;4BAAzC,sBAAO,SAAkC,EAAC;4BAE1C,MAAM,IAAI,KAAK,CAAC,iCAA+B,MAAQ,CAAC,CAAC;;;;wBAGvD,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAK,CAAC,CAAC;wBACrC,IAAI,CAAC,YAAY,iCAAa,EAAE;4BAC5B,MAAM,CAAC,CAAC;yBACX;wBACK,MAAM,GAAG,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC;wBACzB,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;wBAC5B,OAAO,CAAC,KAAK,CAAC,aAAW,MAAM,4BAAuB,MAAQ,EAAE,KAAK,CAAC,CAAC;wBACvE,MAAM,CAAC,CAAC;;;;;KAEf;IAED;;;;;OAKG;IACO,4CAAc,GAAxB,UAAyB,MAAc;;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACnD,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,UAAI,CAAC,MAAM,EAAC,MAAM,CAAC,oBAAI,IAAI,GAAE;SAChC;IACL,CAAC;IAED;;;;;;OAMG;IACH,yCAAW,GAAX;QACI,IAAM,MAAM,GAAG,IAAI,KAAK,CAAI,IAAW,EAAE,IAAI,CAAC,CAAC;QAC/C,OAAO,MAAa,CAAC;IACzB,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;OAqBG;IACH,iCAAG,GAAH,UAAI,MAAS,EAAE,CAAc,EAAE,QAAa;QAA5C,iBAqCC;QApCG,IAAI,CAAC,KAAK,WAAW,EAAE;YACnB,OAAO,UAAC,MAAW;gBACf,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACzB,CAAC,CAAC;SACL;QACD,IAAI,CAAC,KAAK,WAAW,EAAE;YACnB,OAAO,cAAM,YAAI,CAAC,MAAM,EAAX,CAAW,CAAC;SAC5B;QACD,IAAI,CAAC,KAAK,qBAAqB,EAAE;YAC7B,OAAO,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;SAChD;QACD,IAAI,CAAC,KAAK,sBAAsB,EAAE;YAC9B,OAAO,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;SACjD;QACD,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACxC,OAAO;YAAC,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YAClB,IAAM,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC5B,IAAM,aAAa,GAAG,IAAI,KAAK,CAAC,cAAY,MAAM,aAAU,CAAC,CAAC;YAC9D,OAAO,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAU;gBACzC,WAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBACxB,IAAI;wBACA,IAAI,QAAQ,EAAE;4BACV,UAAU,CAAC,gBAAgB,OAA3B,UAAU,YAAkB,MAAM,GAAK,IAAI,GAAE;4BAC7C,OAAO,EAAE,CAAC;yBACb;6BAAM;4BACH,IAAM,aAAa,GAAG,UAAU,CAAC,WAAW,OAAtB,UAAU,YAAa,MAAM,GAAK,IAAI,EAAiB,CAAC;4BAC9E,aAAa;iCACR,KAAK,CAAC,UAAC,GAAQ,IAAK,aAAM,CAAC,KAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,EAAjD,CAAiD,CAAC;iCACtE,IAAI,CAAC,UAAC,MAAW,IAAK,cAAO,CAAC,MAAM,CAAC,EAAf,CAAe,CAAC,CAAC;yBAC/C;qBACJ;oBAAC,OAAO,GAAG,EAAE;wBACV,MAAM,CAAC,GAAG,CAAC,CAAC;qBACf;gBACL,CAAC,CAAC;YAdF,CAcE,CACL,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED;;;;;;;;OAQG;IACO,4CAAc,GAAxB,UAAyB,CAAc;QACnC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9E,CAAC;IAES,4CAAc,GAAxB,UAAyB,CAAM;QAC3B,IAAI,oCAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;YACxB,OAAO,IAAI,iCAAa,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAC/B,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CACrD,CAAC;SACL;QACD,OAAO,CAAC,CAAC;IACb,CAAC;IACS,8CAAgB,GAA1B,UAA2B,aAAoB,EAAE,CAAM;QACnD,IAAI,CAAC,YAAY,iCAAa,EAAE;YAC5B,IAAM,aAAa,GAAG,aAAa,CAAC,KAAK,IAAI,EAAE,CAAC;YAChD,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,aAAa,EAAE;gBACnC,SAA2B,CAAC,CAAC,IAAI,EAA/B,KAAK,aAAE,IAAI,YAAE,OAAO,aAAW,CAAC;gBACxC,OAAO,oCAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE;oBACrC,OAAO,EAAE,OAAO,IAAI,aAAa,CAAC,OAAO;oBACzC,IAAI;oBACJ,KAAK,EAAK,aAAa,qBAAgB,KAAO;iBACjD,CAAC,CAAC;aACN;YACD,CAAC,CAAC,KAAK,GAAG,aAAa,CAAC;SAC3B;QACD,OAAO,CAAC,CAAC;IACb,CAAC;IAEL,0BAAC;AAAD,CAAC;AArMY,kDAAmB;;;;;;;;;;;;;ACjGhC;;;;;;;;;;;;;;kFAckF;;;AAElF,SAAgB,SAAS,CAAI,GAAM;IAC/B,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QACjC,OAAO,GAAG,CAAC;KACd;IACD,IAAI,GAAG,YAAY,MAAM,EAAE;QACvB,OAAO,GAAG,CAAC;KACd;IACD,8DAA8D;IAC9D,IAAM,MAAM,GAAQ,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACjD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAC,GAAW;QACjC,8DAA8D;QAC9D,IAAM,IAAI,GAAS,GAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAClC,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;SACjC;aAAM;YACH,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SACtB;IACL,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAClB,CAAC;AAnBD,8BAmBC;AAED,SAAgB,UAAU,CAAI,GAAM;IAChC,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QACjC,OAAO,GAAG,CAAC;KACd;IACD,8DAA8D;IAC9D,IAAM,KAAK,GAAU,CAAC,GAAG,CAAC,CAAC;IAC3B,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACrB,IAAM,cAAc,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QACrC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC9B,KAAK,IAAM,GAAG,IAAI,cAAc,EAAE;YAC9B,IAAI,eAAe,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,EAAE;gBAC3C,IAAM,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;gBACjC,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBACpD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpB;aACJ;SACJ;KACJ;IACD,OAAO,GAAG,CAAC;AACf,CAAC;AAnBD,gCAmBC;AAED,IAAM,eAAe,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AAExD,SAAgB,QAAQ,CAAI,GAAyB;IACjD,2CAA2C;IAC3C,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;AAC7C,CAAC;AAHD,4BAGC;AAED;;GAEG;AACH,SAAgB,OAAO,CAAC,GAAW;IAC/B,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,CAAC;AACvE,CAAC;AAFD,0BAEC;;;;;;;;;;;;;ACtED;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;AAElF,SAAS,EAAE,CAAC,SAAiB,EAAE,QAAgB;IAC3C,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;QAClC,IAAI,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpE,OAAO,IAAI,CAAC;SACf;KACJ;IACD,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;QAChC,OAAO,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;KAC1C;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAEY,iBAAS,GAAG,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACnC,aAAK,GAAG,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAGzC,SAAgB,GAAG,CAAC,OAAe;IAAE,cAAiB;SAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;QAAjB,6BAAiB;;IAClD,OAAO;QACH,iBAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO;QAC3B,iBAAS,CAAC,CAAC,WAAE,IAAI,EAAE,OAAO,GAAK,IAAI,EAAE,CAAC,CAAC,IAAI;KAC9C,CAAC;AACN,CAAC;AALD,kBAKC;AAED,IAAiB,EAAE,CAyBlB;AAzBD,WAAiB,EAAE;IAEf;;OAEG;IACH,IAAY,IAIX;IAJD,WAAY,IAAI;QACZ,2BAAmB;QACnB,uBAAe;QACf,mBAAW;IACf,CAAC,EAJW,IAAI,GAAJ,OAAI,KAAJ,OAAI,QAIf;IAED;;;OAGG;IACH,SAAgB,IAAI;QAChB,IAAI,iBAAS,EAAE;YACX,OAAO,IAAI,CAAC,OAAO,CAAC;SACvB;QACD,IAAI,aAAK,EAAE;YACP,OAAO,IAAI,CAAC,GAAG,CAAC;SACnB;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IARe,OAAI,OAQnB;AAEL,CAAC,EAzBgB,EAAE,GAAF,UAAE,KAAF,UAAE,QAyBlB;;;;;;;;;;;;;AChED;;;;;;;;;;;;;;kFAckF;;;AAElF;;;;;;;;;;;;;;;;GAgBG;AACH;IA2EI;;OAEG;IACH,cACI,GAAW;QAEX,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QACpC,IAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAM,SAAS,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,UAAU,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,IAAI,UAAU,KAAK,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACrG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAE/B,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,GAAG,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACjE,CAAC;IAzFM,YAAO,GAAd,UAAe,OAAe;QAC1B,OAAO,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACI,mBAAc,GAArB,UAAsB,IAAY;QAC9B,wDAAwD;QACxD,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE;YAChG,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;gBAC1C,IAAI,GAAG,MAAI,MAAM,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE,CAAC,SAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC,qBAAqB;aACvF;SACJ;aAAM,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE;YAChE,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;gBAC1C,IAAI,GAAM,MAAM,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE,CAAC,SAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC,qBAAqB;aACtF;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,YAAO,GAAd,UAAe,YAAoB,EAAE,IAAY;QAC7C,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;QACpC,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE5D,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAI,IAAI,MAAG,CAAC,KAAK,CAAC,EAAE;YAC9D,OAAO,YAAY,CAAC,OAAO,CAAI,IAAI,MAAG,EAAE,IAAI,CAAC,CAAC;SACjD;QAED,OAAO,YAAY,CAAC;IACxB,CAAC;IAED;;;;;;OAMG;IACI,cAAS,GAAhB,UAAiB,YAAoB,EAAE,IAAY;QAC/C,IAAI,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YAC9B,IAAM,mBAAmB,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC7D,IAAM,eAAe,GAAG,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACtD,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClF,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,mBAAmB,CAAC,UAAU,CAAC,KAAG,IAAM,CAAC,EAAE;gBACjE,OAAO,mBAAmB,CAAC;aAC9B;SACJ;QACD,OAAO,YAAY,CAAC;IACxB,CAAC;IA+BS,0BAAW,GAArB;QACI,aAAa;QACb,iBAAiB;QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,IAAI,CAAC;SACf;QACD,2BAA2B;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,OAAO,SAAS,CAAC;SACpB;QACD,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACd,oBAAoB;YACpB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACnC;QACD,yBAAyB;QACzB,oBAAoB;QACpB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IACpD,CAAC;IAKD,sBAAI,qBAAG;QAHP;;WAEG;aACH;YACI,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;gBACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;aACjC;YACD,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAQD,sBAAI,wBAAM;QANV;;;;;WAKG;aACH;YACI,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACvE,CAAC;;;OAAA;IAES,yBAAU,GAApB;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACpD,IAAI,UAAU,KAAK,SAAS,EAAE;gBAC1B,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;aACvD;SACJ;QACD,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,mBAAI,GAAJ;QAAK,eAAkB;aAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;YAAlB,0BAAkB;;QACnB,IAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjE,IAAI,CAAC,YAAY,EAAE;YACf,OAAO,IAAI,CAAC;SACf;QACD,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YACnC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,CAAC;SAC5C;QACD,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,CAAC;IAC9D,CAAC;IAED,uBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED,uBAAQ,GAAR,UAAS,IAAU;QACf,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE;YACvB,OAAO,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACxB,OAAO,SAAS,CAAC;SACpB;QACD,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YAC3B,OAAO,SAAS,CAAC;SACpB;QACD,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACjD,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAED,8BAAe,GAAf,UAAgB,IAAU;QACtB,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,yBAAU,GAAV,UAAW,IAAU;QACjB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,QAAQ,EAAE;YACV,IAAM,WAAW,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACxC,IAAI,WAAW,KAAK,EAAE,EAAE;gBACpB,OAAO,CAAC,CAAC;aACZ;YACD,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;SACnD;QACD,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;IAED;;OAEG;IACH,wBAAS,GAAT;QAAA,iBA0BC;QAzBG,IAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAM,WAAW,GAAa,EAAE,CAAC;QACjC,SAAS,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK;YAC3B,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,GAAG,EAAE;gBACzB,OAAO;aACV;YACD,IAAI,KAAK,KAAK,IAAI,EAAE;gBAChB,IAAI,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;oBACpE,WAAW,CAAC,GAAG,EAAE,CAAC;iBACrB;qBAAM,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE;oBACzB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC1B;aACJ;iBAAM;gBACH,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;QACL,CAAC,CAAC,CAAC;QACH,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;aACxB;iBAAM;gBACH,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;aACxB;SACJ;QACD,OAAO,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvG,CAAC;IA9NM,cAAS,GAAQ,GAAG,CAAC;IA+NhC,WAAC;CAAA;AAhOY,oBAAI;;;;;;;;;;;;;ACjCjB;;;;;;;;;;;;;;kFAckF;;;AAQrE,sBAAc,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;;;;;;;;;;;;;ACtBvD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAA+C;AAC/C,6JAIoC;AACpC,yHAAyD;AACzD,gKAA6D;AAC7D,kIAAmD;AAGnD;IAAA;QAwCY,qBAAgB,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3D,YAAO,GAAG,CAAC,CAAC;IAaxB,CAAC;IAjDS,sCAAY,GAAlB,UAAmB,OAAwB,EAAE,WAAwB;;;;;gBACjE,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;oBAC9B,sBAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,EAAC;iBACjE;gBACK,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBAC1B,kBAAkB,GAAG,IAAI,sCAAuB,EAAE,CAAC;gBACnD,MAAM,GAAG,UAAC,MAAsB;oBAClC,KAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAC9E,CAAC,CAAC;gBACI,OAAO,GAAG,IAAI,GAAG,CAAS,OAAO,CAAC,OAAO,CAAC,CAAC;gBACjD,IAAI,0CAAe,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;oBACvC,OAAO,CAAC,MAAM,CAAC,0CAAe,CAAC,MAAM,CAAC,CAAC;oBACvC,OAAO,CAAC,GAAG,CAAC,0CAAe,CAAC,MAAM,CAAC,CAAC;iBACvC;gBACK,aAAa,yBAAQ,OAAO,KAAE,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAE,CAAC;gBAC7D,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,aAAa,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBACrF,IAAI,0CAAe,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;oBAC5E,MAAM,CAAC,IAAI,CAAC,eAAK;wBACb,IAAI,KAAK,KAAK,0CAAe,CAAC,MAAM,EAAE;4BAClC,WAAW,EAAE,CAAC;yBACjB;oBACL,CAAC,CAAC,CAAC;iBACN;gBACD,sBAAO;wBACH,EAAE;wBACF,MAAM,EAAE,cAAM,yBAAkB,CAAC,MAAM,EAAE,EAA3B,CAA2B;wBACzC,MAAM;wBACN,MAAM;qBACT,EAAC;;;KACL;IACS,wCAAc,GAAxB,UAAyB,OAAwB;QAC7C,IAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC7D,OAAO,QAAQ,KAAK,cAAc,CAAC;IACvC,CAAC;IAIS,uCAAa,GAAvB;QACI,OAAU,IAAI,CAAC,gBAAgB,SAAI,EAAE,IAAI,CAAC,OAAS,CAAC;IACxD,CAAC;IAEK,sCAAY,GAAlB,UAAsB,IAAY,EAAE,UAAkB,EAAE,IAAsB;;;;;4BACzD,qBAAM,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,QAAE,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,CAAC;;wBAAjG,QAAQ,GAAG,SAAsF;;;;wBAE5F,qBAAM,IAAI,EAAE;4BAAnB,sBAAO,SAAY,EAAC;;wBAEpB,QAAQ,CAAC,MAAM,EAAE,CAAC;;;;;;KAEzB;IAnDuB;QAAvB,kBAAM,CAAC,0CAAc,CAAC;;mDAA2C;IAC1C;QAAvB,kBAAM,CAAC,gCAAc,CAAC;kCAAoC,gCAAc;2DAAC;IAHjE,eAAe;QAD3B,sBAAU,EAAE;OACA,eAAe,CAsD3B;IAAD,sBAAC;CAAA;AAtDY,0CAAe;;;;;;;;;;;;;AC3B5B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,mHAAgE;AAChE,oGAAyC;AAOzC;IAcI;QAAA,iBAIC;QAhBkB,UAAK,GAAG,IAAI,GAAG,EAAa,CAAC;QAC7B,YAAO,GAAG,IAAI,GAAG,EAAa,CAAC;QAC/B,eAAU,GAAG,IAAI,GAAG,EAAgC,CAAC;QAErD,uBAAkB,GAAG,IAAI,eAAO,EAAK,CAAC;QAChD,gBAAW,GAAa,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAE5C,yBAAoB,GAAG,IAAI,eAAO,EAAK,CAAC;QAClD,kBAAa,GAAa,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;QAEhD,cAAS,GAAG,IAAI,iCAAoB,EAAE,CAAC;QAGtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAU,CAAC,MAAM,CAAC,cAAM,YAAI,CAAC,KAAK,EAAE,EAAZ,CAAY,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,6CAAO,GAAP;QACI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,2CAAK,GAAL;;;YACI,KAAoB,sBAAI,CAAC,OAAO,CAAC,MAAM,EAAE,6CAAE;gBAAtC,IAAM,KAAK;gBACZ,IAAI;oBACA,KAAK,CAAC,OAAO,EAAE,CAAC;iBACnB;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACpB;aACJ;;;;;;;;;IACL,CAAC;IAED,yCAAG,GAAH,UAAI,IAAO;QACP,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,0CAAI,GAAJ;QACI,gBAAW,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE;IACpC,CAAC;IAED,4CAAM,GAAN;QACI,gBAAW,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;IACtC,CAAC;IAED,yCAAG,GAAH,UAAI,IAAO;QACP,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAIS,+CAAS,GAAnB,UAAoB,GAAW,EAAE,MAAS;QACtC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAClF,IAAM,SAAS,GAAiB;YAC5B,MAAM;YACN,OAAO,EAAE,cAAQ,CAAC;SACrB,CAAC;QACF,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3B,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,2CAAK,GAAf,UAAgB,IAAO;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAES,sDAAgB,GAA1B,UAA2B,GAAW,EAAE,KAAQ;QAAhD,iBAcC;QAbG,IAAM,UAAU,GAAG,IAAI,iCAAoB,EAAE,CAAC;QAC9C,UAAU,CAAC,SAAS,CAAC,cAAM,YAAK,CAAC,OAAO,EAAE,EAAf,CAAe,CAAC,CAAC;QAC5C,IAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,KAAK,CAAC,OAAO,GAAG;YACZ,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,aAAa,EAAE,CAAC;YAChB,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACzB,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC5B,UAAW,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;QACrC,OAAO,UAAU,CAAC;IACtB,CAAC;IAEL,kCAAC;AAAD,CAAC;AApFqB,kEAA2B;AAsFjD;IAAkE,uCAAiC;IAE/F,6BAA+B,OAAoC;QAAnE,YACI,iBAAO,SACV;QAF8B,aAAO,GAAP,OAAO,CAA6B;QAchD,mBAAa,GAAG,IAAI,GAAG,EAA2B,CAAC;;IAZtE,CAAC;IAEK,qCAAO,GAAb,UAAc,IAAO;;;;;;wBACX,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBACvB,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACvC,IAAI,QAAQ,EAAE;4BACV,sBAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAC;yBACxC;wBACc,qBAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC;;wBAA/C,MAAM,GAAG,SAAsC;wBACrD,sBAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,EAAC;;;;KACtC;IAGe,8CAAgB,GAAhC,UAAiC,GAAW,EAAE,IAAO;;;;;;wBAC3C,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBAC7C,IAAI,QAAQ,EAAE;4BACV,sBAAO,QAAQ,EAAC;yBACnB;wBACK,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;wBACnC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;wBAC1B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;;;;wBAEnB,qBAAM,OAAO;;wBAArB,KAAK,GAAG,SAAa;wBAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;wBAC7B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACpC,sBAAO,KAAK,EAAC;;;wBAEb,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;wBACvB,MAAM,GAAC,CAAC;;wBAER,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;;;;;KAEtC;IAEL,0BAAC;AAAD,CAAC,CAtCiE,2BAA2B,GAsC5F;AAtCY,kDAAmB;AAwChC;IAAsE,2CAAiC;IAEnG,iCAA+B,OAAsB;QAArD,YACI,iBAAO,SACV;QAF8B,aAAO,GAAP,OAAO,CAAe;;IAErD,CAAC;IAED,yCAAO,GAAP,UAAQ,IAAO;QACX,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAES,kDAAgB,GAA1B,UAA2B,GAAW,EAAE,IAAO;QAC3C,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,QAAQ,EAAE;YACV,OAAO,QAAQ,CAAC;SACnB;QACD,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,OAAO,KAAK,CAAC;IACjB,CAAC;IAEL,8BAAC;AAAD,CAAC,CAxBqE,2BAA2B,GAwBhG;AAxBY,0DAAuB;;;;;;;;;;;;;ACtJpC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAAsD;AAEtD,sGAAgC;AAChC,oJAA+D;AAC/D,oGAAyC;AAIzC,wIAAuD;AACvD,uGAAoD;AACpD,gHAAiE;AAuFjE,IAAiB,QAAQ,CAmDxB;AAnDD,WAAiB,QAAQ;IAOrB,SAAsB,IAAI,CAAC,QAAkB,EAAE,OAAoB,EAAE,KAAyB;;;;;;wBAC1F,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;4BACxB,sBAAO;yBACV;wBACG,qBAAM,qBAAqB,CAAC,QAAQ,EAAE,OAAO,CAAC;;wBAAlD,IAAI,SAA8C,EAAE;4BAChD,sBAAO;yBACV;wBACD,IAAI,KAAK,IAAI,KAAK,CAAC,uBAAuB,EAAE;4BACxC,sBAAO;yBACV;6BACG,QAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,IAAI,QAAQ,CAAC,UAAU,GAA1D,wBAA0D;wBAC1D,qBAAM,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;;wBAA3D,SAA2D,CAAC;;;wBAEtD,OAAO,GAAG,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,iBAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;wBAC3G,qBAAM,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;;wBAArD,SAAqD,CAAC;;;;;;KAE7D;IAhBqB,aAAI,OAgBzB;IACD,SAAsB,qBAAqB,CAAC,QAAkB,EAAE,OAAoB;;;;;;wBAChF,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,kBAAkB,IAAI,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE;4BAC1F,sBAAO,KAAK,EAAC;yBAChB;;;;wBAEG,qBAAM,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;;wBAAnE,SAAmE,CAAC;wBACpE,sBAAO,IAAI,EAAC;;;wBAEZ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAC,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE;4BACjE,OAAO,CAAC,KAAK,CAAC,6CAA2C,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAI,EAAE,GAAC,CAAC,CAAC;yBAC5F;wBACD,sBAAO,KAAK,EAAC;;;;;KAEpB;IAbqB,8BAAqB,wBAa1C;IACD,SAAgB,iBAAiB,CAAC,QAAkB,EAAE,EAAuC;;YAArC,aAAa,qBAAE,OAAO;QAC1E,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,aAAa,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE;YACvE,OAAO,IAAI,CAAC;SACf;QACD,IAAI,oBAAoB,GAAG,CAAC,CAAC;;YAC7B,KAAqB,gCAAO,sFAAE;gBAAzB,IAAM,MAAM;gBACb,oBAAoB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;gBACtD,IAAI,oBAAoB,GAAG,aAAa,EAAE;oBACtC,OAAO,IAAI,CAAC;iBACf;aACJ;;;;;;;;;QACD,OAAO,oBAAoB,GAAG,aAAa,CAAC;IAChD,CAAC;IAZe,0BAAiB,oBAYhC;AACL,CAAC,EAnDgB,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAmDxB;AAED,IAAiB,aAAa,CAG7B;AAHD,WAAiB,aAAa;IACb,sBAAQ,GAAG,oCAAgB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,UAAC,GAA2C,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC;IAClG,uBAAS,GAAG,oCAAgB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,UAAC,GAA2C,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC;AACpH,CAAC,EAHgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAG7B;AAEY,wBAAgB,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAQ9C,wBAAgB,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAI3D;IAEI,iCAEuB,iBAAyD;QAAzD,sBAAiB,GAAjB,iBAAiB,CAAwC;IAC5E,CAAC;IAEL;;OAEG;IACG,qCAAG,GAAT,UAAU,GAAQ;;;;;;;wBACR,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;;;;wBACrC,gCAAS;;;;wBAArB,QAAQ;;;;wBAEJ,qBAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;4BAAlC,sBAAO,SAA2B,EAAC;;;;;;;;;;;;;;;;;;6BAK3C,sBAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,8BAA4B,GAAG,CAAC,QAAQ,EAAE,yBAAsB,CAAC,CAAC,EAAC;;;;KACtG;IApBQ,uBAAuB;QADnC,sBAAU,EAAE;QAIJ,6BAAM,CAAC,4CAAoB,CAAC,GAAE,4BAAK,CAAC,wBAAgB,CAAC;;OAHjD,uBAAuB,CAsBnC;IAAD,8BAAC;CAAA;AAtBY,0DAAuB;AAwBpC;IAGI,yBAAqB,GAAQ;QAAR,QAAG,GAAH,GAAG,CAAK;QAFrB,aAAQ,GAAW,EAAE,CAAC;QAgBX,+BAA0B,GAAG,IAAI,eAAO,EAAQ,CAAC;QAC3D,wBAAmB,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;IAdrE,CAAC;IAED,iCAAO,GAAP,cAAkB,CAAC;IAEb,sCAAY,GAAlB;;;gBACI,sBAAO,IAAI,CAAC,QAAQ,EAAC;;;KACxB;IAEK,sCAAY,GAAlB,UAAmB,QAAgB;;;gBAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;;;;KAChC;IAIS,+CAAqB,GAA/B;QACI,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;IACL,sBAAC;AAAD,CAAC;AAtBY,0CAAe;AAuB5B;IACI,kCAAsB,SAAqC;QAArC,cAAS,GAAT,SAAS,CAA4B;IAAI,CAAC;IAEhE,sBAAI,yCAAG;aAAP;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC;QACrC,CAAC;;;OAAA;IAED,sBAAI,yDAAmB;aAAvB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC;QACrD,CAAC;;;OAAA;IAED,0CAAO,GAAP;QACI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,+CAAY,GAAZ;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;IAChD,CAAC;IAED,+CAAY,GAAZ,UAAa,QAAgB;QACzB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IACL,+BAAC;AAAD,CAAC;AAtBY,4DAAwB;AAyBrC;IAAA;QAEuB,cAAS,GAAG,IAAI,mCAAuB,CAA0B,aAAG,IAAI,WAAI,eAAe,CAAC,IAAI,aAAG,CAAC,GAAG,CAAC,CAAC,EAAjC,CAAiC,CAAC,CAAC;IAkClI,CAAC;IAhCG,+BAAG,GAAH,UAAI,GAAQ,EAAE,QAAgB;QAC1B,IAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;YACjC,MAAM,IAAI,KAAK,CAAC,qDAAmD,WAAW,MAAG,CAAC,CAAC;SACtF;QACD,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC3C,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED,kCAAM,GAAN,UAAO,GAAQ,EAAE,QAAgB;QAC7B,IAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,mDAAiD,WAAW,MAAG,CAAC,CAAC;SACpF;QACD,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED,mCAAO,GAAP,UAAQ,GAAQ;QACZ,IAAM,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,gBAAc,SAAS,+BAA4B,CAAC,CAAC;SACxE;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAES,mCAAO,GAAjB,UAAkB,GAAW;QACzB,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC9C,OAAO,IAAI,wBAAwB,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IAnCQ,iBAAiB;QAD7B,sBAAU,EAAE;OACA,iBAAiB,CAoC7B;IAAD,wBAAC;CAAA;AApCY,8CAAiB;AAsCjB,mBAAW,GAAG,SAAS,CAAC;AAErC;;GAEG;AACH;IACI,8BAAqB,GAAQ;QAAR,QAAG,GAAH,GAAG,CAAK;IAAI,CAAC;IAE5B,2CAAY,GAAlB,UAAmB,OAAwD;;;gBACvE,sBAAO,IAAI,CAAC,GAAG,CAAC,KAAK,EAAC;;;KACzB;IACD,sCAAO,GAAP,cAAkB,CAAC;IACvB,2BAAC;AAAD,CAAC;AAPY,oDAAoB;AASjC;;GAEG;AAEH;IAAA;IAOA,CAAC;IANG,8CAAO,GAAP,UAAQ,GAAQ;QACZ,IAAI,GAAG,CAAC,MAAM,KAAK,mBAAW,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,yBAAuB,mBAAW,sBAAiB,GAAG,MAAG,CAAC,CAAC;SAC9E;QACD,OAAO,IAAI,oBAAoB,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IANQ,4BAA4B;QADxC,sBAAU,EAAE;OACA,4BAA4B,CAOxC;IAAD,mCAAC;CAAA;AAPY,oEAA4B;;;;;;;;;;;;;ACvTzC;;;;;;;;;;;;;;kFAckF;;;;;;;;;AAElF,qGAAuC;AACvC,4GAAiD;AASjD;IAAA;QAIuB,8BAAyB,GAAG,IAAI,eAAO,EAAO,CAAC;QACzD,uBAAkB,GAAe,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;IAWnF,CAAC;IATG,sBAAI,uCAAS;aAAb;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;aAED,UAAc,SAA6B;YACvC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;YAClC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC/D,CAAC;;;OALA;IATQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CAgB5B;IAAD,uBAAC;CAAA;AAhBY,4CAAgB;;;;;;;;;;;;;AC1B7B;;;;;;;;;;;;;;kFAckF;;;AAElF,8FAAwB;AAMxB,IAAiB,YAAY,CA2B5B;AA3BD,WAAiB,YAAY;IAEzB,SAAgB,EAAE,CAAC,GAAuB;QACtC,8DAA8D;QAC9D,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,IAAU,GAAI,CAAC,KAAK,CAAC,YAAY,aAAG,CAAC;IACzF,CAAC;IAHe,eAAE,KAGjB;IAED,SAAgB,MAAM,CAAC,SAA6B;QAChD,IAAI,EAAE,CAAC,SAAS,CAAC,EAAE;YACf,OAAO,SAAS,CAAC,GAAG,CAAC;SACxB;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;YAC9C,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;SAC3B;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IARe,mBAAM,SAQrB;IAED,SAAgB,OAAO,CAAC,SAA6B;QACjD,IAAI,EAAE,CAAC,SAAS,CAAC,EAAE;YACf,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC1B;QACD,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YAC1B,OAAO,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,GAAG,EAAL,CAAK,CAAC,CAAC;SAC/C;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IARe,oBAAO,UAQtB;AAEL,CAAC,EA3BgB,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QA2B5B;;;;;;;;;;;;;ACjDD;;;;;;;;;;;;;;kFAckF;AAClF;;;gGAGgG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhG,0HAA0H;AAE1H,4BAA4B;AAC5B,oCAAoC;AACpC,qDAAqD;AACrD,uDAAuD;AAEvD,mHAAgE;AA8DhE,IAAiB,QAAQ,CAwBxB;AAxBD,WAAiB,QAAQ;IACrB,SAAgB,UAAU,CAAC,KAAa;QACpC,IAAI,IAAI,GAAG,KAAK,CAAC;QAEjB,OAAO;YACH,IAAI,EAAJ;gBACI,IAAI,CAAC,IAAI,EAAE;oBACP,IAAI,GAAG,IAAI,CAAC;oBAEZ,OAAO,KAAK,CAAC;iBAChB;gBAED,OAAO,IAAI,CAAC;YAChB,CAAC;SACJ,CAAC;IACN,CAAC;IAde,mBAAU,aAczB;IACD,SAAgB,QAAQ,CAAC,QAA0B;QAC/C,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,KAAoB,CAAC;QACzB,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC;SACnB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAPe,iBAAQ,WAOvB;AACL,CAAC,EAxBgB,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAwBxB;AAgED,SAAgB,gBAAgB,CAAI,GAAY;IAC5C,IAAM,SAAS,GAAG,GAAwB,CAAC;IAE3C,OAAO,SAAS,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,YAAE,IAAI,cAAO,EAAE,KAAK,UAAU,EAAxB,CAAwB,CAAC,CAAC;AACnI,CAAC;AAJD,4CAIC;AAED,SAAgB,wBAAwB,CAAI,GAAY;IACpD,IAAM,SAAS,GAAG,GAAgC,CAAC;IAEnD,OAAO,SAAS,IAAI,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,OAAO,SAAS,CAAC,KAAK,KAAK,SAAS,CAAC;AACtI,CAAC;AAJD,4DAIC;AAmBD,SAAgB,kBAAkB,CAAI,OAAmB,EAAE,OAAgC;IACvF,OAAO,IAAI,mBAAmB,CAAI,OAAO,CAAC,CAAC;AAC/C,CAAC;AAFD,gDAEC;AAYD;IAqBI,6BAAoB,OAAmB,EAAU,OAAgC;QAA7D,YAAO,GAAP,OAAO,CAAY;QAAU,YAAO,GAAP,OAAO,CAAyB;QAnBhE,UAAK,GAAG;YACrB,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,KAAK;SACnB,CAAC;QAEe,WAAM,GAAG;YACtB,IAAI,EAAE,EAAS;YACf,KAAK,EAAE,EAAa;SACvB,CAAC;QAEe,cAAS,GAAG;YACzB,IAAI,EAAE,EAA2B;YACjC,KAAK,EAAE,EAAgC;YACvC,GAAG,EAAE,EAAoB;SAC5B,CAAC;QAEe,yBAAoB,GAAe,EAAE,CAAC;IAE8B,CAAC;IAEtF,mCAAK,GAAL;QACI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,OAAO;SACV;QAED,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,oCAAM,GAAN;QACI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,OAAO;SACV;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;YAE1B,uBAAuB;YACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;IACL,CAAC;IAED,mCAAK,GAAL,UAAM,IAAO;QAAb,iBAmBC;;QAlBG,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,OAAO;SACV;QAED,+CAA+C;QAC/C,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,CAAC,EAAd,CAAc,CAAC,CAAC;SAC3D;QAED,6CAA6C;aACxC;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE5B,uEAAuE;YACvE,IAAI,cAAO,IAAI,CAAC,OAAO,0CAAE,aAAa,MAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;gBACzG,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,YAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAvC,CAAuC,CAAC,CAAC;aAC1E;SACJ;IACL,CAAC;IAED,mCAAK,GAAL,UAAM,KAAY;QACd,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,OAAO;SACV;QAED,gDAAgD;QAChD,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAQ,IAAI,eAAQ,CAAC,KAAK,CAAC,EAAf,CAAe,CAAC,CAAC;SAC7D;QAED,+CAA+C;aAC1C;YACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC;IACL,CAAC;IAED,iCAAG,GAAH,UAAI,MAAkB;QAClB,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,OAAO;SACV;QAED,qCAAqC;QACrC,IAAI,MAAM,YAAY,KAAK,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACtB;aAAM,IAAI,MAAM,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACtB;QAED,uCAAuC;QACvC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAQ,IAAI,eAAQ,EAAE,EAAV,CAAU,CAAC,CAAC;YAEnD,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;QAED,kCAAkC;aAC7B;YACD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;SAC3B;IACL,CAAC;IAKD,gCAAE,GAAF,UAAG,KAA+B,EAAE,QAA8B;QAC9D,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,OAAO;SACV;QAED,QAAQ,KAAK,EAAE;YACX,KAAK,MAAM;gBACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEnC,uDAAuD;gBACvD,uDAAuD;gBACvD,IAAI,CAAC,MAAM,EAAE,CAAC;gBAEd,MAAM;YAEV,KAAK,KAAK;gBACN,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAElC,8CAA8C;gBAC9C,uCAAuC;gBACvC,EAAE;gBACF,gCAAgC;gBAChC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;oBACtC,IAAI,CAAC,OAAO,EAAE,CAAC;iBAClB;gBAED,MAAM;YAEV,KAAK,OAAO;gBACR,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEpC,mDAAmD;gBACnD,sDAAsD;gBACtD,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;oBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACrB;gBAED,MAAM;SACb;IACL,CAAC;IAED,4CAAc,GAAd,UAAe,KAAa,EAAE,QAAkB;QAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,OAAO;SACV;QAED,IAAI,SAAS,GAA0B,SAAS,CAAC;QAEjD,QAAQ,KAAK,EAAE;YACX,KAAK,MAAM;gBACP,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAChC,MAAM;YAEV,KAAK,KAAK;gBACN,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;gBAC/B,MAAM;YAEV,KAAK,OAAO;gBACR,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBACjC,MAAM;SACb;QAED,IAAI,SAAS,EAAE;YACX,IAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC1C,IAAI,KAAK,IAAI,CAAC,EAAE;gBACZ,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC9B;SACJ;IACL,CAAC;IAEO,sCAAQ,GAAhB;QACI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAM,gBAAc,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAQ,IAAI,eAAQ,CAAC,gBAAc,CAAC,EAAxB,CAAwB,CAAC,CAAC;YAElE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAE5B,wDAAwD;YACxD,IAAM,oBAAoB,YAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAC5D,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC;YACrC,oBAAoB,CAAC,OAAO,CAAC,6BAAmB,IAAI,0BAAmB,EAAE,EAArB,CAAqB,CAAC,CAAC;SAC9E;IACL,CAAC;IAEO,wCAAU,GAAlB;;QACI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oCACtB,KAAK;gBACZ,OAAK,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAQ,IAAI,eAAQ,CAAC,KAAK,CAAC,EAAf,CAAe,CAAC,CAAC;;;;gBAD9D,KAAoB,sBAAI,CAAC,MAAM,CAAC,KAAK;oBAAhC,IAAM,KAAK;4BAAL,KAAK;iBAEf;;;;;;;;;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;SAChC;IACL,CAAC;IAEO,qCAAO,GAAf;QACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAQ,IAAI,eAAQ,EAAE,EAAV,CAAU,CAAC,CAAC;YAEnD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;SACxC;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,qCAAO,GAAP;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;YAExB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YAE7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;YAE9B,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC;SACxC;IACL,CAAC;IACL,0BAAC;AAAD,CAAC;AAED;;GAEG;AACH,SAAgB,eAAe,CAAI,QAAqB,EAAE,OAAmB;IACzE,IAAM,MAAM,GAAQ,EAAE,CAAC;IAEvB,IAAI,KAAe,CAAC;IACpB,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE;QACvC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtB;IAED,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,CAAC;AATD,0CASC;AAED;;;;GAIG;AACH,SAAgB,wBAAwB,CAAI,QAAqB,EAAE,OAAmB,EAAE,SAAiB;IACrG,IAAM,MAAM,GAAQ,EAAE,CAAC;IAEvB,IAAI,KAAK,GAAyB,SAAS,CAAC;IAC5C,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,SAAS,EAAE;QACpE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtB;IAED,4DAA4D;IAC5D,+CAA+C;IAC/C,IAAI,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACrC,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;KAC1B;IAED,sEAAsE;IACtE,gEAAgE;IAChE,gEAAgE;IAChE,2BAA2B;IAC3B,OAAO;QACH,IAAI,EAAE;YAEF,sCAAsC;YACtC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,OAAO,MAAM,CAAC,KAAK,EAAG,CAAC;aAC1B;YAED,4CAA4C;YAC5C,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAC9B,IAAM,aAAa,GAAG,KAAK,CAAC;gBAE5B,6DAA6D;gBAC7D,0DAA0D;gBAC1D,KAAK,GAAG,SAAS,CAAC;gBAElB,OAAO,aAAa,CAAC;aACxB;YAED,wCAAwC;YACxC,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;KACJ,CAAC;AACN,CAAC;AAzCD,4DAyCC;AAED;;;;GAIG;AACH,SAAgB,YAAY,CAAI,QAAqB,EAAE,OAAmB,EAAE,SAAiB;IACzF,IAAM,MAAM,GAAQ,EAAE,CAAC;IAEvB,IAAI,KAAK,GAAyB,SAAS,CAAC;IAC5C,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,SAAS,EAAE;QACpE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtB;IAED,4DAA4D;IAC5D,+CAA+C;IAC/C,IAAI,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACrC,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;KAC1B;IAED,sEAAsE;IACtE,gEAAgE;IAChE,gEAAgE;IAChE,2BAA2B;IAC3B,OAAO;QACH,IAAI,EAAE;YAEF,sCAAsC;YACtC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,OAAO,MAAM,CAAC,KAAK,EAAG,CAAC;aAC1B;YAED,4CAA4C;YAC5C,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAC9B,IAAM,aAAa,GAAG,KAAK,CAAC;gBAE5B,6DAA6D;gBAC7D,0DAA0D;gBAC1D,KAAK,GAAG,SAAS,CAAC;gBAElB,OAAO,aAAa,CAAC;aACxB;YAED,wCAAwC;YACxC,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;KACJ,CAAC;AACN,CAAC;AAzCD,oCAyCC;AAED;;GAEG;AACH,SAAgB,aAAa,CAAI,MAAyB,EAAE,OAAmB;IAC3E,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAC/B,IAAM,MAAM,GAAQ,EAAE,CAAC;QAEvB,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,cAAI,IAAI,aAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;QAC7C,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,eAAK,IAAI,aAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;QAC3C,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,cAAM,cAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACP,CAAC;AARD,sCAQC;AAED;;;;GAIG;AACH,SAAgB,UAAU,CAAI,MAAyB,EAAE,SAAiB;IACtE,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAC/B,IAAM,eAAe,GAAG,IAAI,iCAAoB,EAAE,CAAC;QAEnD,gBAAgB;QAChB,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,IAAM,YAAY,GAAG,UAAC,KAAQ;YAE1B,gBAAgB;YAChB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEnB,+CAA+C;YAC/C,IAAI,MAAM,CAAC,MAAM,GAAG,SAAS,EAAE;gBAE3B,gDAAgD;gBAChD,oDAAoD;gBACpD,eAAe,CAAC,OAAO,EAAE,CAAC;gBAC1B,MAAM,CAAC,KAAK,EAAE,CAAC;gBAEf,OAAO,OAAO,CAAC,EAAE,MAAM,UAAE,MAAM,UAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;aACpD;QACL,CAAC,CAAC;QAEF,eAAe,CAAC,IAAI,CAAC,uBAAU,CAAC,MAAM,CAAC,cAAM,aAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,CAAC,EAA3C,CAA2C,CAAC,CAAC,CAAC;QAC3F,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAEhC,iBAAiB;QACjB,IAAM,aAAa,GAAG,UAAC,KAAY,IAAK,aAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC;QAEtD,eAAe,CAAC,IAAI,CAAC,uBAAU,CAAC,MAAM,CAAC,cAAM,aAAM,CAAC,cAAc,CAAC,OAAO,EAAE,aAAa,CAAC,EAA7C,CAA6C,CAAC,CAAC,CAAC;QAC7F,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QAElC,IAAM,WAAW,GAAG,cAAM,cAAO,CAAC,EAAE,MAAM,UAAE,MAAM,UAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAxC,CAAwC,CAAC;QAEnE,eAAe,CAAC,IAAI,CAAC,uBAAU,CAAC,MAAM,CAAC,cAAM,aAAM,CAAC,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,EAAzC,CAAyC,CAAC,CAAC,CAAC;QACzF,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;AACP,CAAC;AArCD,gCAqCC;AAED;;;;GAIG;AACH,SAAgB,sBAAsB,CAAI,MAAyB,EAAE,OAAmB,EAAE,SAAiB;IACvG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAC/B,IAAM,MAAM,GAAQ,EAAE,CAAC;QAEvB,IAAI,aAAa,GAAmC,SAAS,CAAC;QAE9D,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,cAAI;YAElB,qDAAqD;YACrD,mDAAmD;YACnD,mBAAmB;YACnB,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC/C,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;gBAC5C,OAAO,MAAM,CAAC,MAAM,EAAE;oBAClB,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAG,CAAC,CAAC;iBACxC;gBAED,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAE1B,OAAO,OAAO,CAAC,aAAa,CAAC,CAAC;aACjC;YAED,IAAI,aAAa,EAAE;gBACf,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC7B;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACrB;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,eAAK;YACpB,IAAI,aAAa,EAAE;gBACf,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC9B;iBAAM;gBACH,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;aACxB;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;YACb,IAAI,aAAa,EAAE;gBACf,OAAO,MAAM,CAAC,MAAM,EAAE;oBAClB,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAG,CAAC,CAAC;iBACxC;gBAED,aAAa,CAAC,GAAG,EAAE,CAAC;aACvB;iBAAM;gBACH,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAjDD,wDAiDC;AAED;;GAEG;AACH,SAAgB,QAAQ,CAAI,CAAI,EAAE,OAAmB;IACjD,IAAM,MAAM,GAAG,kBAAkB,CAAI,OAAO,CAAC,CAAC;IAE9C,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEd,OAAO,MAAM,CAAC;AAClB,CAAC;AAND,4BAMC;AAED;;GAEG;AACH,SAAgB,UAAU,CAAI,CAAI;IAC9B,IAAI,QAAQ,GAAG,KAAK,CAAC;IAErB,OAAO;QACH,IAAI,EAAE;YACF,IAAI,QAAQ,EAAE;gBACV,OAAO,IAAI,CAAC;aACf;YAED,QAAQ,GAAG,IAAI,CAAC;YAEhB,OAAO,CAAC,CAAC;QACb,CAAC;KACJ,CAAC;AACN,CAAC;AAdD,gCAcC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAwB,MAAsC,EAAE,WAAgD,EAAE,OAA6B;IACpK,IAAM,MAAM,GAAG,kBAAkB,CAAc,OAAO,CAAC,CAAC;IAExD,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,cAAI,IAAI,aAAM,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;IAChE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,cAAM,aAAM,CAAC,GAAG,EAAE,EAAZ,CAAY,CAAC,CAAC;IACrC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,eAAK,IAAI,aAAM,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAlE,CAAkE,CAAC,CAAC;IAEhG,OAAO,MAAM,CAAC;AAClB,CAAC;AARD,8BAQC;;;;;;;;;;;;;AC7sBD;;;;;;;;;;;;;;kFAckF;AAClF;;;gGAGgG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMhG;;GAEG;AACH,SAAgB,QAAQ,CAAC,QAAgB,EAAE,MAAc;IACrD,IAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC7C,IAAI,IAAI,GAAG,CAAC,EAAE;QACV,OAAO,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;KAClD;SAAM,IAAI,IAAI,KAAK,CAAC,EAAE;QACnB,OAAO,QAAQ,KAAK,MAAM,CAAC;KAC9B;SAAM;QACH,OAAO,KAAK,CAAC;KAChB;AACL,CAAC;AATD,4BASC;AACD,SAAgB,kBAAkB,CAAC,IAAY;IAC3C,OAAO,IAAI,cAAc,IAAI,IAAI,eAAc,CAAC;AACpD,CAAC;AAFD,gDAEC;AAED,SAAgB,kBAAkB,CAAC,IAAY;IAC3C,OAAO,IAAI,cAAc,IAAI,IAAI,cAAc,CAAC;AACpD,CAAC;AAFD,gDAEC;AAED,SAAS,aAAa,CAAC,IAAY;IAC/B,OAAO,kBAAkB,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAChE,CAAC;AACD,SAAgB,gBAAgB,CAAC,CAAS,EAAE,CAAS;IACjD,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAE9B,IAAI,IAAI,KAAK,IAAI,EAAE;QACf,OAAO,KAAK,CAAC;KAChB;IAED,OAAO,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpC,CAAC;AATD,4CASC;AAED,SAAS,kBAAkB,CAAC,CAAS,EAAE,CAAS,EAAE,MAAiB;IAAjB,kCAAS,CAAC,CAAC,MAAM;IAC/D,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;QAChD,OAAO,KAAK,CAAC;KAChB;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAE9B,IAAI,KAAK,KAAK,KAAK,EAAE;YACjB,SAAS;SACZ;QAED,UAAU;QACV,IAAI,aAAa,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;YAC9C,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;YACrC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,EAAE,EAAE;gBAC3B,OAAO,KAAK,CAAC;aAChB;SACJ;QAED,qBAAqB;QACrB,oCAAoC;aAC/B;YACD,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,EAAE;gBACvF,OAAO,KAAK,CAAC;aAChB;SACJ;KACJ;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;GAEG;AACH,SAAgB,kBAAkB,CAAC,CAAS,EAAE,CAAS;IAEnD,IAAI,CAAS,CAAC;IACd,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;IAEzC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QACtB,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;YACrC,OAAO,CAAC,CAAC;SACZ;KACJ;IAED,OAAO,GAAG,CAAC;AACf,CAAC;AAZD,gDAYC;AAED;;GAEG;AACH,SAAgB,sBAAsB,CAAC,KAAa;IAChD,OAAO,KAAK,CAAC,OAAO,CAAC,qCAAqC,EAAE,MAAM,CAAC,CAAC;AACxE,CAAC;AAFD,wDAEC;AAED,SAAgB,oBAAoB,CAAC,GAAW,EAAE,SAAiB;IAC/D,IAAM,eAAe,GAAG,SAAS,CAAC,MAAM,CAAC;IACzC,IAAI,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE;QAC/B,OAAO,KAAK,CAAC;KAChB;IAED,OAAO,kBAAkB,CAAC,GAAG,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;AAC/D,CAAC;AAPD,oDAOC;AAED,SAAiB,KAAK,CAAC,CAAS,EAAE,QAAgB;;;;;gBAC1C,KAAK,GAAG,CAAC,CAAC;;;qBACP,MAAK,GAAG,CAAC,CAAC,MAAM;gBACf,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACrC,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;oBACZ,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC;iBAClB;gBAED,qBAAM,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC;;gBAA7B,SAA6B,CAAC;gBAC9B,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;;;;;CAErC;AAXD,sBAWC;AAED,SAAgB,oBAAoB,CAAC,KAAa;IAC9C,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC7D,CAAC;AAFD,oDAEC;AAED,SAAgB,sBAAsB,CAAC,KAAa;IAChD,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC7D,CAAC;AAFD,wDAEC;AAED,SAAgB,OAAO,CAAC,CAAS,EAAE,CAAS;IACxC,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,OAAO,CAAC,CAAC,CAAC;KACb;SAAM,IAAI,CAAC,GAAG,CAAC,EAAE;QACd,OAAO,CAAC,CAAC;KACZ;SAAM;QACH,OAAO,CAAC,CAAC;KACZ;AACL,CAAC;AARD,0BAQC;AAED,SAAgB,gBAAgB,CAAC,CAAS,EAAE,CAAS,EAAE,MAAkB,EAAE,IAAuB,EAAE,MAAkB,EAAE,IAAuB;IAAxF,mCAAkB;IAAE,8BAAe,CAAC,CAAC,MAAM;IAAE,mCAAkB;IAAE,8BAAe,CAAC,CAAC,MAAM;IAC3I,OAAO,MAAM,GAAG,IAAI,IAAI,MAAM,GAAG,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE;QACvD,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACnC,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACnC,IAAI,KAAK,GAAG,KAAK,EAAE;YACf,OAAO,CAAC,CAAC,CAAC;SACb;aAAM,IAAI,KAAK,GAAG,KAAK,EAAE;YACtB,OAAO,CAAC,CAAC;SACZ;KACJ;IACD,IAAM,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC;IAC3B,IAAM,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC;IAC3B,IAAI,IAAI,GAAG,IAAI,EAAE;QACb,OAAO,CAAC,CAAC,CAAC;KACb;SAAM,IAAI,IAAI,GAAG,IAAI,EAAE;QACpB,OAAO,CAAC,CAAC;KACZ;IACD,OAAO,CAAC,CAAC;AACb,CAAC;AAlBD,4CAkBC;AAED,SAAgB,iBAAiB,CAAC,CAAS,EAAE,CAAS;IAClD,OAAO,0BAA0B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AACtE,CAAC;AAFD,8CAEC;AAED,SAAgB,0BAA0B,CAAC,CAAS,EAAE,CAAS,EAAE,MAAkB,EAAE,IAAuB,EAAE,MAAkB,EAAE,IAAuB;IAAxF,mCAAkB;IAAE,8BAAe,CAAC,CAAC,MAAM;IAAE,mCAAkB;IAAE,8BAAe,CAAC,CAAC,MAAM;IAErJ,OAAO,MAAM,GAAG,IAAI,IAAI,MAAM,GAAG,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE;QAEvD,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACnC,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEnC,IAAI,KAAK,KAAK,KAAK,EAAE;YACjB,QAAQ;YACR,SAAS;SACZ;QAED,IAAM,IAAI,GAAG,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,IAAI,KAAK,EAAE,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE,EAAE,oCAAoC;YAChF,SAAS;SAEZ;aAAM,IAAI,IAAI,KAAK,CAAC,EAAE,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE,EAAG,oCAAoC;YACzF,SAAS;SACZ;QAED,IAAI,kBAAkB,CAAC,KAAK,CAAC,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE;YACxD,EAAE;YACF,OAAO,IAAI,CAAC;SAEf;aAAM;YACH,OAAO,gBAAgB,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;SACzF;KACJ;IAED,IAAM,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC;IAC3B,IAAM,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC;IAE3B,IAAI,IAAI,GAAG,IAAI,EAAE;QACb,OAAO,CAAC,CAAC,CAAC;KACb;SAAM,IAAI,IAAI,GAAG,IAAI,EAAE;QACpB,OAAO,CAAC,CAAC;KACZ;IAED,OAAO,CAAC,CAAC;AACb,CAAC;AAvCD,gEAuCC;;;;;;;;;;;;;AC3ND;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBlF,IAAiB,cAAc,CAmC9B;AAnCD,WAAiB,cAAc;IAK3B,SAAsB,gBAAgB,CAAI,QAAqC,EAAE,WAA2B;;;;;;wBACxG,IAAI,QAAQ,YAAY,KAAK,EAAE;4BAC3B,sBAAO,OAAO,CAAC,GAAG,CACd,QAAQ,CAAC,GAAG,CAAC,WAAC,IAAI,uBAAgB,CAAC,CAAC,EAAE,WAAW,CAAC,EAAhC,CAAgC,CAAC,CACtD,EAAC;yBACL;wBACa,qBAAM,QAAQ;;wBAAtB,KAAK,GAAG,SAAc;wBACX,qBAAM,WAAW,CAAC,KAAK,CAAC;;wBAAnC,QAAQ,GAAG,SAAwB;wBACzC,sBAAO,EAAE,QAAQ,YAAE,KAAK,SAAE,EAAC;;;;KAC9B;IATqB,+BAAgB,mBASrC;IACD,SAAgB,oBAAoB,CAAI,QAAa,EAAE,WAA+B;QAClF,OAAO,QAAQ,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC;YACtB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;SAC3B,CAAC,EAHuB,CAGvB,CAAC,CAAC;IACR,CAAC;IALe,mCAAoB,uBAKnC;IACD,SAAgB,iBAAiB,CAAI,MAAW,EAAE,WAA+B;QAC7E,IAAM,cAAc,GAAG,oBAAoB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACjE,OAAO,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC;IAHe,gCAAiB,oBAGhC;IACD,SAAsB,aAAa,CAAI,MAAyB,EAAE,WAA2B;;;;;4BAClE,qBAAM,gBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC;;wBAA5D,cAAc,GAAG,SAA2C;wBAClE,sBAAO,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;;;;KACvD;IAHqB,4BAAa,gBAGlC;IACD,SAAgB,OAAO,CAAI,CAAoB;QAC3C,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC1B,CAAC;IAFe,sBAAO,UAEtB;IACD,SAAgB,OAAO,CAAI,CAAoB,EAAE,EAAqB;QAClE,OAAO,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;IACpC,CAAC;IAFe,sBAAO,UAEtB;AACL,CAAC,EAnCgB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAmC9B;AAED;;GAEG;AACH,SAAgB,WAAW,CAAC,MAAa,EAAE,OAAkC;IAAlC,oDAAkC;IACzE,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;AAC7B,CAAC;AAFD,kCAEC;;;;;;;;;;;;;AC3ED;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;AAElF,wGAAwC;AACxC,iGAA8B;AAE9B;IAKI,aAAY,GAAsB;QAAtB,8BAAsB;QAC9B,IAAI,GAAG,YAAY,gBAAG,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;SACtB;aAAM;YACH,IAAI,CAAC,OAAO,GAAG,gBAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACjC;IACL,CAAC;IAOD,sBAAI,4BAAW;QALf;;;;WAIG;aACH;YACI,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC5B,IAAI,IAAI,EAAE;gBACN,OAAO,IAAI,CAAC;aACf;YACD,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAClB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;aAC/B;YACD,OAAO,EAAE,CAAC;QACd,CAAC;;;OAAA;IAKD,sBAAI,6BAAY;QAHhB;;WAEG;aACH;YACI,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAI,QAAQ,GAAQ,IAAI,CAAC;YACzB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;gBAClD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzB,OAAO,SAAS,CAAC;QACrB,CAAC;;;OAAA;IAED,sBAAI,uBAAM;aAAV;YACI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxC,CAAC;;;OAAA;IAED,sBAAQ,GAAR,UAAS,GAAQ;QACb,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,EAAE;YAChE,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,qBAAO,GAAP,UAAQ,IAAmB;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED;;OAEG;IACH,wBAAU,GAAV,UAAW,MAAc;QACrB,IAAM,UAAU,GAAG,gBAAG,CAAC,IAAI,uBACpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KACxB,MAAM,YACR,CAAC;QACH,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,2BAAa,GAAb,UAAc,SAAiB;QAC3B,IAAM,UAAU,GAAG,gBAAG,CAAC,IAAI,uBACpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KACxB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAC3B,SAAS,eACX,CAAC;QACH,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,8BAAgB,GAAhB;QACI,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;IAED;;OAEG;IACH,sBAAQ,GAAR,UAAS,IAAmB;QACxB,IAAM,UAAU,GAAG,gBAAG,CAAC,IAAI,uBACpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KACxB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAC3B,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IACvB,CAAC;QACH,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,yBAAW,GAAX;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED;;OAEG;IACH,uBAAS,GAAT,UAAU,KAAa;QACnB,IAAM,UAAU,GAAG,gBAAG,CAAC,IAAI,uBACpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KACxB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAC3B,KAAK,WACP,CAAC;QACH,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,0BAAY,GAAZ;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,0BAAY,GAAZ,UAAa,QAAgB;QACzB,IAAM,UAAU,GAAG,gBAAG,CAAC,IAAI,uBACpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KACxB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAC3B,QAAQ,cACV,CAAC;QACH,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,6BAAe,GAAf;QACI,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,2BAAa,GAAb;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,sBAAI,uBAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAI,0BAAS;aAAb;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAI,qBAAI;aAAR;YACI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;gBAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC5C;YACD,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAI,sBAAK;aAAT;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAI,yBAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;;;OAAA;IAED,sBAAQ,GAAR,UAAS,YAAsB;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAED,qBAAO,GAAP,UAAQ,GAAQ,EAAE,aAA6B;QAA7B,oDAA6B;QAC3C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;YAC1B,OAAO,KAAK,CAAC;SAChB;QAED,OAAO,aAAa;YAChB,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,QAAQ,EAAE;YACpC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,KAAK,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;IACzE,CAAC;IAED,6BAAe,GAAf,UAAgB,GAAQ,EAAE,aAA6B;QAA7B,oDAA6B;QACnD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;YAC1B,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE;YAChB,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YAC/C,KAAK,GAAG,IAAI,WAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAEM,sBAAkB,GAAzB,UAA0B,IAAW;QACjC,IAAM,MAAM,GAAU,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,QAAQ,EAAE,KAAK,IAAK,YAAK,KAAK,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,EAA5C,CAA4C,CAAC,EAAE;gBAC/E,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACpB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,2BAAa,GAArB,UAAsB,GAAQ;QAC1B,OAAO,CAAC,IAAI,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC;IAC9E,CAAC;IACL,UAAC;AAAD,CAAC;;;;;;;;;;;;AC7OD,mGAAqC","file":"vendors-node_modules_theia_core_lib_common_index_js-node_modules_theia_core_shared_inversify_js.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nconst isElectron: () => boolean = require('is-electron');\n\n/**\n * The electron specific environment.\n */\nclass ElectronEnv {\n\n    /**\n     * Environment variable that can be accessed on the `process` to check if running in electron or not.\n     */\n    readonly THEIA_ELECTRON_VERSION = 'THEIA_ELECTRON_VERSION';\n\n    /**\n     * `true` if running in electron. Otherwise, `false`.\n     *\n     * Can be called from both the `main` and the render process. Also works for forked cluster workers.\n     */\n    is(): boolean {\n        return isElectron();\n    }\n\n    /**\n     * `true` if running in Electron in development mode. Otherwise, `false`.\n     *\n     * Cannot be used from the browser. From the browser, it is always `false`.\n     */\n    isDevMode(): boolean {\n        return this.is()\n            && typeof process !== 'undefined'\n            // `defaultApp` does not exist on the Node.js API, but on electron (`electron.d.ts`).\n            && ((process as any).defaultApp || /node_modules[/]electron[/]/.test(process.execPath)); // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n\n    /**\n     * Creates and return with a new environment object which always contains the `ELECTRON_RUN_AS_NODE: 1` property pair.\n     * This should be used to `spawn` and `fork` a new Node.js process from the Node.js shipped with Electron. Otherwise, a new Electron\n     * process will be spawned which [has side-effects](https://github.com/eclipse-theia/theia/issues/5385).\n     *\n     * If called from the backend and the `env` argument is not defined, it falls back to `process.env` such as Node.js behaves\n     * with the [`SpawnOptions`](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options).\n     * If `env` is defined, it will be shallow-copied.\n     *\n     * Calling this function from the frontend does not make any sense, hence throw an error.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    runAsNodeEnv(env?: any): any & { ELECTRON_RUN_AS_NODE: 1 } {\n        if (typeof process === 'undefined') {\n            throw new Error(\"'process' cannot be undefined.\");\n        }\n        return {\n            ...(env === undefined ? process.env : env),\n            ELECTRON_RUN_AS_NODE: 1\n        };\n    }\n\n}\n\nconst electron = new ElectronEnv();\nconst environment: Readonly<{ electron: ElectronEnv }> = { electron };\nexport { environment };\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport interface ApplicationError<C extends number, D> extends Error {\n    readonly code: C\n    readonly data: D\n    toJson(): ApplicationError.Literal<D>\n}\nexport namespace ApplicationError {\n    export interface Literal<D> {\n        message: string\n        data: D\n        stack?: string\n    }\n    export interface Constructor<C extends number, D> {\n        (...args: any[]): ApplicationError<C, D>;\n        code: C;\n        is(arg: object | undefined): arg is ApplicationError<C, D>\n    }\n    const codes: number[] = [];\n    export function declare<C extends number, D>(code: C, factory: (...args: any[]) => Literal<D>): Constructor<C, D> {\n        if (codes.indexOf(code) !== -1) {\n            throw new Error(`An application error for '${code}' code is already declared`);\n        }\n        const constructorOpt = Object.assign((...args: any[]) => new Impl(code, factory(...args), constructorOpt), {\n            code,\n            is(arg: object | undefined): arg is ApplicationError<C, D> {\n                return arg instanceof Impl && arg.code === code;\n            }\n        });\n        return constructorOpt;\n    }\n    export function is<C extends number, D>(arg: object | undefined): arg is ApplicationError<C, D> {\n        return arg instanceof Impl;\n    }\n    export function fromJson<C extends number, D>(code: C, raw: Literal<D>): ApplicationError<C, D> {\n        return new Impl(code, raw);\n    }\n    class Impl<C extends number, D> extends Error implements ApplicationError<C, D>  {\n        readonly data: D;\n        constructor(\n            readonly code: C,\n            raw: ApplicationError.Literal<D>,\n            constructorOpt?: Function\n        ) {\n            super(raw.message);\n            this.data = raw.data;\n            Object.setPrototypeOf(this, Impl.prototype);\n            if (raw.stack) {\n                this.stack = raw.stack;\n            } else if (Error.captureStackTrace && constructorOpt) {\n                Error.captureStackTrace(this, constructorOpt);\n            }\n        }\n        toJson(): ApplicationError.Literal<D> {\n            const { message, data, stack } = this;\n            return { message, data, stack };\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from './event';\n\nexport interface CancellationToken {\n    readonly isCancellationRequested: boolean;\n    /*\n     * An event emitted when cancellation is requested\n     * @event\n     */\n    readonly onCancellationRequested: Event<void>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst shortcutEvent: Event<void> = Object.freeze(Object.assign(function (callback: any, context?: any): any {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose(): void { clearTimeout(handle); } };\n}, { maxListeners: 0 }));\n\nexport namespace CancellationToken {\n\n    export const None: CancellationToken = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n\n    export const Cancelled: CancellationToken = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n}\n\nclass MutableToken implements CancellationToken {\n\n    private _isCancelled: boolean = false;\n    private _emitter: Emitter<void> | undefined;\n\n    public cancel(): void {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this._emitter = undefined;\n            }\n        }\n    }\n\n    get isCancellationRequested(): boolean {\n        return this._isCancelled;\n    }\n\n    get onCancellationRequested(): Event<void> {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter<void>();\n        }\n        return this._emitter.event;\n    }\n}\n\nexport class CancellationTokenSource {\n\n    private _token: CancellationToken;\n\n    get token(): CancellationToken {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n\n    cancel(): void {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        } else if (this._token !== CancellationToken.Cancelled) {\n            (<MutableToken>this._token).cancel();\n        }\n    }\n\n    dispose(): void {\n        this.cancel();\n    }\n}\n\nconst cancelledMessage = 'Cancelled';\n\nexport function cancelled(): Error {\n    return new Error(cancelledMessage);\n}\n\nexport function isCancelled(err: Error | undefined): boolean {\n    return !!err && err.message === cancelledMessage;\n}\n\nexport function checkCancelled(token?: CancellationToken): void {\n    if (!!token && token.isCancellationRequested) {\n        throw cancelled();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { Event, Emitter, WaitUntilEvent } from './event';\nimport { Disposable, DisposableCollection } from './disposable';\nimport { ContributionProvider } from './contribution-provider';\n\n/**\n * A command is a unique identifier of a function\n * which can be executed by a user via a keyboard shortcut,\n * a menu action or directly.\n */\nexport interface Command {\n    /**\n     * A unique identifier of this command.\n     */\n    id: string;\n    /**\n     * A label of this command.\n     */\n    label?: string;\n    /**\n     * An icon class of this command.\n     */\n    iconClass?: string;\n    /**\n     * A category of this command.\n     */\n    category?: string;\n}\n\nexport namespace Command {\n    /* Determine whether object is a Command */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(arg: Command | any): arg is Command {\n        return !!arg && arg === Object(arg) && 'id' in arg;\n    }\n\n    /** Comparator function for when sorting commands */\n    export function compareCommands(a: Command, b: Command): number {\n        if (a.label && b.label) {\n            const aCommand = (a.category ? `${a.category}: ${a.label}` : a.label).toLowerCase();\n            const bCommand = (b.category ? `${b.category}: ${b.label}` : b.label).toLowerCase();\n            return (aCommand).localeCompare(bCommand);\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Determine if two commands are equal.\n     *\n     * @param a the first command for comparison.\n     * @param b the second command for comparison.\n     */\n    export function equals(a: Command, b: Command): boolean {\n        return (\n            a.id === b.id &&\n            a.label === b.label &&\n            a.iconClass === b.iconClass &&\n            a.category === b.category\n        );\n    }\n}\n\n/**\n * A command handler is an implementation of a command.\n *\n * A command can have multiple handlers\n * but they should be active in different contexts,\n * otherwise first active will be executed.\n */\nexport interface CommandHandler {\n    /**\n     * Execute this handler.\n     *\n     * Don't call it directly, use `CommandService.executeCommand` instead.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    execute(...args: any[]): any;\n    /**\n     * Test whether this handler is enabled (active).\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isEnabled?(...args: any[]): boolean;\n    /**\n     * Test whether menu items for this handler should be visible.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isVisible?(...args: any[]): boolean;\n    /**\n     * Test whether menu items for this handler should be toggled.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isToggled?(...args: any[]): boolean;\n}\n\nexport const CommandContribution = Symbol('CommandContribution');\n/**\n * The command contribution should be implemented to register custom commands and handler.\n */\nexport interface CommandContribution {\n    /**\n     * Register commands and handlers.\n     */\n    registerCommands(commands: CommandRegistry): void;\n}\n\nexport interface CommandEvent {\n    commandId: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args: any[]\n}\n\nexport interface WillExecuteCommandEvent extends WaitUntilEvent, CommandEvent {\n}\n\nexport const commandServicePath = '/services/commands';\nexport const CommandService = Symbol('CommandService');\n/**\n * The command service should be used to execute commands.\n */\nexport interface CommandService {\n    /**\n     * Execute the active handler for the given command and arguments.\n     *\n     * Reject if a command cannot be executed.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    executeCommand<T>(command: string, ...args: any[]): Promise<T | undefined>;\n    /**\n     * An event is emitted when a command is about to be executed.\n     *\n     * It can be used to install or activate a command handler.\n     */\n    readonly onWillExecuteCommand: Event<WillExecuteCommandEvent>;\n    /**\n     * An event is emitted when a command was executed.\n     */\n    readonly onDidExecuteCommand: Event<CommandEvent>;\n}\n\n/**\n * The command registry manages commands and handlers.\n */\n@injectable()\nexport class CommandRegistry implements CommandService {\n\n    protected readonly _commands: { [id: string]: Command } = {};\n    protected readonly _handlers: { [id: string]: CommandHandler[] } = {};\n\n    protected readonly toUnregisterCommands = new Map<string, Disposable>();\n\n    // List of recently used commands.\n    protected _recent: Command[] = [];\n\n    protected readonly onWillExecuteCommandEmitter = new Emitter<WillExecuteCommandEvent>();\n    readonly onWillExecuteCommand = this.onWillExecuteCommandEmitter.event;\n\n    protected readonly onDidExecuteCommandEmitter = new Emitter<CommandEvent>();\n    readonly onDidExecuteCommand = this.onDidExecuteCommandEmitter.event;\n\n    constructor(\n        @inject(ContributionProvider) @named(CommandContribution)\n        protected readonly contributionProvider: ContributionProvider<CommandContribution>\n    ) { }\n\n    onStart(): void {\n        const contributions = this.contributionProvider.getContributions();\n        for (const contrib of contributions) {\n            contrib.registerCommands(this);\n        }\n    }\n\n    /**\n     * Register the given command and handler if present.\n     *\n     * Throw if a command is already registered for the given command identifier.\n     */\n    registerCommand(command: Command, handler?: CommandHandler): Disposable {\n        if (this._commands[command.id]) {\n            console.warn(`A command ${command.id} is already registered.`);\n            return Disposable.NULL;\n        }\n        const toDispose = new DisposableCollection(this.doRegisterCommand(command));\n        if (handler) {\n            toDispose.push(this.registerHandler(command.id, handler));\n        }\n        this.toUnregisterCommands.set(command.id, toDispose);\n        toDispose.push(Disposable.create(() => this.toUnregisterCommands.delete(command.id)));\n        return toDispose;\n    }\n\n    protected doRegisterCommand(command: Command): Disposable {\n        this._commands[command.id] = command;\n        return {\n            dispose: () => {\n                delete this._commands[command.id];\n            }\n        };\n    }\n\n    /**\n     * Unregister command from the registry\n     *\n     * @param command\n     */\n    unregisterCommand(command: Command): void;\n    /**\n     * Unregister command from the registry\n     *\n     * @param id\n     */\n    unregisterCommand(id: string): void;\n    unregisterCommand(commandOrId: Command | string): void {\n        const id = Command.is(commandOrId) ? commandOrId.id : commandOrId;\n        const toUnregister = this.toUnregisterCommands.get(id);\n        if (toUnregister) {\n            toUnregister.dispose();\n        }\n    }\n\n    /**\n     * Register the given handler for the given command identifier.\n     *\n     * If there is already a handler for the given command\n     * then the given handler is registered as more specific, and\n     * has higher priority during enablement, visibility and toggle state evaluations.\n     */\n    registerHandler(commandId: string, handler: CommandHandler): Disposable {\n        let handlers = this._handlers[commandId];\n        if (!handlers) {\n            this._handlers[commandId] = handlers = [];\n        }\n        handlers.unshift(handler);\n        return {\n            dispose: () => {\n                const idx = handlers.indexOf(handler);\n                if (idx >= 0) {\n                    handlers.splice(idx, 1);\n                }\n            }\n        };\n    }\n\n    /**\n     * Test whether there is an active handler for the given command.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isEnabled(command: string, ...args: any[]): boolean {\n        return typeof this.getActiveHandler(command, ...args) !== 'undefined';\n    }\n\n    /**\n     * Test whether there is a visible handler for the given command.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isVisible(command: string, ...args: any[]): boolean {\n        return typeof this.getVisibleHandler(command, ...args) !== 'undefined';\n    }\n\n    /**\n     * Test whether there is a toggled handler for the given command.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isToggled(command: string, ...args: any[]): boolean {\n        return typeof this.getToggledHandler(command, ...args) !== 'undefined';\n    }\n\n    /**\n     * Execute the active handler for the given command and arguments.\n     *\n     * Reject if a command cannot be executed.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async executeCommand<T>(commandId: string, ...args: any[]): Promise<T | undefined> {\n        const handler = this.getActiveHandler(commandId, ...args);\n        if (handler) {\n            await this.fireWillExecuteCommand(commandId, args);\n            const result = await handler.execute(...args);\n            this.onDidExecuteCommandEmitter.fire({ commandId, args });\n            return result;\n        }\n        throw Object.assign(new Error(`The command '${commandId}' cannot be executed. There are no active handlers available for the command.`), { code: 'NO_ACTIVE_HANDLER' });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async fireWillExecuteCommand(commandId: string, args: any[] = []): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillExecuteCommandEmitter, { commandId, args }, 30000);\n    }\n\n    /**\n     * Get a visible handler for the given command or `undefined`.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getVisibleHandler(commandId: string, ...args: any[]): CommandHandler | undefined {\n        const handlers = this._handlers[commandId];\n        if (handlers) {\n            for (const handler of handlers) {\n                try {\n                    if (!handler.isVisible || handler.isVisible(...args)) {\n                        return handler;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Get an active handler for the given command or `undefined`.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getActiveHandler(commandId: string, ...args: any[]): CommandHandler | undefined {\n        const handlers = this._handlers[commandId];\n        if (handlers) {\n            for (const handler of handlers) {\n                try {\n                    if (!handler.isEnabled || handler.isEnabled(...args)) {\n                        return handler;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Get a toggled handler for the given command or `undefined`.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getToggledHandler(commandId: string, ...args: any[]): CommandHandler | undefined {\n        const handlers = this._handlers[commandId];\n        if (handlers) {\n            for (const handler of handlers) {\n                try {\n                    if (handler.isToggled && handler.isToggled(...args)) {\n                        return handler;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns with all handlers for the given command. If the command does not have any handlers,\n     * or the command is not registered, returns an empty array.\n     */\n    getAllHandlers(commandId: string): CommandHandler[] {\n        const handlers = this._handlers[commandId];\n        return handlers ? handlers.slice() : [];\n    }\n\n    /**\n     * Get all registered commands.\n     */\n    get commands(): Command[] {\n        const commands: Command[] = [];\n        for (const id of this.commandIds) {\n            const cmd = this.getCommand(id);\n            if (cmd) {\n                commands.push(cmd);\n            }\n        }\n        return commands;\n    }\n\n    /**\n     * Get a command for the given command identifier.\n     */\n    getCommand(id: string): Command | undefined {\n        return this._commands[id];\n    }\n\n    /**\n     * Get all registered commands identifiers.\n     */\n    get commandIds(): string[] {\n        return Object.keys(this._commands);\n    }\n\n    /**\n     * Get the list of recently used commands.\n     */\n    get recent(): Command[] {\n        return this._recent;\n    }\n\n    /**\n     * Set the list of recently used commands.\n     * @param commands the list of recently used commands.\n     */\n    set recent(commands: Command[]) {\n        this._recent = commands;\n    }\n\n    /**\n     * Adds a command to recently used list.\n     * Prioritizes commands that were recently executed to be most recent.\n     *\n     * @param recent a recent command, or array of recent commands.\n     */\n    addRecentCommand(recent: Command | Command[]): void {\n        if (Array.isArray(recent)) {\n            recent.forEach((command: Command) => this.addRecentCommand(command));\n        } else {\n            // Determine if the command currently exists in the recently used list.\n            const index = this._recent.findIndex((command: Command) => Command.equals(recent, command));\n            // If the command exists, remove it from the array so it can later be placed at the top.\n            if (index >= 0) { this._recent.splice(index, 1); }\n            // Add the recent command to the beginning of the array (most recent).\n            this._recent.unshift(recent);\n        }\n    }\n\n    /**\n     * Clear the list of recently used commands.\n     */\n    clearCommandHistory(): void {\n        this.recent = [];\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2021 STMicroelectronics and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional } from 'inversify';\nimport { ContributionFilterRegistry, ContributionType, FilterContribution } from './contribution-filter';\nimport { Filter } from './filter';\n\n/**\n * Registry of contribution filters.\n *\n * Implement/bind to the `FilterContribution` interface/symbol to register your contribution filters.\n */\n@injectable()\nexport class ContributionFilterRegistryImpl implements ContributionFilterRegistry {\n\n    protected initialized = false;\n    protected genericFilters: Filter<Object>[] = [];\n    protected typeToFilters = new Map<ContributionType, Filter<Object>[]>();\n\n    constructor(\n        @multiInject(FilterContribution) @optional() contributions: FilterContribution[] = []\n    ) {\n        for (const contribution of contributions) {\n            contribution.registerContributionFilters(this);\n        }\n        this.initialized = true;\n    }\n\n    addFilters(types: '*' | ContributionType[], filters: Filter<Object>[]): void {\n        if (this.initialized) {\n            throw new Error('cannot add filters after initialization is done.');\n        } else if (types === '*') {\n            this.genericFilters.push(...filters);\n        } else {\n            for (const type of types) {\n                this.getOrCreate(type).push(...filters);\n            }\n        }\n    }\n\n    applyFilters<T extends Object>(toFilter: T[], type: ContributionType): T[] {\n        const filters = this.getFilters(type);\n        if (filters.length === 0) {\n            return toFilter;\n        }\n        return toFilter.filter(\n            object => filters.every(filter => filter(object))\n        );\n    }\n\n    protected getOrCreate(type: ContributionType): Filter<Object>[] {\n        let value = this.typeToFilters.get(type);\n        if (value === undefined) {\n            this.typeToFilters.set(type, value = []);\n        }\n        return value;\n    }\n\n    protected getFilters(type: ContributionType): Filter<Object>[] {\n        return [\n            ...this.typeToFilters.get(type) || [],\n            ...this.genericFilters\n        ];\n    }\n}\n\n","/********************************************************************************\n * Copyright (C) 2021 STMicroelectronics and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { Filter } from './filter';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ContributionType = interfaces.ServiceIdentifier<any>;\n\nexport const ContributionFilterRegistry = Symbol('ContributionFilterRegistry');\nexport interface ContributionFilterRegistry {\n\n    /**\n     * Add filters to be applied for every type of contribution.\n     */\n    addFilters(types: '*', filters: Filter<Object>[]): void;\n\n    /**\n     * Given a list of contribution types, register filters to apply.\n     * @param types types for which to register the filters.\n     */\n    addFilters(types: ContributionType[], filters: Filter<Object>[]): void;\n\n    /**\n     * Applies the filters for the given contribution type. Generic filters will be applied on any given type.\n     * @param toFilter the elements to filter\n     * @param type the contribution type for which potentially filters were registered\n     * @returns the filtered elements\n     */\n    applyFilters<T extends Object>(toFilter: T[], type: ContributionType): T[]\n}\n\nexport const FilterContribution = Symbol('FilterContribution');\n/**\n * Register filters to remove contributions.\n */\nexport interface FilterContribution {\n    /**\n     * Use the registry to register your contribution filters.\n     */\n    registerContributionFilters(registry: ContributionFilterRegistry): void;\n}\n","/********************************************************************************\n * Copyright (C) 2021 STMicroelectronics and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport const Filter = Symbol('Filter');\n\n/**\n * @param toTest Object that should be tested\n * @returns `true` if the object passes the test, `false` otherwise.\n */\nexport type Filter<T extends Object> = (toTest: T) => boolean;\n","/********************************************************************************\n * Copyright (C) 2021 STMicroelectronics and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './contribution-filter';\nexport * from './contribution-filter-registry';\nexport * from './filter';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { ContributionFilterRegistry } from './contribution-filter';\n\nexport const ContributionProvider = Symbol('ContributionProvider');\n\nexport interface ContributionProvider<T extends object> {\n\n    /**\n     * @param recursive `true` if the contributions should be collected from the parent containers as well. Otherwise, `false`. It is `false` by default.\n     */\n    getContributions(recursive?: boolean): T[]\n}\n\nclass ContainerBasedContributionProvider<T extends object> implements ContributionProvider<T> {\n\n    protected services: T[] | undefined;\n\n    constructor(\n        protected readonly serviceIdentifier: interfaces.ServiceIdentifier<T>,\n        protected readonly container: interfaces.Container\n    ) { }\n\n    getContributions(recursive?: boolean): T[] {\n        if (this.services === undefined) {\n            const currentServices: T[] = [];\n            let filterRegistry: ContributionFilterRegistry | undefined;\n            let currentContainer: interfaces.Container | null = this.container;\n            // eslint-disable-next-line no-null/no-null\n            while (currentContainer !== null) {\n                if (currentContainer.isBound(this.serviceIdentifier)) {\n                    try {\n                        currentServices.push(...currentContainer.getAll(this.serviceIdentifier));\n                    } catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (filterRegistry === undefined && currentContainer.isBound(ContributionFilterRegistry)) {\n                    filterRegistry = currentContainer.get(ContributionFilterRegistry);\n                }\n                // eslint-disable-next-line no-null/no-null\n                currentContainer = recursive === true ? currentContainer.parent : null;\n            }\n\n            this.services = filterRegistry ? filterRegistry.applyFilters(currentServices, this.serviceIdentifier) : currentServices;\n\n        }\n        return this.services;\n    }\n}\n\nexport type Bindable = interfaces.Bind | interfaces.Container;\nexport namespace Bindable {\n    export function isContainer(arg: Bindable): arg is interfaces.Container {\n        return typeof arg !== 'function'\n            // https://github.com/eclipse-theia/theia/issues/3204#issue-371029654\n            // In InversifyJS `4.14.0` containers no longer have a property `guid`.\n            && ('guid' in arg || 'parent' in arg);\n    }\n}\n\nexport function bindContributionProvider(bindable: Bindable, id: symbol): void {\n    const bindingToSyntax = (Bindable.isContainer(bindable) ? bindable.bind(ContributionProvider) : bindable(ContributionProvider));\n    bindingToSyntax\n        .toDynamicValue(ctx => new ContainerBasedContributionProvider(id, ctx.container))\n        .inSingletonScope().whenTargetNamed(id);\n}\n\n/**\n * Helper function to bind a service to a list of contributions easily.\n * @param bindable a Container or the bind function directly.\n * @param service an already bound service to refer the contributions to.\n * @param contributions array of contribution identifiers to bind the service to.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function bindContribution(bindable: Bindable, service: interfaces.ServiceIdentifier<any>, contributions: interfaces.ServiceIdentifier<any>[]): void {\n    const bind: interfaces.Bind = Bindable.isContainer(bindable) ? bindable.bind.bind(bindable) : bindable;\n    for (const contribution of contributions) {\n        bind(contribution).toService(service);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { Event, Emitter } from './event';\n\nexport interface Disposable {\n    /**\n     * Dispose this object.\n     */\n    dispose(): void;\n}\n\nexport namespace Disposable {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(arg: any): arg is Disposable {\n        return !!arg && typeof arg === 'object' && 'dispose' in arg && typeof arg['dispose'] === 'function';\n    }\n    export function create(func: () => void): Disposable {\n        return {\n            dispose: func\n        };\n    }\n    export const NULL = create(() => { });\n}\n\nexport class DisposableCollection implements Disposable {\n\n    protected readonly disposables: Disposable[] = [];\n    protected readonly onDisposeEmitter = new Emitter<void>();\n\n    constructor(...toDispose: Disposable[]) {\n        toDispose.forEach(d => this.push(d));\n    }\n\n    /**\n     * This event is fired only once\n     * on first dispose of not empty collection.\n     */\n    get onDispose(): Event<void> {\n        return this.onDisposeEmitter.event;\n    }\n\n    protected checkDisposed(): void {\n        if (this.disposed && !this.disposingElements) {\n            this.onDisposeEmitter.fire(undefined);\n            this.onDisposeEmitter.dispose();\n        }\n    }\n\n    get disposed(): boolean {\n        return this.disposables.length === 0;\n    }\n\n    private disposingElements = false;\n    dispose(): void {\n        if (this.disposed || this.disposingElements) {\n            return;\n        }\n        this.disposingElements = true;\n        while (!this.disposed) {\n            try {\n                this.disposables.pop()!.dispose();\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        this.disposingElements = false;\n        this.checkDisposed();\n    }\n\n    push(disposable: Disposable): Disposable {\n        const disposables = this.disposables;\n        disposables.push(disposable);\n        const originalDispose = disposable.dispose.bind(disposable);\n        const toRemove = Disposable.create(() => {\n            const index = disposables.indexOf(disposable);\n            if (index !== -1) {\n                disposables.splice(index, 1);\n            }\n            this.checkDisposed();\n        });\n        disposable.dispose = () => {\n            toRemove.dispose();\n            disposable.dispose = originalDispose;\n            originalDispose();\n        };\n        return toRemove;\n    }\n\n    pushAll(disposables: Disposable[]): Disposable[] {\n        return disposables.map(disposable =>\n            this.push(disposable)\n        );\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Disposable } from './disposable';\nimport { MaybePromise } from './types';\n\n/**\n * Represents a typed event.\n */\nexport interface Event<T> {\n\n    /**\n     *\n     * @param listener The listener function will be call when the event happens.\n     * @param thisArgs The 'this' which will be used when calling the event listener.\n     * @param disposables An array to which a {{IDisposable}} will be added.\n     * @return a disposable to remove the listener again.\n     */\n    (listener: (e: T) => any, thisArgs?: any, disposables?: Disposable[]): Disposable;\n    /**\n     * An emitter will print a warning if more listeners are added for this event.\n     * The event.maxListeners allows the limit to be modified for this specific event.\n     * The value can be set to 0 to indicate an unlimited number of listener.\n     */\n    maxListeners: number\n}\n\nexport namespace Event {\n    const _disposable = { dispose(): void { } };\n    export const None: Event<any> = Object.assign(function (): { dispose(): void } { return _disposable; }, {\n        get maxListeners(): number { return 0; },\n        set maxListeners(maxListeners: number) { }\n    });\n\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * through the mapping function.\n     */\n    export function map<I, O>(event: Event<I>, mapFunc: (i: I) => O): Event<O> {\n        return Object.assign((listener: (e: O) => any, thisArgs?: any, disposables?: Disposable[]) => event(i => listener.call(thisArgs, mapFunc(i)), undefined, disposables), {\n            maxListeners: 0,\n        });\n    }\n}\n\ntype Callback = (...args: any[]) => any;\nclass CallbackList implements Iterable<Callback> {\n\n    private _callbacks: Function[] | undefined;\n    private _contexts: any[] | undefined;\n\n    get length(): number {\n        return this._callbacks && this._callbacks.length || 0;\n    }\n\n    public add(callback: Function, context: any = undefined, bucket?: Disposable[]): void {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts!.push(context);\n\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n\n    public remove(callback: Function, context: any = undefined): void {\n        if (!this._callbacks) {\n            return;\n        }\n\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0; i < this._callbacks.length; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts![i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts!.splice(i, 1);\n                    return;\n                } else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n\n    // tslint:disable-next-line:typedef\n    public [Symbol.iterator]() {\n        if (!this._callbacks) {\n            return [][Symbol.iterator]();\n        }\n        const callbacks = this._callbacks.slice(0);\n        const contexts = this._contexts!.slice(0);\n\n        return callbacks.map((callback, i) =>\n            (...args: any[]) => callback.apply(contexts[i], args)\n        )[Symbol.iterator]();\n    }\n\n    public invoke(...args: any[]): any[] {\n        const ret: any[] = [];\n        for (const callback of this) {\n            try {\n                ret.push(callback(...args));\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        return ret;\n    }\n\n    public isEmpty(): boolean {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n\n    public dispose(): void {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\n\nexport interface EmitterOptions {\n    onFirstListenerAdd?: Function;\n    onLastListenerRemove?: Function;\n}\n\nexport class Emitter<T = any> {\n\n    private static LEAK_WARNING_THRESHHOLD = 175;\n\n    private static _noop = function (): void { };\n\n    private _event: Event<T>;\n    protected _callbacks: CallbackList | undefined;\n    private _disposed = false;\n\n    private _leakingStacks: Map<string, number> | undefined;\n    private _leakWarnCountdown = 0;\n\n    constructor(\n        private _options?: EmitterOptions\n    ) { }\n\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event(): Event<T> {\n        if (!this._event) {\n            this._event = Object.assign((listener: (e: T) => any, thisArgs?: any, disposables?: Disposable[]) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const removeMaxListenersCheck = this.checkMaxListeners(this._event.maxListeners);\n\n                const result: Disposable = {\n                    dispose: () => {\n                        if (removeMaxListenersCheck) {\n                            removeMaxListenersCheck();\n                        }\n                        result.dispose = Emitter._noop;\n                        if (!this._disposed) {\n                            this._callbacks!.remove(listener, thisArgs);\n                            result.dispose = Emitter._noop;\n                            if (this._options && this._options.onLastListenerRemove && this._callbacks!.isEmpty()) {\n                                this._options.onLastListenerRemove(this);\n                            }\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n\n                return result;\n            }, {\n                maxListeners: Emitter.LEAK_WARNING_THRESHHOLD\n            }\n            );\n        }\n        return this._event;\n    }\n\n    protected checkMaxListeners(maxListeners: number): (() => void) | undefined {\n        if (maxListeners === 0 || !this._callbacks) {\n            return undefined;\n        }\n        const listenerCount = this._callbacks.length;\n        if (listenerCount <= maxListeners) {\n            return undefined;\n        }\n\n        const popStack = this.pushLeakingStack();\n\n        this._leakWarnCountdown -= 1;\n        if (this._leakWarnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._leakWarnCountdown = maxListeners * 0.5;\n\n            let topStack: string;\n            let topCount = 0;\n            this._leakingStacks!.forEach((stackCount, stack) => {\n                if (!topStack || topCount < stackCount) {\n                    topStack = stack;\n                    topCount = stackCount;\n                }\n            });\n\n            // eslint-disable-next-line max-len\n            console.warn(`Possible Emitter memory leak detected. ${listenerCount} listeners added. Use event.maxListeners to increase the limit (${maxListeners}). MOST frequent listener (${topCount}):`);\n            console.warn(topStack!);\n        }\n\n        return popStack;\n    }\n\n    protected pushLeakingStack(): () => void {\n        if (!this._leakingStacks) {\n            this._leakingStacks = new Map();\n        }\n        const stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n        const count = (this._leakingStacks.get(stack) || 0);\n        this._leakingStacks.set(stack, count + 1);\n        return () => this.popLeakingStack(stack);\n    }\n\n    protected popLeakingStack(stack: string): void {\n        if (!this._leakingStacks) {\n            return;\n        }\n        const count = (this._leakingStacks.get(stack) || 0);\n        this._leakingStacks.set(stack, count - 1);\n    }\n\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event: T): any {\n        if (this._callbacks) {\n            this._callbacks.invoke(event);\n        }\n    }\n\n    /**\n     * Process each listener one by one.\n     * Return `false` to stop iterating over the listeners, `true` to continue.\n     */\n    async sequence(processor: (listener: (e: T) => any) => MaybePromise<boolean>): Promise<void> {\n        if (this._callbacks) {\n            for (const listener of this._callbacks) {\n                if (!await processor(listener)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    dispose(): void {\n        if (this._leakingStacks) {\n            this._leakingStacks.clear();\n            this._leakingStacks = undefined;\n        }\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n        this._disposed = true;\n    }\n}\n\nexport interface WaitUntilEvent {\n    /**\n     * Allows to pause the event loop until the provided thenable resolved.\n     *\n     * *Note:* It can only be called during event dispatch and not in an asynchronous manner\n     *\n     * @param thenable A thenable that delays execution.\n     */\n    waitUntil(thenable: Promise<any>): void;\n}\nexport namespace WaitUntilEvent {\n    /**\n     * Fire all listeners in the same tick.\n     *\n     * Use `AsyncEmitter.fire` to fire listeners async one after another.\n     */\n    export async function fire<T extends WaitUntilEvent>(\n        emitter: Emitter<T>,\n        event: Omit<T, 'waitUntil'>,\n        timeout: number | undefined = undefined\n    ): Promise<void> {\n        const waitables: Promise<void>[] = [];\n        const asyncEvent = Object.assign(event, {\n            waitUntil: (thenable: Promise<any>) => {\n                if (Object.isFrozen(waitables)) {\n                    throw new Error('waitUntil cannot be called asynchronously.');\n                }\n                waitables.push(thenable);\n            }\n        }) as T;\n        try {\n            emitter.fire(asyncEvent);\n            // Asynchronous calls to `waitUntil` should fail.\n            Object.freeze(waitables);\n        } finally {\n            delete asyncEvent['waitUntil'];\n        }\n        if (!waitables.length) {\n            return;\n        }\n        if (timeout !== undefined) {\n            await Promise.race([Promise.all(waitables), new Promise(resolve => setTimeout(resolve, timeout))]);\n        } else {\n            await Promise.all(waitables);\n        }\n    }\n}\n\nimport { CancellationToken } from './cancellation';\n\nexport class AsyncEmitter<T extends WaitUntilEvent> extends Emitter<T> {\n\n    protected deliveryQueue: Promise<void> | undefined;\n\n    /**\n     * Fire listeners async one after another.\n     */\n    fire(event: Omit<T, 'waitUntil'>, token: CancellationToken = CancellationToken.None,\n        promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n        const callbacks = this._callbacks;\n        if (!callbacks) {\n            return Promise.resolve();\n        }\n        const listeners = [...callbacks];\n        if (this.deliveryQueue) {\n            return this.deliveryQueue = this.deliveryQueue.then(() => this.deliver(listeners, event, token, promiseJoin));\n        }\n        return this.deliveryQueue = this.deliver(listeners, event, token, promiseJoin);\n    }\n\n    protected async deliver(listeners: Callback[], event: Omit<T, 'waitUntil'>, token: CancellationToken,\n        promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n        for (const listener of listeners) {\n            if (token.isCancellationRequested) {\n                return;\n            }\n            const waitables: Promise<void>[] = [];\n            const asyncEvent = Object.assign(event, {\n                waitUntil: (thenable: Promise<any>) => {\n                    if (Object.isFrozen(waitables)) {\n                        throw new Error('waitUntil cannot be called asynchronously.');\n                    }\n                    if (promiseJoin) {\n                        thenable = promiseJoin(thenable, listener);\n                    }\n                    waitables.push(thenable);\n                }\n            }) as T;\n            try {\n                listener(event);\n                // Asynchronous calls to `waitUntil` should fail.\n                Object.freeze(waitables);\n            } catch (e) {\n                console.error(e);\n            } finally {\n                delete asyncEvent['waitUntil'];\n            }\n            if (!waitables.length) {\n                return;\n            }\n            try {\n                await Promise.all(waitables);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './types';\nexport * from './disposable';\nexport * from './reference';\nexport * from './event';\nexport * from './cancellation';\nexport * from './command';\nexport * from './menu';\nexport * from './selection-service';\nexport * from './objects';\nexport * from './os';\nexport * from './resource';\nexport * from './contribution-provider';\nexport * from './path';\nexport * from './logger';\nexport * from './messaging';\nexport * from './message-service';\nexport * from './message-service-protocol';\nexport * from './progress-service';\nexport * from './progress-service-protocol';\nexport * from './selection';\nexport * from './strings';\nexport * from './application-error';\nexport * from './lsp-types';\nexport * from './contribution-filter';\n\nimport { environment } from '@theia/application-package/lib/environment';\nexport { environment };\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { JsonRpcServer } from './messaging/proxy-factory';\n\nexport const ILoggerServer = Symbol('ILoggerServer');\n\nexport const loggerPath = '/services/logger';\n\nexport interface ILoggerServer extends JsonRpcServer<ILoggerClient> {\n    setLogLevel(name: string, logLevel: number): Promise<void>;\n    getLogLevel(name: string): Promise<number>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    log(name: string, logLevel: number, message: any, params: any[]): Promise<void>;\n    child(name: string): Promise<void>;\n}\n\nexport const ILoggerClient = Symbol('ILoggerClient');\n\nexport interface ILogLevelChangedEvent {\n    loggerName: string;\n    newLogLevel: number;\n}\n\nexport interface ILoggerClient {\n    onLogLevelChanged(event: ILogLevelChangedEvent): void;\n}\n\n@injectable()\nexport class DispatchingLoggerClient implements ILoggerClient {\n\n    readonly clients = new Set<ILoggerClient>();\n\n    onLogLevelChanged(event: ILogLevelChangedEvent): void {\n        this.clients.forEach(client => client.onLogLevelChanged(event));\n    }\n\n}\n\nexport const rootLoggerName = 'root';\n\nexport enum LogLevel {\n    FATAL = 60,\n    ERROR = 50,\n    WARN = 40,\n    INFO = 30,\n    DEBUG = 20,\n    TRACE = 10\n}\nexport namespace LogLevel {\n    export const strings = new Map<LogLevel, string>([\n        [LogLevel.FATAL, 'fatal'],\n        [LogLevel.ERROR, 'error'],\n        [LogLevel.WARN, 'warn'],\n        [LogLevel.INFO, 'info'],\n        [LogLevel.DEBUG, 'debug'],\n        [LogLevel.TRACE, 'trace']\n    ]);\n\n    export function toString(level: LogLevel): string | undefined {\n        return strings.get(level);\n    }\n\n    export function fromString(levelStr: string): LogLevel | undefined {\n        for (const pair of strings) {\n            if (pair[1] === levelStr) {\n                return pair[0];\n            }\n        }\n\n        return undefined;\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport namespace ConsoleLogger {\n    type Console = (message?: any, ...optionalParams: any[]) => void;\n    const originalConsoleLog = console.log;\n    const consoles = new Map<LogLevel, Console>([\n        [LogLevel.FATAL, console.error],\n        [LogLevel.ERROR, console.error],\n        [LogLevel.WARN, console.warn],\n        [LogLevel.INFO, console.info],\n        [LogLevel.DEBUG, console.debug],\n        [LogLevel.TRACE, console.trace]\n    ]);\n    export function reset(): void {\n        console.error = consoles.get(LogLevel.ERROR)!;\n        console.warn = consoles.get(LogLevel.WARN)!;\n        console.info = consoles.get(LogLevel.INFO)!;\n        console.debug = consoles.get(LogLevel.DEBUG)!;\n        console.trace = consoles.get(LogLevel.TRACE)!;\n        console.log = originalConsoleLog;\n    }\n    export function log(name: string, logLevel: number, message: string, params: any[]): void {\n        const console = consoles.get(logLevel) || originalConsoleLog;\n        const severity = (LogLevel.strings.get(logLevel) || 'unknown').toUpperCase();\n        console(`${name} ${severity} ${message}`, ...params);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Emitter, Event } from './event';\nimport { ILoggerClient, ILogLevelChangedEvent } from './logger-protocol';\n\n@injectable()\nexport class LoggerWatcher {\n\n    getLoggerClient(): ILoggerClient {\n        const emitter = this.onLogLevelChangedEmitter;\n        return {\n            onLogLevelChanged(event: ILogLevelChangedEvent): void {\n                emitter.fire(event);\n            }\n        };\n    }\n\n    private onLogLevelChangedEmitter = new Emitter<ILogLevelChangedEvent>();\n\n    get onLogLevelChanged(): Event<ILogLevelChangedEvent> {\n        return this.onLogLevelChangedEmitter.event;\n    }\n\n    // FIXME: get rid of it, backend services should as well set a client on the server\n    fireLogLevelChanged(event: ILogLevelChangedEvent): void {\n        this.onLogLevelChangedEmitter.fire(event);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { LoggerWatcher } from './logger-watcher';\nimport { ILoggerServer, LogLevel, ConsoleLogger, rootLoggerName } from './logger-protocol';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport {\n    LogLevel, rootLoggerName\n};\n\n/* This is to be initialized from container composition root. It can be used outside of the inversify context.  */\nexport let logger: ILogger;\n\n/**\n * Counterpart of the `#setRootLogger(ILogger)`. Restores the `console.xxx` bindings to the original one.\n * Invoking has no side-effect if `setRootLogger` was not called before. Multiple function invocation has\n * no side-effect either.\n */\nexport function unsetRootLogger(): void {\n    if (logger !== undefined) {\n        ConsoleLogger.reset();\n        (<any>logger) = undefined;\n    }\n}\n\nexport function setRootLogger(aLogger: ILogger): void {\n    logger = aLogger;\n    const log = (logLevel: number, message?: any, ...optionalParams: any[]) =>\n        logger.log(logLevel, message, ...optionalParams);\n\n    console.error = log.bind(undefined, LogLevel.ERROR);\n    console.warn = log.bind(undefined, LogLevel.WARN);\n    console.info = log.bind(undefined, LogLevel.INFO);\n    console.debug = log.bind(undefined, LogLevel.DEBUG);\n    console.trace = log.bind(undefined, LogLevel.TRACE);\n    console.log = log.bind(undefined, LogLevel.INFO);\n}\n\nexport type Log = (message: any, ...params: any[]) => void;\nexport type Loggable = (log: Log) => void;\n\nexport const LoggerFactory = Symbol('LoggerFactory');\nexport type LoggerFactory = (name: string) => ILogger;\n\nexport const LoggerName = Symbol('LoggerName');\n\nexport const ILogger = Symbol('ILogger');\n\nexport interface ILogger {\n    /**\n     * Set the log level.\n     *\n     * @param loglevel - The loglevel to set. see Logger.LogLevel for\n     * possible options.\n     */\n    setLogLevel(logLevel: number): Promise<void>\n    /**\n     * Get the log level.\n     *\n     * @returns a Promise to the log level.\n     */\n    getLogLevel(): Promise<number>;\n\n    /**\n     * Test whether the given log level is enabled.\n     */\n    isEnabled(logLevel: number): Promise<boolean>;\n    /**\n     * Resolve if the given log is enabled.\n     */\n    ifEnabled(logLevel: number): Promise<void>;\n    /**\n     * Log a loggable with the given level if it is enabled.\n     */\n    log(logLevel: number, loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the given level if it is enabled.\n     *\n     * @param logLevel - The loglevel to use.\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    log(logLevel: number, message: any, ...params: any[]): void;\n\n    /**\n     * Test whether the trace level is enabled.\n     */\n    isTrace(): Promise<boolean>;\n    /**\n     * Resolve if the trace level is enabled.\n     */\n    ifTrace(): Promise<void>;\n    /**\n     * Log a loggable with the trace level if it is enabled.\n     */\n    trace(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the trace level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    trace(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the debug level is enabled.\n     */\n    isDebug(): Promise<boolean>;\n    /**\n     * Resolve if the debug level is enabled.\n     */\n    ifDebug(): Promise<void>;\n    /**\n     * Log a loggable with the debug level if it is enabled.\n     */\n    debug(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the debug level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    debug(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the info level is enabled.\n     */\n    isInfo(): Promise<boolean>;\n    /**\n     * Resolve if the info level is enabled.\n     */\n    ifInfo(): Promise<void>;\n    /**\n     * Log a loggable with the info level if it is enabled.\n     */\n    info(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the info level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    info(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the warn level is enabled.\n     */\n    isWarn(): Promise<boolean>;\n    /**\n     * Resolve if the warn level is enabled.\n     */\n    ifWarn(): Promise<void>;\n    /**\n     * Log a loggable with the warn level if it is enabled.\n     */\n    warn(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the warn level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    warn(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the error level is enabled.\n     */\n    isError(): Promise<boolean>;\n    /**\n     * Resolve if the error level is enabled.\n     */\n    ifError(): Promise<void>;\n    /**\n     * Log a loggable with the error level if it is enabled.\n     */\n    error(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the error level.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    error(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the fatal level is enabled.\n     */\n    isFatal(): Promise<boolean>;\n    /**\n     * Resolve if the fatal level is enabled.\n     */\n    ifFatal(): Promise<void>;\n    /**\n     * Log a loggable with the fatal level if it is enabled.\n     */\n    fatal(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the fatal level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    fatal(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Create a child logger from this logger.\n     *\n     * @param name - The name of the child logger.\n     */\n    child(name: string): ILogger;\n}\n\n@injectable()\nexport class Logger implements ILogger {\n\n    /* Log level for the logger.  */\n    protected _logLevel: Promise<number>;\n\n    /* A promise resolved when the logger has been created by the backend.  */\n    protected created: Promise<void>;\n\n    /**\n     * Build a new Logger.\n     */\n    constructor(\n        @inject(ILoggerServer) protected readonly server: ILoggerServer,\n        @inject(LoggerWatcher) protected readonly loggerWatcher: LoggerWatcher,\n        @inject(LoggerFactory) protected readonly factory: LoggerFactory,\n        @inject(LoggerName) protected name: string) {\n\n        if (name !== rootLoggerName) {\n            /* Creating a child logger.  */\n            this.created = server.child(name);\n        } else {\n            /* Creating the root logger (it already exists at startup).  */\n            this.created = Promise.resolve();\n        }\n\n        /* Fetch the log level so it's cached in the frontend.  */\n        this._logLevel = this.created.then(_ => this.server.getLogLevel(name));\n\n        /* Update the log level if it changes in the backend. */\n        loggerWatcher.onLogLevelChanged(event => {\n            this.created.then(() => {\n                if (event.loggerName === name) {\n                    this._logLevel = Promise.resolve(event.newLogLevel);\n                }\n            });\n        });\n    }\n\n    setLogLevel(logLevel: number): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.created.then(() => {\n                this._logLevel.then(oldLevel => {\n                    this.server.setLogLevel(this.name, logLevel).then(() => {\n                        this._logLevel = Promise.resolve(logLevel);\n                        resolve();\n                    });\n                });\n            });\n        });\n    }\n    getLogLevel(): Promise<number> {\n        return this._logLevel;\n    }\n\n    isEnabled(logLevel: number): Promise<boolean> {\n        return this._logLevel.then(level =>\n            logLevel >= level\n        );\n    }\n    ifEnabled(logLevel: number): Promise<void> {\n        return new Promise<void>(resolve =>\n            this.isEnabled(logLevel).then(enabled => {\n                if (enabled) {\n                    resolve();\n                }\n            })\n        );\n    }\n    log(logLevel: number, arg2: any | Loggable, ...params: any[]): Promise<void> {\n        return this.getLog(logLevel).then(log => {\n            if (typeof arg2 === 'function') {\n                const loggable = arg2;\n                loggable(log);\n            } else if (arg2) {\n                log(arg2, ...params);\n            }\n        });\n    }\n    protected getLog(logLevel: number): Promise<Log> {\n        return this.ifEnabled(logLevel).then(() =>\n            this.created.then(() =>\n                (message: any, ...params: any[]) =>\n                    this.server.log(this.name, logLevel, this.format(message), params.map(p => this.format(p)))\n            )\n        );\n    }\n    protected format(value: any): any {\n        if (value instanceof Error) {\n            return value.stack || value.toString();\n        }\n        return value;\n    }\n\n    isTrace(): Promise<boolean> {\n        return this.isEnabled(LogLevel.TRACE);\n    }\n    ifTrace(): Promise<void> {\n        return this.ifEnabled(LogLevel.TRACE);\n    }\n    trace(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.TRACE, arg, ...params);\n    }\n\n    isDebug(): Promise<boolean> {\n        return this.isEnabled(LogLevel.DEBUG);\n    }\n    ifDebug(): Promise<void> {\n        return this.ifEnabled(LogLevel.DEBUG);\n    }\n    debug(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.DEBUG, arg, ...params);\n    }\n\n    isInfo(): Promise<boolean> {\n        return this.isEnabled(LogLevel.INFO);\n    }\n    ifInfo(): Promise<void> {\n        return this.ifEnabled(LogLevel.INFO);\n    }\n    info(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.INFO, arg, ...params);\n    }\n\n    isWarn(): Promise<boolean> {\n        return this.isEnabled(LogLevel.WARN);\n    }\n    ifWarn(): Promise<void> {\n        return this.ifEnabled(LogLevel.WARN);\n    }\n    warn(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.WARN, arg, ...params);\n    }\n\n    isError(): Promise<boolean> {\n        return this.isEnabled(LogLevel.ERROR);\n    }\n    ifError(): Promise<void> {\n        return this.ifEnabled(LogLevel.ERROR);\n    }\n    error(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.ERROR, arg, ...params);\n    }\n\n    isFatal(): Promise<boolean> {\n        return this.isEnabled(LogLevel.FATAL);\n    }\n    ifFatal(): Promise<void> {\n        return this.ifEnabled(LogLevel.FATAL);\n    }\n    fatal(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.FATAL, arg, ...params);\n    }\n\n    child(name: string): ILogger {\n        return this.factory(name);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Range } from 'vscode-languageserver-types';\n\nexport interface TextDocumentContentChangeDelta {\n    readonly range: Range;\n    readonly rangeLength?: number;\n    readonly text: string;\n}\nexport namespace TextDocumentContentChangeDelta {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(arg: any): arg is TextDocumentContentChangeDelta {\n        return !!arg && typeof arg['text'] === 'string' && (typeof arg['rangeLength'] === 'number' || typeof arg['rangeLength'] === 'undefined') && Range.is(arg['range']);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { Disposable } from './disposable';\nimport { CommandRegistry, Command } from './command';\nimport { ContributionProvider } from './contribution-provider';\n\n/**\n * A menu entry representing an action, e.g. \"New File\".\n */\nexport interface MenuAction {\n    /**\n     * The command to execute.\n     */\n    commandId: string\n    /**\n     * In addition to the mandatory command property, an alternative command can be defined.\n     * It will be shown and invoked when pressing Alt while opening a menu.\n     */\n    alt?: string;\n    /**\n     * A specific label for this action. If not specified the command label or command id will be used.\n     */\n    label?: string\n    /**\n     * Icon class(es). If not specified the icon class associated with the specified command\n     * (i.e. `command.iconClass`) will be used if it exists.\n     */\n    icon?: string\n    /**\n     * Menu entries are sorted in ascending order based on their `order` strings. If omitted the determined\n     * label will be used instead.\n     */\n    order?: string\n    /**\n     * Optional expression which will be evaluated by the {@link ContextKeyService} to determine visibility\n     * of the action, e.g. `resourceLangId == markdown`.\n     */\n    when?: string\n}\n\nexport namespace MenuAction {\n    /* Determine whether object is a MenuAction */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function is(arg: MenuAction | any): arg is MenuAction {\n        return !!arg && arg === Object(arg) && 'commandId' in arg;\n    }\n}\n\n/**\n * Additional options when creating a new submenu.\n */\nexport interface SubMenuOptions {\n    /**\n     * The class to use for the submenu icon.\n     */\n    iconClass?: string\n    /**\n     * Menu entries are sorted in ascending order based on their `order` strings. If omitted the determined\n     * label will be used instead.\n     */\n    order?: string\n}\n\nexport type MenuPath = string[];\n\nexport const MAIN_MENU_BAR: MenuPath = ['menubar'];\n\nexport const SETTINGS_MENU: MenuPath = ['settings_menu'];\nexport const ACCOUNTS_MENU: MenuPath = ['accounts_menu'];\nexport const ACCOUNTS_SUBMENU = [...ACCOUNTS_MENU, '1_accounts_submenu'];\n\nexport const MenuContribution = Symbol('MenuContribution');\n\n/**\n * Representation of a menu contribution.\n *\n * Note that there are also convenience classes which combine multiple contributions into one.\n * For example to register a view together with a menu and keybinding you could use\n * {@link AbstractViewContribution} instead.\n *\n * ### Example usage\n *\n * ```ts\n * import { MenuContribution, MenuModelRegistry, MAIN_MENU_BAR } from '@theia/core';\n *\n * @injectable()\n * export class NewMenuContribution implements MenuContribution {\n *    registerMenus(menus: MenuModelRegistry): void {\n *         const menuPath = [...MAIN_MENU_BAR, '99_mymenu'];\n *         menus.registerSubmenu(menuPath, 'My Menu');\n *\n *         menus.registerMenuAction(menuPath, {\n *            commandId: MyCommand.id,\n *            label: 'My Action'\n *         });\n *     }\n * }\n * ```\n */\nexport interface MenuContribution {\n    /**\n     * Registers menus.\n     * @param menus the menu model registry.\n     */\n    registerMenus(menus: MenuModelRegistry): void;\n}\n\n/**\n * The MenuModelRegistry allows to register and unregister menus, submenus and actions\n * via strings and {@link MenuAction}s without the need to access the underlying UI\n * representation.\n */\n@injectable()\nexport class MenuModelRegistry {\n    protected readonly root = new CompositeMenuNode('');\n\n    constructor(\n        @inject(ContributionProvider) @named(MenuContribution)\n        protected readonly contributions: ContributionProvider<MenuContribution>,\n        @inject(CommandRegistry) protected readonly commands: CommandRegistry\n    ) { }\n\n    onStart(): void {\n        for (const contrib of this.contributions.getContributions()) {\n            contrib.registerMenus(this);\n        }\n    }\n\n    /**\n     * Adds the given menu action to the menu denoted by the given path.\n     *\n     * @returns a disposable which, when called, will remove the menu action again.\n     */\n    registerMenuAction(menuPath: MenuPath, item: MenuAction): Disposable {\n        const menuNode = new ActionMenuNode(item, this.commands);\n        return this.registerMenuNode(menuPath, menuNode);\n    }\n\n    /**\n     * Adds the given menu node to the menu denoted by the given path.\n     *\n     * @returns a disposable which, when called, will remove the menu node again.\n     */\n    registerMenuNode(menuPath: MenuPath, menuNode: MenuNode): Disposable {\n        const parent = this.findGroup(menuPath);\n        return parent.addNode(menuNode);\n    }\n\n    /**\n     * Register a new menu at the given path with the given label.\n     * (If the menu already exists without a label, iconClass or order this method can be used to set them.)\n     *\n     * @param menuPath the path for which a new submenu shall be registered.\n     * @param label the label to be used for the new submenu.\n     * @param options optionally allows to set an icon class and specify the order of the new menu.\n     *\n     * @returns if the menu was successfully created a disposable will be returned which,\n     * when called, will remove the menu again. If the menu already existed a no-op disposable\n     * will be returned.\n     *\n     * Note that if the menu already existed and was registered with a different label an error\n     * will be thrown.\n     */\n    registerSubmenu(menuPath: MenuPath, label: string, options?: SubMenuOptions): Disposable {\n        if (menuPath.length === 0) {\n            throw new Error('The sub menu path cannot be empty.');\n        }\n        const index = menuPath.length - 1;\n        const menuId = menuPath[index];\n        const groupPath = index === 0 ? [] : menuPath.slice(0, index);\n        const parent = this.findGroup(groupPath, options);\n        let groupNode = this.findSubMenu(parent, menuId, options);\n        if (!groupNode) {\n            groupNode = new CompositeMenuNode(menuId, label, options);\n            return parent.addNode(groupNode);\n        } else {\n            if (!groupNode.label) {\n                groupNode.label = label;\n            } else if (groupNode.label !== label) {\n                throw new Error(\"The group '\" + menuPath.join('/') + \"' already has a different label.\");\n            }\n            if (options) {\n                if (!groupNode.iconClass) {\n                    groupNode.iconClass = options.iconClass;\n                }\n                if (!groupNode.order) {\n                    groupNode.order = options.order;\n                }\n            }\n            return { dispose: () => { } };\n        }\n    }\n\n    /**\n     * Unregister all menu nodes with the same id as the given menu action.\n     *\n     * @param item the item whose id will be used.\n     * @param menuPath if specified only nodes within the path will be unregistered.\n     */\n    unregisterMenuAction(item: MenuAction, menuPath?: MenuPath): void;\n    /**\n     * Unregister all menu nodes with the same id as the given command.\n     *\n     * @param command the command whose id will be used.\n     * @param menuPath if specified only nodes within the path will be unregistered.\n     */\n    unregisterMenuAction(command: Command, menuPath?: MenuPath): void;\n    /**\n     * Unregister all menu nodes with the given id.\n     *\n     * @param id the id which shall be removed.\n     * @param menuPath if specified only nodes within the path will be unregistered.\n     */\n    unregisterMenuAction(id: string, menuPath?: MenuPath): void;\n    unregisterMenuAction(itemOrCommandOrId: MenuAction | Command | string, menuPath?: MenuPath): void {\n        const id = MenuAction.is(itemOrCommandOrId) ? itemOrCommandOrId.commandId\n            : Command.is(itemOrCommandOrId) ? itemOrCommandOrId.id\n                : itemOrCommandOrId;\n\n        if (menuPath) {\n            const parent = this.findGroup(menuPath);\n            parent.removeNode(id);\n            return;\n        }\n\n        this.unregisterMenuNode(id);\n    }\n\n    /**\n     * Recurse all menus, removing any menus matching the `id`.\n     *\n     * @param id technical identifier of the `MenuNode`.\n     */\n    unregisterMenuNode(id: string): void {\n        const recurse = (root: CompositeMenuNode) => {\n            root.children.forEach(node => {\n                if (node instanceof CompositeMenuNode) {\n                    node.removeNode(id);\n                    recurse(node);\n                }\n            });\n        };\n        recurse(this.root);\n    }\n\n    protected findGroup(menuPath: MenuPath, options?: SubMenuOptions): CompositeMenuNode {\n        let currentMenu = this.root;\n        for (const segment of menuPath) {\n            currentMenu = this.findSubMenu(currentMenu, segment, options);\n        }\n        return currentMenu;\n    }\n\n    protected findSubMenu(current: CompositeMenuNode, menuId: string, options?: SubMenuOptions): CompositeMenuNode {\n        const sub = current.children.find(e => e.id === menuId);\n        if (sub instanceof CompositeMenuNode) {\n            return sub;\n        }\n        if (sub) {\n            throw new Error(`'${menuId}' is not a menu group.`);\n        }\n        const newSub = new CompositeMenuNode(menuId, undefined, options);\n        current.addNode(newSub);\n        return newSub;\n    }\n\n    /**\n     * Returns the menu at the given path.\n     *\n     * @param menuPath the path specifying the menu to return. If not given the empty path will be used.\n     *\n     * @returns the root menu when `menuPath` is empty. If `menuPath` is not empty the specified menu is\n     * returned if it exists, otherwise an error is thrown.\n     */\n    getMenu(menuPath: MenuPath = []): CompositeMenuNode {\n        return this.findGroup(menuPath);\n    }\n}\n\n/**\n * Base interface of the nodes used in the menu tree structure.\n */\nexport interface MenuNode {\n    /**\n     * the optional label for this specific node.\n     */\n    readonly label?: string\n    /**\n     * technical identifier.\n     */\n    readonly id: string\n    /**\n     * Menu nodes are sorted in ascending order based on their `sortString`.\n     */\n    readonly sortString: string\n}\n\n/**\n * Node representing a (sub)menu in the menu tree structure.\n */\nexport class CompositeMenuNode implements MenuNode {\n    protected readonly _children: MenuNode[] = [];\n    public iconClass?: string;\n    public order?: string;\n\n    constructor(\n        public readonly id: string,\n        public label?: string,\n        options?: SubMenuOptions\n    ) {\n        if (options) {\n            this.iconClass = options.iconClass;\n            this.order = options.order;\n        }\n    }\n\n    get children(): ReadonlyArray<MenuNode> {\n        return this._children;\n    }\n\n    /**\n     * Inserts the given node at the position indicated by `sortString`.\n     *\n     * @returns a disposable which, when called, will remove the given node again.\n     */\n    public addNode(node: MenuNode): Disposable {\n        this._children.push(node);\n        this._children.sort((m1, m2) => {\n            // The navigation group is special as it will always be sorted to the top/beginning of a menu.\n            if (CompositeMenuNode.isNavigationGroup(m1)) {\n                return -1;\n            }\n            if (CompositeMenuNode.isNavigationGroup(m2)) {\n                return 1;\n            }\n            if (m1.sortString < m2.sortString) {\n                return -1;\n            } else if (m1.sortString > m2.sortString) {\n                return 1;\n            } else {\n                return 0;\n            }\n        });\n        return {\n            dispose: () => {\n                const idx = this._children.indexOf(node);\n                if (idx >= 0) {\n                    this._children.splice(idx, 1);\n                }\n            }\n        };\n    }\n\n    /**\n     * Removes the first node with the given id.\n     *\n     * @param id node id.\n     */\n    public removeNode(id: string): void {\n        const node = this._children.find(n => n.id === id);\n        if (node) {\n            const idx = this._children.indexOf(node);\n            if (idx >= 0) {\n                this._children.splice(idx, 1);\n            }\n        }\n    }\n\n    get sortString(): string {\n        return this.order || this.id;\n    }\n\n    get isSubmenu(): boolean {\n        return this.label !== undefined;\n    }\n\n    /**\n     * Indicates whether the given node is the special `navigation` menu.\n     *\n     * @param node the menu node to check.\n     * @returns `true` when the given node is a {@link CompositeMenuNode} with id `navigation`,\n     * `false` otherwise.\n     */\n    static isNavigationGroup(node: MenuNode): node is CompositeMenuNode {\n        return node instanceof CompositeMenuNode && node.id === 'navigation';\n    }\n}\n\n/**\n * Node representing an action in the menu tree structure.\n * It's based on {@link MenuAction} for which it tries to determine the\n * best label, icon and sortString with the given data.\n */\nexport class ActionMenuNode implements MenuNode {\n\n    readonly altNode: ActionMenuNode | undefined;\n\n    constructor(\n        public readonly action: MenuAction,\n        protected readonly commands: CommandRegistry\n    ) {\n        if (action.alt) {\n            this.altNode = new ActionMenuNode({ commandId: action.alt }, commands);\n        }\n    }\n\n    get id(): string {\n        return this.action.commandId;\n    }\n\n    get label(): string {\n        if (this.action.label) {\n            return this.action.label;\n        }\n        const cmd = this.commands.getCommand(this.action.commandId);\n        if (!cmd) {\n            throw new Error(`A command with id '${this.action.commandId}' does not exist.`);\n        }\n        return cmd.label || cmd.id;\n    }\n\n    get icon(): string | undefined {\n        if (this.action.icon) {\n            return this.action.icon;\n        }\n        const command = this.commands.getCommand(this.action.commandId);\n        return command && command.iconClass;\n    }\n\n    get sortString(): string {\n        return this.action.order || this.label;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { CancellationToken } from './cancellation';\n\nexport const messageServicePath = '/services/messageService';\n\nexport enum MessageType {\n    Error = 1,\n    Warning = 2,\n    Info = 3,\n    Log = 4,\n    Progress = 5\n}\n\nexport interface Message {\n    /**\n     * Type of the message, i.e. error, warning, info, etc.\n     */\n    readonly type?: MessageType;\n    /**\n     * Message text.\n     */\n    readonly text: string;\n    /**\n     * Actions offered to the user in the context of the message.\n     */\n    readonly actions?: string[];\n    /**\n     * Additional options.\n     */\n    readonly options?: MessageOptions;\n    readonly source?: string;\n}\n\nexport interface ProgressMessage extends Message {\n    readonly type?: MessageType.Progress;\n    readonly options?: ProgressMessageOptions;\n}\nexport namespace ProgressMessage {\n    export const Cancel = 'Cancel';\n    export function isCancelable(message: ProgressMessage): boolean {\n        return !!message.options?.cancelable;\n    }\n}\n\nexport interface MessageOptions {\n    /**\n     * Timeout in milliseconds.\n     * `0` and negative values are treated as no timeout.\n     */\n    readonly timeout?: number;\n}\n\nexport interface ProgressMessageOptions extends MessageOptions {\n    /**\n     * Default: `false`\n     */\n    readonly cancelable?: boolean;\n    /**\n     * Known values: `notification` | `window` | `scm`\n     */\n    readonly location?: string;\n}\n\nexport interface Progress {\n    /**\n     * Unique progress id.\n     */\n    readonly id: string;\n    /**\n     * Update the current progress.\n     *\n     * @param update the data to update.\n     */\n    readonly report: (update: ProgressUpdate) => void;\n    /**\n     * Cancel or complete the current progress.\n     */\n    readonly cancel: () => void;\n    /**\n     * Result of the progress.\n     *\n     * @returns a promise which resolves to either 'Cancel', an alternative action or `undefined`.\n     */\n    readonly result: Promise<string | undefined>;\n}\n\nexport interface ProgressUpdate {\n    /**\n     * Updated message for the progress.\n     */\n    readonly message?: string;\n    /**\n     * Updated ratio between steps done so far and total number of steps.\n     */\n    readonly work?: { done: number, total: number };\n}\n\n@injectable()\nexport class MessageClient {\n\n    /**\n     * Show a message of the given type and possible actions to the user.\n     * Resolve to a chosen action.\n     * Never reject.\n     *\n     * To be implemented by an extension, e.g. by the messages extension.\n     */\n    showMessage(message: Message): Promise<string | undefined> {\n        console.info(message.text);\n        return Promise.resolve(undefined);\n    }\n\n    /**\n     * Show a progress message with possible actions to user.\n     *\n     * To be implemented by an extension, e.g. by the messages extension.\n     */\n    showProgress(progressId: string, message: ProgressMessage, cancellationToken: CancellationToken): Promise<string | undefined> {\n        console.info(message.text);\n        return Promise.resolve(undefined);\n    }\n\n    /**\n     * Update a previously created progress message.\n     *\n     * To be implemented by an extension, e.g. by the messages extension.\n     */\n    reportProgress(progressId: string, update: ProgressUpdate, message: ProgressMessage, cancellationToken: CancellationToken): Promise<void> {\n        return Promise.resolve(undefined);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport {\n    MessageClient,\n    MessageType,\n    MessageOptions,\n    Progress,\n    ProgressUpdate,\n    ProgressMessage\n} from './message-service-protocol';\nimport { CancellationTokenSource } from './cancellation';\n\n/**\n * Service to log and categorize messages, show progress information and offer actions.\n *\n * The messages are processed by this service and forwarded to an injected {@link MessageClient}.\n * For example \"@theia/messages\" provides such a client, rendering messages as notifications\n * in the frontend.\n *\n * ### Example usage\n *\n * ```typescript\n *   @inject(MessageService)\n *   protected readonly messageService: MessageService;\n *\n *   messageService.warn(\"Typings not available\");\n *\n *   messageService.error(\"Could not restore state\", [\"Rollback\", \"Ignore\"])\n *   .then(action => action === \"Rollback\" && rollback());\n * ```\n */\n@injectable()\nexport class MessageService {\n\n    constructor(\n        @inject(MessageClient) protected readonly client: MessageClient\n    ) { }\n\n    /**\n     * Logs the message and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    log<T extends string>(message: string, ...actions: T[]): Promise<T | undefined>;\n    /**\n     * Logs the message and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param options additional options. Can be omitted\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    log<T extends string>(message: string, options?: MessageOptions, ...actions: T[]): Promise<T | undefined>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    log(message: string, ...args: any[]): Promise<string | undefined> {\n        return this.processMessage(MessageType.Log, message, args);\n    }\n\n    /**\n     * Logs the message as \"info\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    info<T extends string>(message: string, ...actions: T[]): Promise<T | undefined>;\n    /**\n     * Logs the message as \"info\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param options additional options. Can be omitted\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    info<T extends string>(message: string, options?: MessageOptions, ...actions: T[]): Promise<T | undefined>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    info(message: string, ...args: any[]): Promise<string | undefined> {\n        return this.processMessage(MessageType.Info, message, args);\n    }\n\n    /**\n     * Logs the message as \"warning\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    warn<T extends string>(message: string, ...actions: T[]): Promise<T | undefined>;\n    /**\n     * Logs the message as \"warning\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param options additional options. Can be omitted\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    warn<T extends string>(message: string, options?: MessageOptions, ...actions: T[]): Promise<T | undefined>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    warn(message: string, ...args: any[]): Promise<string | undefined> {\n        return this.processMessage(MessageType.Warning, message, args);\n    }\n\n    /**\n     * Logs the message as \"error\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    error<T extends string>(message: string, ...actions: T[]): Promise<T | undefined>;\n    /**\n     * Logs the message as \"error\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param options additional options. Can be omitted\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    error<T extends string>(message: string, options?: MessageOptions, ...actions: T[]): Promise<T | undefined>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error(message: string, ...args: any[]): Promise<string | undefined> {\n        return this.processMessage(MessageType.Error, message, args);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected processMessage(type: MessageType, text: string, args?: any[]): Promise<string | undefined> {\n        if (!!args && args.length > 0) {\n            const first = args[0];\n            const actions = Array.from(new Set<string>(args.filter(a => typeof a === 'string')));\n            const options = (typeof first === 'object' && !Array.isArray(first))\n                ? <MessageOptions>first\n                : undefined;\n            return this.client.showMessage({ type, options, text, actions });\n        }\n        return this.client.showMessage({ type, text });\n    }\n\n    /**\n     * Shows the given message as a progress.\n     *\n     * @param message the message to show for the progress.\n     * @param onDidCancel an optional callback which will be invoked if the progress indicator was canceled.\n     *\n     * @returns a promise resolving to a {@link Progress} object with which the progress can be updated.\n     *\n     * ### Example usage\n     *\n     * ```typescript\n     *   @inject(MessageService)\n     *   protected readonly messageService: MessageService;\n     *\n     *   // this will show \"Progress\" as a cancelable message\n     *   this.messageService.showProgress({text: 'Progress'});\n     *\n     *   // this will show \"Rolling back\" with \"Cancel\" and an additional \"Skip\" action\n     *   this.messageService.showProgress({\n     *     text: `Rolling back`,\n     *     actions: [\"Skip\"],\n     *   },\n     *   () => console.log(\"canceled\"))\n     *   .then((progress) => {\n     *     // register if interested in the result (only necessary for custom actions)\n     *     progress.result.then((result) => {\n     *       // will be 'Cancel', 'Skip' or `undefined`\n     *       console.log(\"result is\", result);\n     *     });\n     *     progress.report({message: \"Cleaning references\", work: {done: 10, total: 100}});\n     *     progress.report({message: \"Restoring previous state\", work: {done: 80, total: 100}});\n     *     progress.report({message: \"Complete\", work: {done: 100, total: 100}});\n     *     // we are done so we can cancel the progress message, note that this will also invoke `onDidCancel`\n     *     progress.cancel();\n     *   });\n     * ```\n     */\n    async showProgress(message: ProgressMessage, onDidCancel?: () => void): Promise<Progress> {\n        const id = this.newProgressId();\n        const cancellationSource = new CancellationTokenSource();\n        const report = (update: ProgressUpdate) => {\n            this.client.reportProgress(id, update, message, cancellationSource.token);\n        };\n        const actions = new Set<string>(message.actions);\n        if (ProgressMessage.isCancelable(message)) {\n            actions.delete(ProgressMessage.Cancel);\n            actions.add(ProgressMessage.Cancel);\n        }\n        const clientMessage = { ...message, actions: Array.from(actions) };\n        const result = this.client.showProgress(id, clientMessage, cancellationSource.token);\n        if (ProgressMessage.isCancelable(message) && typeof onDidCancel === 'function') {\n            result.then(value => {\n                if (value === ProgressMessage.Cancel) {\n                    onDidCancel();\n                }\n            });\n        }\n        return {\n            id,\n            cancel: () => cancellationSource.cancel(),\n            result,\n            report\n        };\n    }\n\n    private progressIdPrefix = Math.random().toString(36).substring(5);\n    private counter = 0;\n    protected newProgressId(): string {\n        return `${this.progressIdPrefix}-${++this.counter}`;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Message } from 'vscode-ws-jsonrpc';\nimport { ILogger } from '../../common';\n\nexport interface ResolvedConnectionErrorHandlerOptions {\n    readonly serverName: string\n    readonly logger: ILogger\n    /**\n     * The maximum amount of errors allowed before stopping the server.\n     */\n    readonly maxErrors: number\n    /**\n     * The minimum amount of restarts allowed in the restart interval.\n     */\n    readonly maxRestarts: number\n    /**\n     * In minutes.\n     */\n    readonly restartInterval: number\n}\n\nexport type ConnectionErrorHandlerOptions = Partial<ResolvedConnectionErrorHandlerOptions> & {\n    readonly serverName: string\n    readonly logger: ILogger\n};\n\nexport class ConnectionErrorHandler {\n\n    protected readonly options: ResolvedConnectionErrorHandlerOptions;\n    constructor(options: ConnectionErrorHandlerOptions) {\n        this.options = {\n            maxErrors: 3,\n            maxRestarts: 5,\n            restartInterval: 3,\n            ...options\n        };\n    }\n\n    shouldStop(error: Error, message?: Message, count?: number): boolean {\n        return !count || count > this.options.maxErrors;\n    }\n\n    protected readonly restarts: number[] = [];\n    shouldRestart(): boolean {\n        this.restarts.push(Date.now());\n        if (this.restarts.length <= this.options.maxRestarts) {\n            return true;\n        }\n        const diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\n        if (diff <= this.options.restartInterval * 60 * 1000) {\n            // eslint-disable-next-line max-len\n            this.options.logger.error(`The ${this.options.serverName} server crashed ${this.options.maxRestarts} times in the last ${this.options.restartInterval} minutes. The server will not be restarted.`);\n            return false;\n        }\n        this.restarts.shift();\n        return true;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { MessageConnection } from 'vscode-ws-jsonrpc';\n\nexport const ConnectionHandler = Symbol('ConnectionHandler');\n\nexport interface ConnectionHandler {\n    readonly path: string;\n    onConnection(connection: MessageConnection): void;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './handler';\nexport * from './proxy-factory';\nexport * from './connection-error-handler';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { MessageConnection, ResponseError } from 'vscode-ws-jsonrpc';\nimport { ApplicationError } from '../application-error';\nimport { Event, Emitter } from '../event';\nimport { Disposable } from '../disposable';\nimport { ConnectionHandler } from './handler';\n\nexport type JsonRpcServer<Client> = Disposable & {\n    /**\n     * If this server is a proxy to a remote server then\n     * a client is used as a local object\n     * to handle JSON-RPC messages from the remote server.\n     */\n    setClient(client: Client | undefined): void;\n    getClient?(): Client | undefined;\n};\n\nexport interface JsonRpcConnectionEventEmitter {\n    readonly onDidOpenConnection: Event<void>;\n    readonly onDidCloseConnection: Event<void>;\n}\nexport type JsonRpcProxy<T> = T & JsonRpcConnectionEventEmitter;\n\nexport class JsonRpcConnectionHandler<T extends object> implements ConnectionHandler {\n    constructor(\n        readonly path: string,\n        readonly targetFactory: (proxy: JsonRpcProxy<T>) => any,\n        readonly factoryConstructor: new () => JsonRpcProxyFactory<T> = JsonRpcProxyFactory\n    ) { }\n\n    onConnection(connection: MessageConnection): void {\n        const factory = new this.factoryConstructor();\n        const proxy = factory.createProxy();\n        factory.target = this.targetFactory(proxy);\n        factory.listen(connection);\n    }\n}\n\n/**\n * Factory for JSON-RPC proxy objects.\n *\n * A JSON-RPC proxy exposes the programmatic interface of an object through\n * JSON-RPC.  This allows remote programs to call methods of this objects by\n * sending JSON-RPC requests.  This takes place over a bi-directional stream,\n * where both ends can expose an object and both can call methods each other's\n * exposed object.\n *\n * For example, assuming we have an object of the following type on one end:\n *\n *     class Foo {\n *         bar(baz: number): number { return baz + 1 }\n *     }\n *\n * which we want to expose through a JSON-RPC interface.  We would do:\n *\n *     let target = new Foo()\n *     let factory = new JsonRpcProxyFactory<Foo>('/foo', target)\n *     factory.onConnection(connection)\n *\n * The party at the other end of the `connection`, in order to remotely call\n * methods on this object would do:\n *\n *     let factory = new JsonRpcProxyFactory<Foo>('/foo')\n *     factory.onConnection(connection)\n *     let proxy = factory.createProxy();\n *     let result = proxy.bar(42)\n *     // result is equal to 43\n *\n * One the wire, it would look like this:\n *\n *     --> {\"jsonrpc\": \"2.0\", \"id\": 0, \"method\": \"bar\", \"params\": {\"baz\": 42}}\n *     <-- {\"jsonrpc\": \"2.0\", \"id\": 0, \"result\": 43}\n *\n * Note that in the code of the caller, we didn't pass a target object to\n * JsonRpcProxyFactory, because we don't want/need to expose an object.\n * If we had passed a target object, the other side could've called methods on\n * it.\n *\n * @param <T> - The type of the object to expose to JSON-RPC.\n */\nexport class JsonRpcProxyFactory<T extends object> implements ProxyHandler<T> {\n\n    protected readonly onDidOpenConnectionEmitter = new Emitter<void>();\n    protected readonly onDidCloseConnectionEmitter = new Emitter<void>();\n\n    protected connectionPromiseResolve: (connection: MessageConnection) => void;\n    protected connectionPromise: Promise<MessageConnection>;\n\n    /**\n     * Build a new JsonRpcProxyFactory.\n     *\n     * @param target - The object to expose to JSON-RPC methods calls.  If this\n     *   is omitted, the proxy won't be able to handle requests, only send them.\n     */\n    constructor(public target?: any) {\n        this.waitForConnection();\n    }\n\n    protected waitForConnection(): void {\n        this.connectionPromise = new Promise(resolve =>\n            this.connectionPromiseResolve = resolve\n        );\n        this.connectionPromise.then(connection => {\n            connection.onClose(() =>\n                this.onDidCloseConnectionEmitter.fire(undefined)\n            );\n            this.onDidOpenConnectionEmitter.fire(undefined);\n        });\n    }\n\n    /**\n     * Connect a MessageConnection to the factory.\n     *\n     * This connection will be used to send/receive JSON-RPC requests and\n     * response.\n     */\n    listen(connection: MessageConnection): void {\n        connection.onRequest((prop, ...args) => this.onRequest(prop, ...args));\n        connection.onNotification((prop, ...args) => this.onNotification(prop, ...args));\n        connection.onDispose(() => this.waitForConnection());\n        connection.listen();\n        this.connectionPromiseResolve(connection);\n    }\n\n    /**\n     * Process an incoming JSON-RPC method call.\n     *\n     * onRequest is called when the JSON-RPC connection received a method call\n     * request.  It calls the corresponding method on [[target]].\n     *\n     * The return value is a Promise object that is resolved with the return\n     * value of the method call, if it is successful.  The promise is rejected\n     * if the called method does not exist or if it throws.\n     *\n     * @returns A promise of the method call completion.\n     */\n    protected async onRequest(method: string, ...args: any[]): Promise<any> {\n        try {\n            if (this.target) {\n                return await this.target[method](...args);\n            } else {\n                throw new Error(`no target was set to handle ${method}`);\n            }\n        } catch (error) {\n            const e = this.serializeError(error);\n            if (e instanceof ResponseError) {\n                throw e;\n            }\n            const reason = e.message || '';\n            const stack = e.stack || '';\n            console.error(`Request ${method} failed with error: ${reason}`, stack);\n            throw e;\n        }\n    }\n\n    /**\n     * Process an incoming JSON-RPC notification.\n     *\n     * Same as [[onRequest]], but called on incoming notifications rather than\n     * methods calls.\n     */\n    protected onNotification(method: string, ...args: any[]): void {\n        if (this.target) {\n            this.target[method](...args);\n        }\n    }\n\n    /**\n     * Create a Proxy exposing the interface of an object of type T.  This Proxy\n     * can be used to do JSON-RPC method calls on the remote target object as\n     * if it was local.\n     *\n     * If `T` implements `JsonRpcServer` then a client is used as a target object for a remote target object.\n     */\n    createProxy(): JsonRpcProxy<T> {\n        const result = new Proxy<T>(this as any, this);\n        return result as any;\n    }\n\n    /**\n     * Get a callable object that executes a JSON-RPC method call.\n     *\n     * Getting a property on the Proxy object returns a callable that, when\n     * called, executes a JSON-RPC call.  The name of the property defines the\n     * method to be called.  The callable takes a variable number of arguments,\n     * which are passed in the JSON-RPC method call.\n     *\n     * For example, if you have a Proxy object:\n     *\n     *     let fooProxyFactory = JsonRpcProxyFactory<Foo>('/foo')\n     *     let fooProxy = fooProxyFactory.createProxy()\n     *\n     * accessing `fooProxy.bar` will return a callable that, when called,\n     * executes a JSON-RPC method call to method `bar`.  Therefore, doing\n     * `fooProxy.bar()` will call the `bar` method on the remote Foo object.\n     *\n     * @param target - unused.\n     * @param p - The property accessed on the Proxy object.\n     * @param receiver - unused.\n     * @returns A callable that executes the JSON-RPC call.\n     */\n    get(target: T, p: PropertyKey, receiver: any): any {\n        if (p === 'setClient') {\n            return (client: any) => {\n                this.target = client;\n            };\n        }\n        if (p === 'getClient') {\n            return () => this.target;\n        }\n        if (p === 'onDidOpenConnection') {\n            return this.onDidOpenConnectionEmitter.event;\n        }\n        if (p === 'onDidCloseConnection') {\n            return this.onDidCloseConnectionEmitter.event;\n        }\n        const isNotify = this.isNotification(p);\n        return (...args: any[]) => {\n            const method = p.toString();\n            const capturedError = new Error(`Request '${method}' failed`);\n            return this.connectionPromise.then(connection =>\n                new Promise((resolve, reject) => {\n                    try {\n                        if (isNotify) {\n                            connection.sendNotification(method, ...args);\n                            resolve();\n                        } else {\n                            const resultPromise = connection.sendRequest(method, ...args) as Promise<any>;\n                            resultPromise\n                                .catch((err: any) => reject(this.deserializeError(capturedError, err)))\n                                .then((result: any) => resolve(result));\n                        }\n                    } catch (err) {\n                        reject(err);\n                    }\n                })\n            );\n        };\n    }\n\n    /**\n     * Return whether the given property represents a notification.\n     *\n     * A property leads to a notification rather than a method call if its name\n     * begins with `notify` or `on`.\n     *\n     * @param p - The property being called on the proxy.\n     * @return Whether `p` represents a notification.\n     */\n    protected isNotification(p: PropertyKey): boolean {\n        return p.toString().startsWith('notify') || p.toString().startsWith('on');\n    }\n\n    protected serializeError(e: any): any {\n        if (ApplicationError.is(e)) {\n            return new ResponseError(e.code, '',\n                Object.assign({ kind: 'application' }, e.toJson())\n            );\n        }\n        return e;\n    }\n    protected deserializeError(capturedError: Error, e: any): any {\n        if (e instanceof ResponseError) {\n            const capturedStack = capturedError.stack || '';\n            if (e.data && e.data.kind === 'application') {\n                const { stack, data, message } = e.data;\n                return ApplicationError.fromJson(e.code, {\n                    message: message || capturedError.message,\n                    data,\n                    stack: `${capturedStack}\\nCaused by: ${stack}`\n                });\n            }\n            e.stack = capturedStack;\n        }\n        return e;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport function deepClone<T>(obj: T): T {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const result: any = Array.isArray(obj) ? [] : {};\n    Object.keys(obj).forEach((key: string) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const prop = (<any>obj)[key];\n        if (prop && typeof prop === 'object') {\n            result[key] = deepClone(prop);\n        } else {\n            result[key] = prop;\n        }\n    });\n    return result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const stack: any[] = [obj];\n    while (stack.length > 0) {\n        const objectToFreeze = stack.shift();\n        Object.freeze(objectToFreeze);\n        for (const key in objectToFreeze) {\n            if (_hasOwnProperty.call(objectToFreeze, key)) {\n                const prop = objectToFreeze[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function notEmpty<T>(arg: T | undefined | null): arg is T {\n    // eslint-disable-next-line no-null/no-null\n    return arg !== undefined && arg !== null;\n}\n\n/**\n * `true` if the argument is an empty object. Otherwise, `false`.\n */\nexport function isEmpty(arg: Object): boolean {\n    return Object.keys(arg).length === 0 && arg.constructor === Object;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nfunction is(userAgent: string, platform: string): boolean {\n    if (typeof navigator !== 'undefined') {\n        if (navigator.userAgent && navigator.userAgent.indexOf(userAgent) >= 0) {\n            return true;\n        }\n    }\n    if (typeof process !== 'undefined') {\n        return (process.platform === platform);\n    }\n    return false;\n}\n\nexport const isWindows = is('Windows', 'win32');\nexport const isOSX = is('Mac', 'darwin');\n\nexport type CMD = [string, string[]];\nexport function cmd(command: string, ...args: string[]): CMD {\n    return [\n        isWindows ? 'cmd' : command,\n        isWindows ? ['/c', command, ...args] : args\n    ];\n}\n\nexport namespace OS {\n\n    /**\n     * Enumeration of the supported operating systems.\n     */\n    export enum Type {\n        Windows = 'Windows',\n        Linux = 'Linux',\n        OSX = 'OSX'\n    }\n\n    /**\n     * Returns with the type of the operating system. If it is neither [Windows](isWindows) nor [OS X](isOSX), then\n     * it always return with the `Linux` OS type.\n     */\n    export function type(): OS.Type {\n        if (isWindows) {\n            return Type.Windows;\n        }\n        if (isOSX) {\n            return Type.OSX;\n        }\n        return Type.Linux;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * On POSIX:\n * ┌──────────────────────┬────────────┐\n * │          dir         │    base    │\n * ├──────┬               ├──────┬─────┤\n * │ root │               │ name │ ext │\n * \"  /     home/user/dir / file  .txt \"\n * └──────┴───────────────┴──────┴─────┘\n *\n * On Windows:\n * ┌──────────────────────┬────────────┐\n * │           dir        │    base    │\n * ├──────┬               ├──────┬─────┤\n * │ root │               │ name │ ext │\n * \"  /c: / home/user/dir / file  .txt \"\n * └──────┴───────────────┴──────┴─────┘\n */\nexport class Path {\n    static separator: '/' = '/';\n\n    static isDrive(segment: string): boolean {\n        return segment.endsWith(':');\n    }\n\n    /**\n     * vscode-uri always normalizes drive letters to lower case:\n     * https://github.com/Microsoft/vscode-uri/blob/b1d3221579f97f28a839b6f996d76fc45e9964d8/src/index.ts#L1025\n     * Theia path should be adjusted to this.\n     */\n    static normalizeDrive(path: string): string {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* '/' */ && path.charCodeAt(2) === 58 /* ':' */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        } else if (path.length >= 2 && path.charCodeAt(1) === 58 /* ':' */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        return path;\n    }\n\n    /**\n     * Tildify path, replacing `home` with `~` if user's `home` is present at the beginning of the path.\n     * This is a non-operation for Windows.\n     *\n     * @param resourcePath\n     * @param home\n     */\n    static tildify(resourcePath: string, home: string): string {\n        const path = new Path(resourcePath);\n        const isWindows = path.root && Path.isDrive(path.root.base);\n\n        if (!isWindows && home && resourcePath.indexOf(`${home}/`) === 0) {\n            return resourcePath.replace(`${home}/`, '~/');\n        }\n\n        return resourcePath;\n    }\n\n    /**\n     * Untildify path, replacing `~` with `home` if `~` present at the beginning of the path.\n     * This is a non-operation for Windows.\n     *\n     * @param resourcePath\n     * @param home\n     */\n    static untildify(resourcePath: string, home: string): string {\n        if (resourcePath.startsWith('~')) {\n            const untildifiedResource = resourcePath.replace(/^~/, home);\n            const untildifiedPath = new Path(untildifiedResource);\n            const isWindows = untildifiedPath.root && Path.isDrive(untildifiedPath.root.base);\n            if (!isWindows && home && untildifiedResource.startsWith(`${home}`)) {\n                return untildifiedResource;\n            }\n        }\n        return resourcePath;\n    }\n\n    readonly isAbsolute: boolean;\n    readonly isRoot: boolean;\n    readonly root: Path | undefined;\n    readonly base: string;\n    readonly name: string;\n    readonly ext: string;\n\n    private _dir: Path;\n    private readonly raw: string;\n\n    /**\n     * The raw should be normalized, meaning that only '/' is allowed as a path separator.\n     */\n    constructor(\n        raw: string\n    ) {\n        this.raw = Path.normalizeDrive(raw);\n        const firstIndex = raw.indexOf(Path.separator);\n        const lastIndex = raw.lastIndexOf(Path.separator);\n        this.isAbsolute = firstIndex === 0;\n        this.base = lastIndex === -1 ? raw : raw.substr(lastIndex + 1);\n        this.isRoot = this.isAbsolute && firstIndex === lastIndex && (!this.base || Path.isDrive(this.base));\n        this.root = this.computeRoot();\n\n        const extIndex = this.base.lastIndexOf('.');\n        this.name = extIndex === -1 ? this.base : this.base.substr(0, extIndex);\n        this.ext = extIndex === -1 ? '' : this.base.substr(extIndex);\n    }\n\n    protected computeRoot(): Path | undefined {\n        // '/' -> '/'\n        // '/c:' -> '/c:'\n        if (this.isRoot) {\n            return this;\n        }\n        // 'foo/bar' -> `undefined`\n        if (!this.isAbsolute) {\n            return undefined;\n        }\n        const index = this.raw.indexOf(Path.separator, Path.separator.length);\n        if (index === -1) {\n            // '/foo/bar' -> '/'\n            return new Path(Path.separator);\n        }\n        // '/c:/foo/bar' -> '/c:'\n        // '/foo/bar' -> '/'\n        return new Path(this.raw.substr(0, index)).root;\n    }\n\n    /**\n     * Returns the parent directory if it exists (`hasDir === true`) or `this` otherwise.\n     */\n    get dir(): Path {\n        if (this._dir === undefined) {\n            this._dir = this.computeDir();\n        }\n        return this._dir;\n    }\n\n    /**\n     * Returns `true` if this has a parent directory, `false` otherwise.\n     *\n     * _This implementation returns `true` if and only if this is not the root dir and\n     * there is a path separator in the raw path._\n     */\n    get hasDir(): boolean {\n        return !this.isRoot && this.raw.lastIndexOf(Path.separator) !== -1;\n    }\n\n    protected computeDir(): Path {\n        if (!this.hasDir) {\n            return this;\n        }\n        const lastIndex = this.raw.lastIndexOf(Path.separator);\n        if (this.isAbsolute) {\n            const firstIndex = this.raw.indexOf(Path.separator);\n            if (firstIndex === lastIndex) {\n                return new Path(this.raw.substr(0, firstIndex + 1));\n            }\n        }\n        return new Path(this.raw.substr(0, lastIndex));\n    }\n\n    join(...paths: string[]): Path {\n        const relativePath = paths.filter(s => !!s).join(Path.separator);\n        if (!relativePath) {\n            return this;\n        }\n        if (this.raw.endsWith(Path.separator)) {\n            return new Path(this.raw + relativePath);\n        }\n        return new Path(this.raw + Path.separator + relativePath);\n    }\n\n    toString(): string {\n        return this.raw;\n    }\n\n    relative(path: Path): Path | undefined {\n        if (this.raw === path.raw) {\n            return new Path('');\n        }\n        if (!this.raw || !path.raw) {\n            return undefined;\n        }\n        const raw = this.base ? this.raw + Path.separator : this.raw;\n        if (!path.raw.startsWith(raw)) {\n            return undefined;\n        }\n        const relativePath = path.raw.substr(raw.length);\n        return new Path(relativePath);\n    }\n\n    isEqualOrParent(path: Path): boolean {\n        return !!this.relative(path);\n    }\n\n    relativity(path: Path): number {\n        const relative = this.relative(path);\n        if (relative) {\n            const relativeStr = relative.toString();\n            if (relativeStr === '') {\n                return 0;\n            }\n            return relativeStr.split(Path.separator).length;\n        }\n        return -1;\n    }\n\n    /*\n     * return a normalized Path, resolving '..' and '.' segments\n     */\n    normalize(): Path {\n        const trailingSlash = this.raw.endsWith('/');\n        const pathArray = this.toString().split('/');\n        const resultArray: string[] = [];\n        pathArray.forEach((value, index) => {\n            if (!value || value === '.') {\n                return;\n            }\n            if (value === '..') {\n                if (resultArray.length && resultArray[resultArray.length - 1] !== '..') {\n                    resultArray.pop();\n                } else if (!this.isAbsolute) {\n                    resultArray.push('..');\n                }\n            } else {\n                resultArray.push(value);\n            }\n        });\n        if (resultArray.length === 0) {\n            if (this.isRoot) {\n                return new Path('/');\n            } else {\n                return new Path('.');\n            }\n        }\n        return new Path((this.isAbsolute ? '/' : '') + resultArray.join('/') + (trailingSlash ? '/' : ''));\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {\n    ProgressUpdate,\n    ProgressMessage\n} from './message-service-protocol';\nimport { CancellationToken } from './cancellation';\n\nexport const ProgressClient = Symbol('ProgressClient');\nexport interface ProgressClient {\n\n    /**\n     * Show a progress message with possible actions to user.\n     */\n    showProgress(progressId: string, message: ProgressMessage, cancellationToken: CancellationToken): Promise<string | undefined>;\n\n    /**\n     * Update a previously created progress message.\n     */\n    reportProgress(progressId: string, update: ProgressUpdate, message: ProgressMessage, cancellationToken: CancellationToken): Promise<void>;\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport {\n    Progress,\n    ProgressUpdate,\n    ProgressMessage\n} from './message-service-protocol';\nimport { CancellationTokenSource } from './cancellation';\nimport { ProgressClient } from './progress-service-protocol';\nimport { MessageService } from './message-service';\n\n@injectable()\nexport class ProgressService {\n\n    @inject(ProgressClient) protected readonly client: ProgressClient;\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    async showProgress(message: ProgressMessage, onDidCancel?: () => void): Promise<Progress> {\n        if (this.shouldDelegate(message)) {\n            return this.messageService.showProgress(message, onDidCancel);\n        }\n        const id = this.newProgressId();\n        const cancellationSource = new CancellationTokenSource();\n        const report = (update: ProgressUpdate) => {\n            this.client.reportProgress(id, update, message, cancellationSource.token);\n        };\n        const actions = new Set<string>(message.actions);\n        if (ProgressMessage.isCancelable(message)) {\n            actions.delete(ProgressMessage.Cancel);\n            actions.add(ProgressMessage.Cancel);\n        }\n        const clientMessage = { ...message, actions: Array.from(actions) };\n        const result = this.client.showProgress(id, clientMessage, cancellationSource.token);\n        if (ProgressMessage.isCancelable(message) && typeof onDidCancel === 'function') {\n            result.then(value => {\n                if (value === ProgressMessage.Cancel) {\n                    onDidCancel();\n                }\n            });\n        }\n        return {\n            id,\n            cancel: () => cancellationSource.cancel(),\n            result,\n            report\n        };\n    }\n    protected shouldDelegate(message: ProgressMessage): boolean {\n        const location = message.options && message.options.location;\n        return location === 'notification';\n    }\n\n    private progressIdPrefix = Math.random().toString(36).substring(5);\n    private counter = 0;\n    protected newProgressId(): string {\n        return `${this.progressIdPrefix}-${++this.counter}`;\n    }\n\n    async withProgress<T>(text: string, locationId: string, task: () => Promise<T>): Promise<T> {\n        const progress = await this.showProgress({ text, options: { cancelable: true, location: locationId } });\n        try {\n            return await task();\n        } finally {\n            progress.cancel();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Disposable, DisposableCollection } from './disposable';\nimport { Emitter, Event } from './event';\nimport { MaybePromise } from './types';\n\nexport interface Reference<T> extends Disposable {\n    readonly object: T\n}\n\nexport abstract class AbstractReferenceCollection<K, V extends Disposable> implements Disposable {\n\n    protected readonly _keys = new Map<string, K>();\n    protected readonly _values = new Map<string, V>();\n    protected readonly references = new Map<string, DisposableCollection>();\n\n    protected readonly onDidCreateEmitter = new Emitter<V>();\n    readonly onDidCreate: Event<V> = this.onDidCreateEmitter.event;\n\n    protected readonly onWillDisposeEmitter = new Emitter<V>();\n    readonly onWillDispose: Event<V> = this.onWillDisposeEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection();\n\n    constructor() {\n        this.toDispose.push(this.onDidCreateEmitter);\n        this.toDispose.push(this.onWillDisposeEmitter);\n        this.toDispose.push(Disposable.create(() => this.clear()));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    clear(): void {\n        for (const value of this._values.values()) {\n            try {\n                value.dispose();\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n\n    has(args: K): boolean {\n        const key = this.toKey(args);\n        return this.references.has(key);\n    }\n\n    keys(): K[] {\n        return [...this._keys.values()];\n    }\n\n    values(): V[] {\n        return [...this._values.values()];\n    }\n\n    get(args: K): V | undefined {\n        const key = this.toKey(args);\n        return this._values.get(key);\n    }\n\n    abstract acquire(args: K): MaybePromise<Reference<V>>;\n\n    protected doAcquire(key: string, object: V): Reference<V> {\n        const references = this.references.get(key) || this.createReferences(key, object);\n        const reference: Reference<V> = {\n            object,\n            dispose: () => { }\n        };\n        references.push(reference);\n        return reference;\n    }\n\n    protected toKey(args: K): string {\n        return JSON.stringify(args);\n    }\n\n    protected createReferences(key: string, value: V): DisposableCollection {\n        const references = new DisposableCollection();\n        references.onDispose(() => value.dispose());\n        const disposeObject = value.dispose.bind(value);\n        value.dispose = () => {\n            this.onWillDisposeEmitter.fire(value);\n            disposeObject();\n            this._values.delete(key);\n            this._keys.delete(key);\n            this.references.delete(key);\n            references!.dispose();\n        };\n        this.references.set(key, references);\n        return references;\n    }\n\n}\n\nexport class ReferenceCollection<K, V extends Disposable> extends AbstractReferenceCollection<K, V> {\n\n    constructor(protected readonly factory: (key: K) => MaybePromise<V>) {\n        super();\n    }\n\n    async acquire(args: K): Promise<Reference<V>> {\n        const key = this.toKey(args);\n        const existing = this._values.get(key);\n        if (existing) {\n            return this.doAcquire(key, existing);\n        }\n        const object = await this.getOrCreateValue(key, args);\n        return this.doAcquire(key, object);\n    }\n\n    protected readonly pendingValues = new Map<string, MaybePromise<V>>();\n    protected async getOrCreateValue(key: string, args: K): Promise<V> {\n        const existing = this.pendingValues.get(key);\n        if (existing) {\n            return existing;\n        }\n        const pending = this.factory(args);\n        this._keys.set(key, args);\n        this.pendingValues.set(key, pending);\n        try {\n            const value = await pending;\n            this._values.set(key, value);\n            this.onDidCreateEmitter.fire(value);\n            return value;\n        } catch (e) {\n            this._keys.delete(key);\n            throw e;\n        } finally {\n            this.pendingValues.delete(key);\n        }\n    }\n\n}\n\nexport class SyncReferenceCollection<K, V extends Disposable> extends AbstractReferenceCollection<K, V> {\n\n    constructor(protected readonly factory: (key: K) => V) {\n        super();\n    }\n\n    acquire(args: K): Reference<V> {\n        const key = this.toKey(args);\n        const object = this.getOrCreateValue(key, args);\n        return this.doAcquire(key, object);\n    }\n\n    protected getOrCreateValue(key: string, args: K): V {\n        const existing = this._values.get(key);\n        if (existing) {\n            return existing;\n        }\n        const value = this.factory(args);\n        this._keys.set(key, args);\n        this._values.set(key, value);\n        this.onDidCreateEmitter.fire(value);\n        return value;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { TextDocumentContentChangeEvent } from 'vscode-languageserver-protocol';\nimport URI from '../common/uri';\nimport { ContributionProvider } from './contribution-provider';\nimport { Event, Emitter } from './event';\nimport { Disposable } from './disposable';\nimport { MaybePromise } from './types';\nimport { CancellationToken } from './cancellation';\nimport { ApplicationError } from './application-error';\nimport { ReadableStream, Readable } from './stream';\nimport { SyncReferenceCollection, Reference } from './reference';\n\nexport interface ResourceVersion {\n}\n\nexport interface ResourceReadOptions {\n    encoding?: string\n}\n\nexport interface ResourceSaveOptions {\n    encoding?: string\n    overwriteEncoding?: boolean\n    version?: ResourceVersion\n}\n\nexport interface Resource extends Disposable {\n    readonly uri: URI;\n    /**\n     * Latest read version of this resource.\n     *\n     * Optional if a resource does not support versioning, check with `in` operator`.\n     * Undefined if a resource did not read content yet.\n     */\n    readonly version?: ResourceVersion | undefined;\n    /**\n     * Latest read encoding of this resource.\n     *\n     * Optional if a resource does not support encoding, check with `in` operator`.\n     * Undefined if a resource did not read content yet.\n     */\n    readonly encoding?: string | undefined;\n    /**\n     * Reads latest content of this resource.\n     *\n     * If a resource supports versioning it updates version to latest.\n     * If a resource supports encoding it updates encoding to latest.\n     *\n     * @throws `ResourceError.NotFound` if a resource not found\n     */\n    readContents(options?: ResourceReadOptions): Promise<string>;\n    /**\n     * Stream latest content of this resource.\n     *\n     * If a resource supports versioning it updates version to latest.\n     * If a resource supports encoding it updates encoding to latest.\n     *\n     * @throws `ResourceError.NotFound` if a resource not found\n     */\n    readStream?(options?: ResourceReadOptions): Promise<ReadableStream<string>>;\n    /**\n     * Rewrites the complete content for this resource.\n     * If a resource does not exist it will be created.\n     *\n     * If a resource supports versioning clients can pass some version\n     * to check against it, if it is not provided latest version is used.\n     *\n     * It updates version and encoding to latest.\n     *\n     * @throws `ResourceError.OutOfSync` if latest resource version is out of sync with the given\n     */\n    saveContents?(content: string, options?: ResourceSaveOptions): Promise<void>;\n    /**\n     * Rewrites the complete content for this resource.\n     * If a resource does not exist it will be created.\n     *\n     * If a resource supports versioning clients can pass some version\n     * to check against it, if it is not provided latest version is used.\n     *\n     * It updates version and encoding to latest.\n     *\n     * @throws `ResourceError.OutOfSync` if latest resource version is out of sync with the given\n     */\n    saveStream?(content: Readable<string>, options?: ResourceSaveOptions): Promise<void>;\n    /**\n     * Applies incremental content changes to this resource.\n     *\n     * If a resource supports versioning clients can pass some version\n     * to check against it, if it is not provided latest version is used.\n     * It updates version to latest.\n     *\n     * @throws `ResourceError.NotFound` if a resource not found or was not read yet\n     * @throws `ResourceError.OutOfSync` if latest resource version is out of sync with the given\n     */\n    saveContentChanges?(changes: TextDocumentContentChangeEvent[], options?: ResourceSaveOptions): Promise<void>;\n    readonly onDidChangeContents?: Event<void>;\n    guessEncoding?(): Promise<string | undefined>\n}\nexport namespace Resource {\n    export interface SaveContext {\n        contentLength: number\n        content: string | Readable<string>\n        changes?: TextDocumentContentChangeEvent[]\n        options?: ResourceSaveOptions\n    }\n    export async function save(resource: Resource, context: SaveContext, token?: CancellationToken): Promise<void> {\n        if (!resource.saveContents) {\n            return;\n        }\n        if (await trySaveContentChanges(resource, context)) {\n            return;\n        }\n        if (token && token.isCancellationRequested) {\n            return;\n        }\n        if (typeof context.content !== 'string' && resource.saveStream) {\n            await resource.saveStream(context.content, context.options);\n        } else {\n            const content = typeof context.content === 'string' ? context.content : Readable.toString(context.content);\n            await resource.saveContents(content, context.options);\n        }\n    }\n    export async function trySaveContentChanges(resource: Resource, context: SaveContext): Promise<boolean> {\n        if (!context.changes || !resource.saveContentChanges || shouldSaveContent(resource, context)) {\n            return false;\n        }\n        try {\n            await resource.saveContentChanges(context.changes, context.options);\n            return true;\n        } catch (e) {\n            if (!ResourceError.NotFound.is(e) && !ResourceError.OutOfSync.is(e)) {\n                console.error(`Failed to apply incremental changes to '${resource.uri.toString()}':`, e);\n            }\n            return false;\n        }\n    }\n    export function shouldSaveContent(resource: Resource, { contentLength, changes }: SaveContext): boolean {\n        if (!changes || (resource.saveStream && contentLength > 32 * 1024 * 1024)) {\n            return true;\n        }\n        let contentChangesLength = 0;\n        for (const change of changes) {\n            contentChangesLength += JSON.stringify(change).length;\n            if (contentChangesLength > contentLength) {\n                return true;\n            }\n        }\n        return contentChangesLength > contentLength;\n    }\n}\n\nexport namespace ResourceError {\n    export const NotFound = ApplicationError.declare(-40000, (raw: ApplicationError.Literal<{ uri: URI }>) => raw);\n    export const OutOfSync = ApplicationError.declare(-40001, (raw: ApplicationError.Literal<{ uri: URI }>) => raw);\n}\n\nexport const ResourceResolver = Symbol('ResourceResolver');\nexport interface ResourceResolver {\n    /**\n     * Reject if a resource cannot be provided.\n     */\n    resolve(uri: URI): MaybePromise<Resource>;\n}\n\nexport const ResourceProvider = Symbol('ResourceProvider');\nexport type ResourceProvider = (uri: URI) => Promise<Resource>;\n\n@injectable()\nexport class DefaultResourceProvider {\n\n    constructor(\n        @inject(ContributionProvider) @named(ResourceResolver)\n        protected readonly resolversProvider: ContributionProvider<ResourceResolver>\n    ) { }\n\n    /**\n     * Reject if a resource cannot be provided.\n     */\n    async get(uri: URI): Promise<Resource> {\n        const resolvers = this.resolversProvider.getContributions();\n        for (const resolver of resolvers) {\n            try {\n                return await resolver.resolve(uri);\n            } catch (err) {\n                // no-op\n            }\n        }\n        return Promise.reject(new Error(`A resource provider for '${uri.toString()}' is not registered.`));\n    }\n\n}\n\nexport class MutableResource implements Resource {\n    private contents: string = '';\n\n    constructor(readonly uri: URI) {\n    }\n\n    dispose(): void { }\n\n    async readContents(): Promise<string> {\n        return this.contents;\n    }\n\n    async saveContents(contents: string): Promise<void> {\n        this.contents = contents;\n        this.fireDidChangeContents();\n    }\n\n    protected readonly onDidChangeContentsEmitter = new Emitter<void>();\n    readonly onDidChangeContents = this.onDidChangeContentsEmitter.event;\n    protected fireDidChangeContents(): void {\n        this.onDidChangeContentsEmitter.fire(undefined);\n    }\n}\nexport class ReferenceMutableResource implements Resource {\n    constructor(protected reference: Reference<MutableResource>) { }\n\n    get uri(): URI {\n        return this.reference.object.uri;\n    }\n\n    get onDidChangeContents(): Event<void> {\n        return this.reference.object.onDidChangeContents;\n    }\n\n    dispose(): void {\n        this.reference.dispose();\n    }\n\n    readContents(): Promise<string> {\n        return this.reference.object.readContents();\n    }\n\n    saveContents(contents: string): Promise<void> {\n        return this.reference.object.saveContents(contents);\n    }\n}\n\n@injectable()\nexport class InMemoryResources implements ResourceResolver {\n\n    protected readonly resources = new SyncReferenceCollection<string, MutableResource>(uri => new MutableResource(new URI(uri)));\n\n    add(uri: URI, contents: string): Resource {\n        const resourceUri = uri.toString();\n        if (this.resources.has(resourceUri)) {\n            throw new Error(`Cannot add already existing in-memory resource '${resourceUri}'`);\n        }\n        const resource = this.acquire(resourceUri);\n        resource.saveContents(contents);\n        return resource;\n    }\n\n    update(uri: URI, contents: string): Resource {\n        const resourceUri = uri.toString();\n        const resource = this.resources.get(resourceUri);\n        if (!resource) {\n            throw new Error(`Cannot update non-existed in-memory resource '${resourceUri}'`);\n        }\n        resource.saveContents(contents);\n        return resource;\n    }\n\n    resolve(uri: URI): Resource {\n        const uriString = uri.toString();\n        if (!this.resources.has(uriString)) {\n            throw new Error(`In memory '${uriString}' resource does not exist.`);\n        }\n        return this.acquire(uriString);\n    }\n\n    protected acquire(uri: string): ReferenceMutableResource {\n        const reference = this.resources.acquire(uri);\n        return new ReferenceMutableResource(reference);\n    }\n}\n\nexport const MEMORY_TEXT = 'mem-txt';\n\n/**\n * Resource implementation for 'mem-txt' URI scheme where content is saved in URI query.\n */\nexport class InMemoryTextResource implements Resource {\n    constructor(readonly uri: URI) { }\n\n    async readContents(options?: { encoding?: string | undefined; } | undefined): Promise<string> {\n        return this.uri.query;\n    }\n    dispose(): void { }\n}\n\n/**\n * ResourceResolver implementation for 'mem-txt' URI scheme.\n */\n@injectable()\nexport class InMemoryTextResourceResolver implements ResourceResolver {\n    resolve(uri: URI): MaybePromise<Resource> {\n        if (uri.scheme !== MEMORY_TEXT) {\n            throw new Error(`Expected a URI with ${MEMORY_TEXT} scheme. Was: ${uri}.`);\n        }\n        return new InMemoryTextResource(uri);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Emitter, Event } from '../common/event';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport interface SelectionProvider<T> {\n    onSelectionChanged: Event<T | undefined>;\n}\n\n@injectable()\nexport class SelectionService implements SelectionProvider<Object | undefined> {\n\n    private currentSelection: Object | undefined;\n\n    protected readonly onSelectionChangedEmitter = new Emitter<any>();\n    readonly onSelectionChanged: Event<any> = this.onSelectionChangedEmitter.event;\n\n    get selection(): Object | undefined {\n        return this.currentSelection;\n    }\n\n    set selection(selection: Object | undefined) {\n        this.currentSelection = selection;\n        this.onSelectionChangedEmitter.fire(this.currentSelection);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from './uri';\n\nexport interface UriSelection {\n    readonly uri: URI\n}\n\nexport namespace UriSelection {\n\n    export function is(arg: Object | undefined): arg is UriSelection {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return typeof arg === 'object' && ('uri' in arg) && (<any>arg)['uri'] instanceof URI;\n    }\n\n    export function getUri(selection: Object | undefined): URI | undefined {\n        if (is(selection)) {\n            return selection.uri;\n        }\n        if (Array.isArray(selection) && is(selection[0])) {\n            return selection[0].uri;\n        }\n        return undefined;\n    }\n\n    export function getUris(selection: Object | undefined): URI[] {\n        if (is(selection)) {\n            return [selection.uri];\n        }\n        if (Array.isArray(selection)) {\n            return selection.filter(is).map(s => s.uri);\n        }\n        return [];\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/base/common/stream.ts\n\n/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/tslint/config */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { DisposableCollection, Disposable } from './disposable';\n\nexport interface ReadableStreamEvents<T> {\n\n    /**\n     * The 'data' event is emitted whenever the stream is\n     * relinquishing ownership of a chunk of data to a consumer.\n     */\n    on(event: 'data', callback: (data: T) => void): void;\n\n    /**\n     * Emitted when any error occurs.\n     */\n    on(event: 'error', callback: (err: Error) => void): void;\n\n    /**\n     * The 'end' event is emitted when there is no more data\n     * to be consumed from the stream. The 'end' event will\n     * not be emitted unless the data is completely consumed.\n     */\n    on(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n    /**\n     * Stops emitting any events until resume() is called.\n     */\n    pause(): void;\n\n    /**\n     * Starts emitting events again after pause() was called.\n     */\n    resume(): void;\n\n    /**\n     * Destroys the stream and stops emitting any event.\n     */\n    destroy(): void;\n\n    /**\n     * Allows to remove a listener that was previously added.\n     */\n    removeListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n    /**\n     * Read data from the underlying source. Will return\n     * null to indicate that no more data can be read.\n     */\n    read(): T | null;\n}\nexport namespace Readable {\n    export function fromString(value: string): Readable<string> {\n        let done = false;\n\n        return {\n            read(): string | null {\n                if (!done) {\n                    done = true;\n\n                    return value;\n                }\n\n                return null;\n            }\n        };\n    }\n    export function toString(readable: Readable<string>): string {\n        let result = '';\n        let chunk: string | null;\n        while ((chunk = readable.read()) != null) {\n            result += chunk;\n        }\n        return result;\n    }\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n    /**\n     * Writing data to the stream will trigger the on('data')\n     * event listener if the stream is flowing and buffer the\n     * data otherwise until the stream is flowing.\n     *\n     * If a `highWaterMark` is configured and writing to the\n     * stream reaches this mark, a promise will be returned\n     * that should be awaited on before writing more data.\n     * Otherwise there is a risk of buffering a large number\n     * of data chunks without consumer.\n     */\n    write(data: T): void | Promise<void>;\n\n    /**\n     * Signals an error to the consumer of the stream via the\n     * on('error') handler if the stream is flowing.\n     */\n    error(error: Error): void;\n\n    /**\n     * Signals the end of the stream to the consumer. If the\n     * result is not an error, will trigger the on('data') event\n     * listener if the stream is flowing and buffer the data\n     * otherwise until the stream is flowing.\n     *\n     * In case of an error, the on('error') event will be used\n     * if the stream is flowing.\n     */\n    end(result?: T | Error): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n    /**\n     * The original stream that is being read.\n     */\n    stream: ReadableStream<T>;\n\n    /**\n     * An array of chunks already read from this stream.\n     */\n    buffer: T[];\n\n    /**\n     * Signals if the stream has ended or not. If not, consumers\n     * should continue to read from the stream until consumed.\n     */\n    ended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n    const candidate = obj as ReadableStream<T>;\n\n    return candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n    const candidate = obj as ReadableBufferedStream<T>;\n\n    return candidate && isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface Reducer<T> {\n    (data: T[]): T;\n}\n\nexport interface DataTransformer<Original, Transformed> {\n    (data: Original): Transformed;\n}\n\nexport interface ErrorTransformer {\n    (error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n    data: DataTransformer<Original, Transformed>;\n    error?: ErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: Reducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n    return new WriteableStreamImpl<T>(reducer);\n}\n\nexport interface WriteableStreamOptions {\n\n    /**\n     * The number of objects to buffer before WriteableStream#write()\n     * signals back that the buffer is full. Can be used to reduce\n     * the memory pressure when the stream is not flowing.\n     */\n    highWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n    private readonly state = {\n        flowing: false,\n        ended: false,\n        destroyed: false\n    };\n\n    private readonly buffer = {\n        data: [] as T[],\n        error: [] as Error[]\n    };\n\n    private readonly listeners = {\n        data: [] as { (data: T): void }[],\n        error: [] as { (error: Error): void }[],\n        end: [] as { (): void }[]\n    };\n\n    private readonly pendingWritePromises: Function[] = [];\n\n    constructor(private reducer: Reducer<T>, private options?: WriteableStreamOptions) { }\n\n    pause(): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        this.state.flowing = false;\n    }\n\n    resume(): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        if (!this.state.flowing) {\n            this.state.flowing = true;\n\n            // emit buffered events\n            this.flowData();\n            this.flowErrors();\n            this.flowEnd();\n        }\n    }\n\n    write(data: T): void | Promise<void> {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        // flowing: directly send the data to listeners\n        if (this.state.flowing) {\n            this.listeners.data.forEach(listener => listener(data));\n        }\n\n        // not yet flowing: buffer data until flowing\n        else {\n            this.buffer.data.push(data);\n\n            // highWaterMark: if configured, signal back when buffer reached limits\n            if (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n                return new Promise(resolve => this.pendingWritePromises.push(resolve));\n            }\n        }\n    }\n\n    error(error: Error): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        // flowing: directly send the error to listeners\n        if (this.state.flowing) {\n            this.listeners.error.forEach(listener => listener(error));\n        }\n\n        // not yet flowing: buffer errors until flowing\n        else {\n            this.buffer.error.push(error);\n        }\n    }\n\n    end(result?: T | Error): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        // end with data or error if provided\n        if (result instanceof Error) {\n            this.error(result);\n        } else if (result) {\n            this.write(result);\n        }\n\n        // flowing: send end event to listeners\n        if (this.state.flowing) {\n            this.listeners.end.forEach(listener => listener());\n\n            this.destroy();\n        }\n\n        // not yet flowing: remember state\n        else {\n            this.state.ended = true;\n        }\n    }\n\n    on(event: 'data', callback: (data: T) => void): void;\n    on(event: 'error', callback: (err: Error) => void): void;\n    on(event: 'end', callback: () => void): void;\n    on(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        switch (event) {\n            case 'data':\n                this.listeners.data.push(callback);\n\n                // switch into flowing mode as soon as the first 'data'\n                // listener is added and we are not yet in flowing mode\n                this.resume();\n\n                break;\n\n            case 'end':\n                this.listeners.end.push(callback);\n\n                // emit 'end' event directly if we are flowing\n                // and the end has already been reached\n                //\n                // finish() when it went through\n                if (this.state.flowing && this.flowEnd()) {\n                    this.destroy();\n                }\n\n                break;\n\n            case 'error':\n                this.listeners.error.push(callback);\n\n                // emit buffered 'error' events unless done already\n                // now that we know that we have at least one listener\n                if (this.state.flowing) {\n                    this.flowErrors();\n                }\n\n                break;\n        }\n    }\n\n    removeListener(event: string, callback: Function): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        let listeners: unknown[] | undefined = undefined;\n\n        switch (event) {\n            case 'data':\n                listeners = this.listeners.data;\n                break;\n\n            case 'end':\n                listeners = this.listeners.end;\n                break;\n\n            case 'error':\n                listeners = this.listeners.error;\n                break;\n        }\n\n        if (listeners) {\n            const index = listeners.indexOf(callback);\n            if (index >= 0) {\n                listeners.splice(index, 1);\n            }\n        }\n    }\n\n    private flowData(): void {\n        if (this.buffer.data.length > 0) {\n            const fullDataBuffer = this.reducer(this.buffer.data);\n\n            this.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n            this.buffer.data.length = 0;\n\n            // When the buffer is empty, resolve all pending writers\n            const pendingWritePromises = [...this.pendingWritePromises];\n            this.pendingWritePromises.length = 0;\n            pendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n        }\n    }\n\n    private flowErrors(): void {\n        if (this.listeners.error.length > 0) {\n            for (const error of this.buffer.error) {\n                this.listeners.error.forEach(listener => listener(error));\n            }\n\n            this.buffer.error.length = 0;\n        }\n    }\n\n    private flowEnd(): boolean {\n        if (this.state.ended) {\n            this.listeners.end.forEach(listener => listener());\n\n            return this.listeners.end.length > 0;\n        }\n\n        return false;\n    }\n\n    destroy(): void {\n        if (!this.state.destroyed) {\n            this.state.destroyed = true;\n            this.state.ended = true;\n\n            this.buffer.data.length = 0;\n            this.buffer.error.length = 0;\n\n            this.listeners.data.length = 0;\n            this.listeners.error.length = 0;\n            this.listeners.end.length = 0;\n\n            this.pendingWritePromises.length = 0;\n        }\n    }\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: Reducer<T>): T {\n    const chunks: T[] = [];\n\n    let chunk: T | null;\n    while ((chunk = readable.read()) !== null) {\n        chunks.push(chunk);\n    }\n\n    return reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: Reducer<T>, maxChunks: number): T | Readable<T> {\n    const chunks: T[] = [];\n\n    let chunk: T | null | undefined = undefined;\n    while ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n        chunks.push(chunk);\n    }\n\n    // If the last chunk is null, it means we reached the end of\n    // the readable and return all the data at once\n    if (chunk === null && chunks.length > 0) {\n        return reducer(chunks);\n    }\n\n    // Otherwise, we still have a chunk, it means we reached the maxChunks\n    // value and as such we return a new Readable that first returns\n    // the existing read chunks and then continues with reading from\n    // the underlying readable.\n    return {\n        read: () => {\n\n            // First consume chunks from our array\n            if (chunks.length > 0) {\n                return chunks.shift()!;\n            }\n\n            // Then ensure to return our last read chunk\n            if (typeof chunk !== 'undefined') {\n                const lastReadChunk = chunk;\n\n                // explicitly use undefined here to indicate that we consumed\n                // the chunk, which could have either been null or valued.\n                chunk = undefined;\n\n                return lastReadChunk;\n            }\n\n            // Finally delegate back to the Readable\n            return readable.read();\n        }\n    };\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: Reducer<T>, maxChunks: number): T | Readable<T> {\n    const chunks: T[] = [];\n\n    let chunk: T | null | undefined = undefined;\n    while ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n        chunks.push(chunk);\n    }\n\n    // If the last chunk is null, it means we reached the end of\n    // the readable and return all the data at once\n    if (chunk === null && chunks.length > 0) {\n        return reducer(chunks);\n    }\n\n    // Otherwise, we still have a chunk, it means we reached the maxChunks\n    // value and as such we return a new Readable that first returns\n    // the existing read chunks and then continues with reading from\n    // the underlying readable.\n    return {\n        read: () => {\n\n            // First consume chunks from our array\n            if (chunks.length > 0) {\n                return chunks.shift()!;\n            }\n\n            // Then ensure to return our last read chunk\n            if (typeof chunk !== 'undefined') {\n                const lastReadChunk = chunk;\n\n                // explicitly use undefined here to indicate that we consumed\n                // the chunk, which could have either been null or valued.\n                chunk = undefined;\n\n                return lastReadChunk;\n            }\n\n            // Finally delegate back to the Readable\n            return readable.read();\n        }\n    };\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: Reducer<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n        const chunks: T[] = [];\n\n        stream.on('data', data => chunks.push(data));\n        stream.on('error', error => reject(error));\n        stream.on('end', () => resolve(reducer(chunks)));\n    });\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n    return new Promise((resolve, reject) => {\n        const streamListeners = new DisposableCollection();\n\n        // Data Listener\n        const buffer: T[] = [];\n        const dataListener = (chunk: T) => {\n\n            // Add to buffer\n            buffer.push(chunk);\n\n            // We reached maxChunks and thus need to return\n            if (buffer.length > maxChunks) {\n\n                // Dispose any listeners and ensure to pause the\n                // stream so that it can be consumed again by caller\n                streamListeners.dispose();\n                stream.pause();\n\n                return resolve({ stream, buffer, ended: false });\n            }\n        };\n\n        streamListeners.push(Disposable.create(() => stream.removeListener('data', dataListener)));\n        stream.on('data', dataListener);\n\n        // Error Listener\n        const errorListener = (error: Error) => reject(error);\n\n        streamListeners.push(Disposable.create(() => stream.removeListener('error', errorListener)));\n        stream.on('error', errorListener);\n\n        const endListener = () => resolve({ stream, buffer, ended: true });\n\n        streamListeners.push(Disposable.create(() => stream.removeListener('end', endListener)));\n        stream.on('end', endListener);\n    });\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: Reducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n    return new Promise((resolve, reject) => {\n        const chunks: T[] = [];\n\n        let wrapperStream: WriteableStream<T> | undefined = undefined;\n\n        stream.on('data', data => {\n\n            // If we reach maxChunks, we start to return a stream\n            // and make sure that any data we have already read\n            // is in it as well\n            if (!wrapperStream && chunks.length === maxChunks) {\n                wrapperStream = newWriteableStream(reducer);\n                while (chunks.length) {\n                    wrapperStream.write(chunks.shift()!);\n                }\n\n                wrapperStream.write(data);\n\n                return resolve(wrapperStream);\n            }\n\n            if (wrapperStream) {\n                wrapperStream.write(data);\n            } else {\n                chunks.push(data);\n            }\n        });\n\n        stream.on('error', error => {\n            if (wrapperStream) {\n                wrapperStream.error(error);\n            } else {\n                return reject(error);\n            }\n        });\n\n        stream.on('end', () => {\n            if (wrapperStream) {\n                while (chunks.length) {\n                    wrapperStream.write(chunks.shift()!);\n                }\n\n                wrapperStream.end();\n            } else {\n                return resolve(reducer(chunks));\n            }\n        });\n    });\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: Reducer<T>): ReadableStream<T> {\n    const stream = newWriteableStream<T>(reducer);\n\n    stream.end(t);\n\n    return stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n    let consumed = false;\n\n    return {\n        read: () => {\n            if (consumed) {\n                return null;\n            }\n\n            consumed = true;\n\n            return t;\n        }\n    };\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: Reducer<Transformed>): ReadableStream<Transformed> {\n    const target = newWriteableStream<Transformed>(reducer);\n\n    stream.on('data', data => target.write(transformer.data(data)));\n    stream.on('end', () => target.end());\n    stream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n    return target;\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/base/common/strings.ts\n\nimport { CharCode } from './char-code';\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n    const diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    } else if (diff === 0) {\n        return haystack === needle;\n    } else {\n        return false;\n    }\n}\nexport function isLowerAsciiLetter(code: number): boolean {\n    return code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n    return code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n    const len1 = a ? a.length : 0;\n    const len2 = b ? b.length : 0;\n\n    if (len1 !== len2) {\n        return false;\n    }\n\n    return doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n\n    for (let i = 0; i < stopAt; i++) {\n        const codeA = a.charCodeAt(i);\n        const codeB = b.charCodeAt(i);\n\n        if (codeA === codeB) {\n            continue;\n        }\n\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            const diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n\n        // Any other charcode\n        // tslint:disable-next-line:one-line\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n    let i: number;\n    const len = Math.min(a.length, b.length);\n\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n\n    return len;\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\nexport function* split(s: string, splitter: string): IterableIterator<string> {\n    let start = 0;\n    while (start < s.length) {\n        let end = s.indexOf(splitter, start);\n        if (end === -1) {\n            end = s.length;\n        }\n\n        yield s.substring(start, end);\n        start = end + splitter.length;\n    }\n}\n\nexport function escapeInvisibleChars(value: string): string {\n    return value.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n}\n\nexport function unescapeInvisibleChars(value: string): string {\n    return value.replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r');\n}\n\nexport function compare(a: string, b: string): number {\n    if (a < b) {\n        return -1;\n    } else if (a > b) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        } else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    } else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n\n        const diff = codeA - codeB;\n        if (diff === 32 && isUpperAsciiLetter(codeB)) { // codeB =[65-90] && codeA =[97-122]\n            continue;\n\n        } else if (diff === -32 && isUpperAsciiLetter(codeA)) {  // codeB =[97-122] && codeA =[65-90]\n            continue;\n        }\n\n        if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n            //\n            return diff;\n\n        } else {\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n    }\n\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n\n    if (aLen < bLen) {\n        return -1;\n    } else if (aLen > bLen) {\n        return 1;\n    }\n\n    return 0;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport type Mutable<T> = { -readonly [P in keyof T]: T[P] };\n\nexport type Deferred<T> = {\n    [P in keyof T]: Promise<T[P]>\n};\nexport type RecursivePartial<T> = {\n    [P in keyof T]?: T[P] extends Array<infer I>\n    ? Array<RecursivePartial<I>>\n    : RecursivePartial<T[P]>;\n};\nexport type MaybeArray<T> = T | T[];\nexport type MaybePromise<T> = T | PromiseLike<T>;\n\nexport interface Prioritizeable<T> {\n    readonly priority: number;\n    readonly value: T;\n}\nexport namespace Prioritizeable {\n    export type GetPriority<T> = (value: T) => MaybePromise<number>;\n    export type GetPrioritySync<T> = (value: T) => number;\n    export async function toPrioritizeable<T>(rawValue: MaybePromise<T>, getPriority: GetPriority<T>): Promise<Prioritizeable<T>>;\n    export async function toPrioritizeable<T>(rawValue: MaybePromise<T>[], getPriority: GetPriority<T>): Promise<Prioritizeable<T>[]>;\n    export async function toPrioritizeable<T>(rawValue: MaybeArray<MaybePromise<T>>, getPriority: GetPriority<T>): Promise<MaybeArray<Prioritizeable<T>>> {\n        if (rawValue instanceof Array) {\n            return Promise.all(\n                rawValue.map(v => toPrioritizeable(v, getPriority))\n            );\n        }\n        const value = await rawValue;\n        const priority = await getPriority(value);\n        return { priority, value };\n    }\n    export function toPrioritizeableSync<T>(rawValue: T[], getPriority: GetPrioritySync<T>): Prioritizeable<T>[] {\n        return rawValue.map(v => ({\n            value: v,\n            priority: getPriority(v)\n        }));\n    }\n    export function prioritizeAllSync<T>(values: T[], getPriority: GetPrioritySync<T>): Prioritizeable<T>[] {\n        const prioritizeable = toPrioritizeableSync(values, getPriority);\n        return prioritizeable.filter(isValid).sort(compare);\n    }\n    export async function prioritizeAll<T>(values: MaybePromise<T>[], getPriority: GetPriority<T>): Promise<Prioritizeable<T>[]> {\n        const prioritizeable = await toPrioritizeable(values, getPriority);\n        return prioritizeable.filter(isValid).sort(compare);\n    }\n    export function isValid<T>(p: Prioritizeable<T>): boolean {\n        return p.priority > 0;\n    }\n    export function compare<T>(p: Prioritizeable<T>, p2: Prioritizeable<T>): number {\n        return p2.priority - p.priority;\n    }\n}\n\n/**\n * Throws when called and statically make sure that all variants of a type were consumed.\n */\nexport function unreachable(_never: never, message: string = 'unhandled case'): never {\n    throw new Error(message);\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { URI as Uri } from 'vscode-uri';\nimport { Path } from './path';\n\nexport default class URI {\n\n    private readonly codeUri: Uri;\n    private _path: Path | undefined;\n\n    constructor(uri: string | Uri = '') {\n        if (uri instanceof Uri) {\n            this.codeUri = uri;\n        } else {\n            this.codeUri = Uri.parse(uri);\n        }\n    }\n\n    /**\n     * TODO move implementation to `DefaultUriLabelProviderContribution.getName`\n     *\n     * @deprecated use `LabelProvider.getName` instead\n     */\n    get displayName(): string {\n        const base = this.path.base;\n        if (base) {\n            return base;\n        }\n        if (this.path.isRoot) {\n            return this.path.toString();\n        }\n        return '';\n    }\n\n    /**\n     * Return all uri from the current to the top most.\n     */\n    get allLocations(): URI[] {\n        const locations = [];\n        let location: URI = this;\n        while (!location.path.isRoot && location.path.hasDir) {\n            locations.push(location);\n            location = location.parent;\n        }\n        locations.push(location);\n        return locations;\n    }\n\n    get parent(): URI {\n        if (this.path.isRoot) {\n            return this;\n        }\n        return this.withPath(this.path.dir);\n    }\n\n    relative(uri: URI): Path | undefined {\n        if (this.authority !== uri.authority || this.scheme !== uri.scheme) {\n            return undefined;\n        }\n        return this.path.relative(uri.path);\n    }\n\n    resolve(path: string | Path): URI {\n        return this.withPath(this.path.join(path.toString()));\n    }\n\n    /**\n     * return a new URI replacing the current with the given scheme\n     */\n    withScheme(scheme: string): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return a new URI replacing the current with the given authority\n     */\n    withAuthority(authority: string): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme: this.codeUri.scheme,\n            authority\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return this URI without a authority\n     */\n    withoutAuthority(): URI {\n        return this.withAuthority('');\n    }\n\n    /**\n     * return a new URI replacing the current with the given path\n     */\n    withPath(path: string | Path): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme: this.codeUri.scheme,\n            path: path.toString()\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return this URI without a path\n     */\n    withoutPath(): URI {\n        return this.withPath('');\n    }\n\n    /**\n     * return a new URI replacing the current with the given query\n     */\n    withQuery(query: string): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme: this.codeUri.scheme,\n            query\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return this URI without a query\n     */\n    withoutQuery(): URI {\n        return this.withQuery('');\n    }\n\n    /**\n     * return a new URI replacing the current with the given fragment\n     */\n    withFragment(fragment: string): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme: this.codeUri.scheme,\n            fragment\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return this URI without a fragment\n     */\n    withoutFragment(): URI {\n        return this.withFragment('');\n    }\n\n    /**\n     * return a new URI replacing the current with its normalized path, resolving '..' and '.' segments\n     */\n    normalizePath(): URI {\n        return this.withPath(this.path.normalize());\n    }\n\n    get scheme(): string {\n        return this.codeUri.scheme;\n    }\n\n    get authority(): string {\n        return this.codeUri.authority;\n    }\n\n    get path(): Path {\n        if (this._path === undefined) {\n            this._path = new Path(this.codeUri.path);\n        }\n        return this._path;\n    }\n\n    get query(): string {\n        return this.codeUri.query;\n    }\n\n    get fragment(): string {\n        return this.codeUri.fragment;\n    }\n\n    toString(skipEncoding?: boolean): string {\n        return this.codeUri.toString(skipEncoding);\n    }\n\n    isEqual(uri: URI, caseSensitive: boolean = true): boolean {\n        if (!this.hasSameOrigin(uri)) {\n            return false;\n        }\n\n        return caseSensitive\n            ? this.toString() === uri.toString()\n            : this.toString().toLowerCase() === uri.toString().toLowerCase();\n    }\n\n    isEqualOrParent(uri: URI, caseSensitive: boolean = true): boolean {\n        if (!this.hasSameOrigin(uri)) {\n            return false;\n        }\n        let left = this.path;\n        let right = uri.path;\n        if (!caseSensitive) {\n            left = new Path(left.toString().toLowerCase());\n            right = new Path(right.toString().toLowerCase());\n        }\n        return left.isEqualOrParent(right);\n    }\n\n    static getDistinctParents(uris: URI[]): URI[] {\n        const result: URI[] = [];\n        uris.forEach((uri, i) => {\n            if (!uris.some((otherUri, index) => index !== i && otherUri.isEqualOrParent(uri))) {\n                result.push(uri);\n            }\n        });\n        return result;\n    }\n\n    private hasSameOrigin(uri: URI): boolean {\n        return (this.authority === uri.authority) && (this.scheme === uri.scheme);\n    }\n}\n","module.exports = require('inversify');\n"],"sourceRoot":""}