{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/core/shared/vscode-languageserver-types.js","webpack://browser-app/../node_modules/@theia/outline-view/src/browser/styles/index.css","webpack://browser-app/../node_modules/@theia/core/shared/react.js","webpack://browser-app/../node_modules/@theia/outline-view/src/browser/outline-breadcrumbs-contribution.tsx","webpack://browser-app/../node_modules/@theia/outline-view/src/browser/outline-view-contribution.ts","webpack://browser-app/../node_modules/@theia/outline-view/src/browser/outline-view-frontend-module.ts","webpack://browser-app/../node_modules/@theia/outline-view/src/browser/styles/index.css?0413"],"names":["module"],"mappings":"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","file":"vendors-node_modules_theia_core_shared_vscode-languageserver-types_js-node_modules_theia_core-785347.bundle.js","sourcesContent":["module.exports = require('vscode-languageserver-types');\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2017-2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.no-outline {\\n    color: var(--theia-foreground);\\n    text-align: left;\\n}\\n\\n.theia-side-panel .no-outline {\\n    margin-left: 9px;\\n}\\n\", \"\"]);\n\n// exports\n","module.exports = require('react');\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from '@theia/core/shared/react';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { LabelProvider, BreadcrumbsService, Widget, TreeNode, OpenerService, open, SelectableTreeNode, BreadcrumbsContribution, Breadcrumb } from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { OutlineViewService } from './outline-view-service';\nimport { OutlineSymbolInformationNode, OutlineViewWidget } from './outline-view-widget';\nimport { Disposable, DisposableCollection, Emitter, Event } from '@theia/core/lib/common';\nimport { UriSelection } from '@theia/core/lib/common';\n\nexport const OutlineBreadcrumbType = Symbol('OutlineBreadcrumb');\nexport const BreadcrumbPopupOutlineViewFactory = Symbol('BreadcrumbPopupOutlineViewFactory');\nexport const OUTLINE_BREADCRUMB_CONTAINER_CLASS = 'outline-element';\nexport interface BreadcrumbPopupOutlineViewFactory {\n    (): BreadcrumbPopupOutlineView;\n}\nexport class BreadcrumbPopupOutlineView extends OutlineViewWidget {\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        if (UriSelection.is(node) && OutlineSymbolInformationNode.hasRange(node)) {\n            open(this.openerService, node.uri, { selection: node.range });\n        } else {\n            super.handleClickEvent(node, event);\n        }\n    }\n\n    cloneState(roots: OutlineSymbolInformationNode[]): void {\n        const nodes = this.reconcileTreeState(roots);\n        const root = this.getRoot(nodes);\n        this.model.root = this.inflateFromStorage(this.deflateForStorage(root));\n    }\n}\n\n@injectable()\nexport class OutlineBreadcrumbsContribution implements BreadcrumbsContribution {\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(OutlineViewService)\n    protected readonly outlineViewService: OutlineViewService;\n\n    @inject(BreadcrumbsService)\n    protected readonly breadcrumbsService: BreadcrumbsService;\n\n    @inject(BreadcrumbPopupOutlineViewFactory)\n    protected readonly outlineFactory: BreadcrumbPopupOutlineViewFactory;\n\n    protected outlineView: BreadcrumbPopupOutlineView;\n\n    readonly type = OutlineBreadcrumbType;\n    readonly priority: number = 200;\n\n    protected currentUri: URI | undefined = undefined;\n    protected currentBreadcrumbs: OutlineBreadcrumb[] = [];\n    protected roots: OutlineSymbolInformationNode[] = [];\n\n    protected readonly onDidChangeBreadcrumbsEmitter = new Emitter<URI>();\n    get onDidChangeBreadcrumbs(): Event<URI> {\n        return this.onDidChangeBreadcrumbsEmitter.event;\n    }\n\n    @postConstruct()\n    init(): void {\n        this.outlineView = this.outlineFactory();\n        this.outlineView.node.style.height = 'auto';\n        this.outlineView.node.style.maxHeight = '200px';\n        this.outlineViewService.onDidChangeOutline(roots => {\n            if (roots.length > 0) {\n                this.roots = roots;\n                const first = roots[0];\n                if (UriSelection.is(first)) {\n                    this.updateOutlineItems(first.uri, this.findSelectedNode(roots));\n                }\n            } else {\n                this.currentBreadcrumbs = [];\n                this.roots = [];\n            }\n        });\n        this.outlineViewService.onDidSelect(node => {\n            if (UriSelection.is(node)) {\n                this.updateOutlineItems(node.uri, node);\n            }\n        });\n    }\n\n    protected async updateOutlineItems(uri: URI, selectedNode: OutlineSymbolInformationNode | undefined): Promise<void> {\n        this.currentUri = uri;\n        const outlinePath = this.toOutlinePath(selectedNode);\n        if (outlinePath && selectedNode) {\n            this.currentBreadcrumbs = outlinePath.map((node, index) =>\n                new OutlineBreadcrumb(\n                    node,\n                    uri,\n                    index.toString(),\n                    this.labelProvider.getName(node),\n                    'symbol-icon symbol-icon-center ' + node.iconClass,\n                    OUTLINE_BREADCRUMB_CONTAINER_CLASS,\n                )\n            );\n            if (selectedNode.children && selectedNode.children.length > 0) {\n                this.currentBreadcrumbs.push(new OutlineBreadcrumb(\n                    selectedNode.children as OutlineSymbolInformationNode[],\n                    uri,\n                    this.currentBreadcrumbs.length.toString(),\n                    '…',\n                    '',\n                    OUTLINE_BREADCRUMB_CONTAINER_CLASS,\n                ));\n            }\n        } else {\n            this.currentBreadcrumbs = [];\n            if (this.roots) {\n                this.currentBreadcrumbs.push(new OutlineBreadcrumb(\n                    this.roots,\n                    uri,\n                    this.currentBreadcrumbs.length.toString(),\n                    '…',\n                    '',\n                    OUTLINE_BREADCRUMB_CONTAINER_CLASS\n                ));\n            }\n        }\n        this.onDidChangeBreadcrumbsEmitter.fire(uri);\n    }\n\n    async computeBreadcrumbs(uri: URI): Promise<Breadcrumb[]> {\n        if (this.currentUri && uri.toString() === this.currentUri.toString()) {\n            return this.currentBreadcrumbs;\n        }\n        return [];\n    }\n\n    async attachPopupContent(breadcrumb: Breadcrumb, parent: HTMLElement): Promise<Disposable | undefined> {\n        if (!OutlineBreadcrumb.is(breadcrumb)) {\n            return undefined;\n        }\n        const node = Array.isArray(breadcrumb.node) ? breadcrumb.node[0] : breadcrumb.node;\n        if (!node.parent) {\n            return undefined;\n        }\n        const siblings = node.parent.children.filter((child): child is OutlineSymbolInformationNode => OutlineSymbolInformationNode.is(child));\n\n        const toDisposeOnHide = new DisposableCollection();\n        this.outlineView.cloneState(siblings);\n        this.outlineView.model.selectNode(node);\n        this.outlineView.model.collapseAll();\n        Widget.attach(this.outlineView, parent);\n        this.outlineView.activate();\n        toDisposeOnHide.pushAll([\n            this.outlineView.model.onExpansionChanged(expandedNode => SelectableTreeNode.is(expandedNode) && this.outlineView.model.selectNode(expandedNode)),\n            Disposable.create(() => {\n                this.outlineView.model.root = undefined;\n                Widget.detach(this.outlineView);\n            }),\n        ]);\n        return toDisposeOnHide;\n    }\n\n    /**\n     * Returns the path of the given outline node.\n     */\n    protected toOutlinePath(node: OutlineSymbolInformationNode | undefined, path: OutlineSymbolInformationNode[] = []): OutlineSymbolInformationNode[] | undefined {\n        if (!node) { return undefined; }\n        if (node.id === 'outline-view-root') { return path; }\n        if (node.parent) {\n            return this.toOutlinePath(node.parent as OutlineSymbolInformationNode, [node, ...path]);\n        } else {\n            return [node, ...path];\n        }\n    }\n\n    /**\n     * Find the node that is selected. Returns after the first match.\n     */\n    protected findSelectedNode(roots: OutlineSymbolInformationNode[]): OutlineSymbolInformationNode | undefined {\n        const result = roots.find(node => node.selected);\n        if (result) {\n            return result;\n        }\n        for (const node of roots) {\n            const result2 = this.findSelectedNode(node.children.map(child => child as OutlineSymbolInformationNode));\n            if (result2) {\n                return result2;\n            }\n        }\n    }\n}\n\nexport class OutlineBreadcrumb implements Breadcrumb {\n    constructor(\n        readonly node: OutlineSymbolInformationNode | OutlineSymbolInformationNode[],\n        readonly uri: URI,\n        readonly index: string,\n        readonly label: string,\n        readonly iconClass: string,\n        readonly containerClass: string,\n    ) { }\n\n    get id(): string {\n        return this.type.toString() + '_' + this.uri.toString() + '_' + this.index;\n    }\n\n    get type(): symbol {\n        return OutlineBreadcrumbType;\n    }\n\n    get longLabel(): string {\n        return this.label;\n    }\n}\nexport namespace OutlineBreadcrumb {\n    export function is(breadcrumb: Breadcrumb): breadcrumb is OutlineBreadcrumb {\n        return 'node' in breadcrumb && 'uri' in breadcrumb;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { FrontendApplicationContribution, FrontendApplication } from '@theia/core/lib/browser/frontend-application';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { codicon, Widget } from '@theia/core/lib/browser/widgets';\nimport { OutlineViewWidget } from './outline-view-widget';\nimport { CompositeTreeNode } from '@theia/core/lib/browser/tree';\nimport { OS } from '@theia/core/lib/common/os';\n\nexport const OUTLINE_WIDGET_FACTORY_ID = 'outline-view';\n\n/**\n * Collection of `outline-view` commands.\n */\nexport namespace OutlineViewCommands {\n    /**\n     * Command which collapses all nodes\n     * from the `outline-view` tree.\n     */\n    export const COLLAPSE_ALL: Command = {\n        id: 'outlineView.collapse.all',\n        iconClass: codicon('collapse-all')\n    };\n}\n\n@injectable()\nexport class OutlineViewContribution extends AbstractViewContribution<OutlineViewWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    constructor() {\n        super({\n            widgetId: OUTLINE_WIDGET_FACTORY_ID,\n            widgetName: 'Outline',\n            defaultWidgetOptions: {\n                area: 'right',\n                rank: 500\n            },\n            toggleCommandId: 'outlineView:toggle',\n            toggleKeybinding: OS.type() !== OS.Type.Linux\n                ? 'ctrlcmd+shift+i'\n                : undefined\n        });\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(OutlineViewCommands.COLLAPSE_ALL, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: () => this.collapseAllItems()\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: OutlineViewCommands.COLLAPSE_ALL.id,\n            command: OutlineViewCommands.COLLAPSE_ALL.id,\n            tooltip: 'Collapse All',\n            priority: 0\n        });\n    }\n\n    /**\n     * Collapse all nodes in the outline view tree.\n     */\n    protected async collapseAllItems(): Promise<void> {\n        const { model } = await this.widget;\n        const root = model.root;\n        if (CompositeTreeNode.is(root)) {\n            model.collapseAll(root);\n        }\n    }\n\n    /**\n     * Determine if the current widget is the `outline-view`.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (widget: OutlineViewWidget) => T): T | false {\n        if (widget instanceof OutlineViewWidget && widget.id === OUTLINE_WIDGET_FACTORY_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { OutlineViewService } from './outline-view-service';\nimport { OutlineViewContribution } from './outline-view-contribution';\nimport { WidgetFactory } from '@theia/core/lib/browser/widget-manager';\nimport {\n    FrontendApplicationContribution,\n    createTreeContainer,\n    TreeWidget,\n    bindViewContribution,\n    TreeProps,\n    defaultTreeProps,\n    TreeDecoratorService,\n    TreeModel,\n    TreeModelImpl,\n    BreadcrumbsContribution\n} from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { OutlineViewWidgetFactory, OutlineViewWidget } from './outline-view-widget';\nimport '../../src/browser/styles/index.css';\nimport { bindContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { OutlineDecoratorService, OutlineTreeDecorator } from './outline-decorator-service';\nimport { OutlineViewTreeModel } from './outline-view-tree-model';\nimport { BreadcrumbPopupOutlineView, BreadcrumbPopupOutlineViewFactory, OutlineBreadcrumbsContribution } from './outline-breadcrumbs-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(OutlineViewWidgetFactory).toFactory(ctx =>\n        () => createOutlineViewWidget(ctx.container)\n    );\n\n    bind(BreadcrumbPopupOutlineViewFactory).toFactory(({ container }) => () => {\n        const child = createOutlineViewWidgetContainer(container);\n        child.rebind(OutlineViewWidget).to(BreadcrumbPopupOutlineView);\n        child.rebind(TreeProps).toConstantValue({ ...defaultTreeProps, expandOnlyOnExpansionToggleClick: true, search: false, virtualized: false });\n        return child.get(OutlineViewWidget);\n    });\n\n    bind(OutlineViewService).toSelf().inSingletonScope();\n    bind(WidgetFactory).toService(OutlineViewService);\n\n    bindViewContribution(bind, OutlineViewContribution);\n    bind(FrontendApplicationContribution).toService(OutlineViewContribution);\n    bind(TabBarToolbarContribution).toService(OutlineViewContribution);\n\n    bind(OutlineBreadcrumbsContribution).toSelf().inSingletonScope();\n    bind(BreadcrumbsContribution).toService(OutlineBreadcrumbsContribution);\n});\n\nfunction createOutlineViewWidgetContainer(parent: interfaces.Container): interfaces.Container {\n    const child = createTreeContainer(parent);\n\n    child.rebind(TreeProps).toConstantValue({ ...defaultTreeProps, expandOnlyOnExpansionToggleClick: true, search: true });\n\n    child.unbind(TreeWidget);\n    child.bind(OutlineViewWidget).toSelf();\n\n    child.unbind(TreeModelImpl);\n    child.bind(OutlineViewTreeModel).toSelf();\n    child.rebind(TreeModel).toService(OutlineViewTreeModel);\n\n    child.bind(OutlineDecoratorService).toSelf().inSingletonScope();\n    child.rebind(TreeDecoratorService).toDynamicValue(ctx => ctx.container.get(OutlineDecoratorService)).inSingletonScope();\n    bindContributionProvider(child, OutlineTreeDecorator);\n    return child;\n}\n\n/**\n * Create an `OutlineViewWidget`.\n * - The creation of the `OutlineViewWidget` includes:\n *  - The creation of the tree widget itself with it's own customized props.\n *  - The binding of necessary components into the container.\n * @param parent the Inversify container.\n *\n * @returns the `OutlineViewWidget`.\n */\nfunction createOutlineViewWidget(parent: interfaces.Container): OutlineViewWidget {\n    const child = createOutlineViewWidgetContainer(parent);\n\n    return child.get(OutlineViewWidget);\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/index.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}