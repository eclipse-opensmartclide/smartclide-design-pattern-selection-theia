{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/terminal/src/browser/style/terminal-search.css","webpack://browser-app/../node_modules/@theia/terminal/src/browser/base/terminal-widget.ts","webpack://browser-app/../node_modules/@theia/terminal/src/browser/search/terminal-search-widget.tsx","webpack://browser-app/../node_modules/@theia/terminal/src/browser/terminal-contribution.ts","webpack://browser-app/../node_modules/@theia/terminal/src/browser/terminal-copy-on-selection-handler.ts","webpack://browser-app/../node_modules/@theia/terminal/src/browser/terminal-preferences.ts","webpack://browser-app/../node_modules/@theia/terminal/src/browser/terminal-theme-service.ts","webpack://browser-app/../node_modules/@theia/terminal/src/browser/terminal-widget-impl.ts","webpack://browser-app/../node_modules/@theia/terminal/src/common/base-terminal-protocol.ts","webpack://browser-app/../node_modules/@theia/terminal/src/common/terminal-protocol.ts","webpack://browser-app/../node_modules/@theia/terminal/src/common/terminal-watcher.ts","webpack://browser-app/FitAddon/webpack/universalModuleDefinition","webpack://browser-app/FitAddon/src/FitAddon.ts","webpack://browser-app/FitAddon/webpack/bootstrap","webpack://browser-app/FitAddon/webpack/startup","webpack://browser-app/SearchAddon/webpack/universalModuleDefinition","webpack://browser-app/SearchAddon/src/SearchAddon.ts","webpack://browser-app/SearchAddon/webpack/bootstrap","webpack://browser-app/SearchAddon/webpack/startup","webpack://browser-app/xterm/webpack/universalModuleDefinition","webpack://browser-app/xterm/src/browser/AccessibilityManager.ts","webpack://browser-app/xterm/src/browser/Clipboard.ts","webpack://browser-app/xterm/src/browser/Color.ts","webpack://browser-app/xterm/src/browser/ColorContrastCache.ts","webpack://browser-app/xterm/src/browser/ColorManager.ts","webpack://browser-app/xterm/src/browser/Dom.ts","webpack://browser-app/xterm/src/browser/Lifecycle.ts","webpack://browser-app/xterm/src/browser/Linkifier.ts","webpack://browser-app/xterm/src/browser/Linkifier2.ts","webpack://browser-app/xterm/src/browser/LocalizableStrings.ts","webpack://browser-app/xterm/src/browser/MouseZoneManager.ts","webpack://browser-app/xterm/src/browser/RenderDebouncer.ts","webpack://browser-app/xterm/src/browser/ScreenDprMonitor.ts","webpack://browser-app/xterm/src/browser/Terminal.ts","webpack://browser-app/xterm/src/browser/Viewport.ts","webpack://browser-app/xterm/src/browser/input/CompositionHelper.ts","webpack://browser-app/xterm/src/browser/input/Mouse.ts","webpack://browser-app/xterm/src/browser/input/MoveToCell.ts","webpack://browser-app/xterm/src/browser/public/AddonManager.ts","webpack://browser-app/xterm/src/browser/public/Terminal.ts","webpack://browser-app/xterm/src/browser/renderer/BaseRenderLayer.ts","webpack://browser-app/xterm/src/browser/renderer/CharacterJoinerRegistry.ts","webpack://browser-app/xterm/src/browser/renderer/CursorRenderLayer.ts","webpack://browser-app/xterm/src/browser/renderer/GridCache.ts","webpack://browser-app/xterm/src/browser/renderer/LinkRenderLayer.ts","webpack://browser-app/xterm/src/browser/renderer/Renderer.ts","webpack://browser-app/xterm/src/browser/renderer/RendererUtils.ts","webpack://browser-app/xterm/src/browser/renderer/SelectionRenderLayer.ts","webpack://browser-app/xterm/src/browser/renderer/TextRenderLayer.ts","webpack://browser-app/xterm/src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://browser-app/xterm/src/browser/renderer/atlas/CharAtlasCache.ts","webpack://browser-app/xterm/src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://browser-app/xterm/src/browser/renderer/atlas/Constants.ts","webpack://browser-app/xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://browser-app/xterm/src/browser/renderer/atlas/LRUMap.ts","webpack://browser-app/xterm/src/browser/renderer/dom/DomRenderer.ts","webpack://browser-app/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://browser-app/xterm/src/browser/selection/SelectionModel.ts","webpack://browser-app/xterm/src/browser/services/CharSizeService.ts","webpack://browser-app/xterm/src/browser/services/CoreBrowserService.ts","webpack://browser-app/xterm/src/browser/services/MouseService.ts","webpack://browser-app/xterm/src/browser/services/RenderService.ts","webpack://browser-app/xterm/src/browser/services/SelectionService.ts","webpack://browser-app/xterm/src/browser/services/Services.ts","webpack://browser-app/xterm/src/browser/services/SoundService.ts","webpack://browser-app/xterm/src/common/CircularList.ts","webpack://browser-app/xterm/src/common/Clone.ts","webpack://browser-app/xterm/src/common/CoreTerminal.ts","webpack://browser-app/xterm/src/common/EventEmitter.ts","webpack://browser-app/xterm/src/common/InputHandler.ts","webpack://browser-app/xterm/src/common/Lifecycle.ts","webpack://browser-app/xterm/src/common/Platform.ts","webpack://browser-app/xterm/src/common/TypedArrayUtils.ts","webpack://browser-app/xterm/src/common/WindowsMode.ts","webpack://browser-app/xterm/src/common/buffer/AttributeData.ts","webpack://browser-app/xterm/src/common/buffer/Buffer.ts","webpack://browser-app/xterm/src/common/buffer/BufferLine.ts","webpack://browser-app/xterm/src/common/buffer/BufferReflow.ts","webpack://browser-app/xterm/src/common/buffer/BufferSet.ts","webpack://browser-app/xterm/src/common/buffer/CellData.ts","webpack://browser-app/xterm/src/common/buffer/Constants.ts","webpack://browser-app/xterm/src/common/buffer/Marker.ts","webpack://browser-app/xterm/src/common/data/Charsets.ts","webpack://browser-app/xterm/src/common/data/EscapeSequences.ts","webpack://browser-app/xterm/src/common/input/Keyboard.ts","webpack://browser-app/xterm/src/common/input/TextDecoder.ts","webpack://browser-app/xterm/src/common/input/UnicodeV6.ts","webpack://browser-app/xterm/src/common/input/WriteBuffer.ts","webpack://browser-app/xterm/src/common/parser/Constants.ts","webpack://browser-app/xterm/src/common/parser/DcsParser.ts","webpack://browser-app/xterm/src/common/parser/EscapeSequenceParser.ts","webpack://browser-app/xterm/src/common/parser/OscParser.ts","webpack://browser-app/xterm/src/common/parser/Params.ts","webpack://browser-app/xterm/src/common/services/BufferService.ts","webpack://browser-app/xterm/src/common/services/CharsetService.ts","webpack://browser-app/xterm/src/common/services/CoreMouseService.ts","webpack://browser-app/xterm/src/common/services/CoreService.ts","webpack://browser-app/xterm/src/common/services/DirtyRowService.ts","webpack://browser-app/xterm/src/common/services/InstantiationService.ts","webpack://browser-app/xterm/src/common/services/LogService.ts","webpack://browser-app/xterm/src/common/services/OptionsService.ts","webpack://browser-app/xterm/src/common/services/ServiceRegistry.ts","webpack://browser-app/xterm/src/common/services/Services.ts","webpack://browser-app/xterm/src/common/services/UnicodeService.ts","webpack://browser-app/xterm/webpack/bootstrap","webpack://browser-app/xterm/webpack/startup","webpack://browser-app/../node_modules/@theia/terminal/src/browser/style/terminal-search.css?fd01"],"names":["root","factory","module","exports","self","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","core","_core","rows","cols","_renderService","clear","resize","element","parentElement","dimensions","actualCellWidth","actualCellHeight","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","viewport","scrollBarWidth","floor","FitAddon","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","NON_WORD_CHARACTERS","_linesCacheTimeoutId","findNext","term","searchOptions","Error","length","clearSelection","currentSelection","startCol","startRow","hasSelection","incremental","getSelectionPosition","endRow","startColumn","endColumn","_initLinesCache","searchPosition","result","_findInLine","y","buffer","active","baseY","_selectResult","findPrevious","isReverseSearch","row","col","_linesCache","Array","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","onResize","clearTimeout","setTimeout","undefined","_isWholeWord","searchIndex","line","indexOf","firstLine","getLine","isWrapped","stringLine","_translateBufferLineToStringWithWrap","searchTerm","caseSensitive","toLowerCase","searchStringLine","resultIndex","regex","searchRegex","RegExp","foundTerm","exec","slice","lastIndex","lastIndexOf","wholeWord","i","cell","getCell","char","getChars","getWidth","lineIndex","trimRight","lineWrapsToNext","lineString","nextLine","translateToString","substring","select","viewportY","scrollLines","SearchAddon","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","_refreshRowsDimensions","_renderRowsDebouncer","RenderDebouncer","_renderRows","bind","_refreshRows","_liveRegion","insertAdjacentElement","register","_onResize","onRender","start","end","onScroll","onA11yChar","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","channels","rgb","rgba","toPaddedHex","c","s","contrastRatio","l1","l2","toCss","r","g","b","a","toRgba","color","blend","bg","fg","css","fgR","fgG","fgB","bgR","bgG","bgB","round","isOpaque","ensureContrastRatio","ratio","toColor","opaque","rgbaColor","toChannels","opacity","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","ceil","increaseLuminance","min","bgL","fgL","_color","_rgba","setCss","getCss","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","onOptionsChange","setTheme","theme","_parseColor","selection","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","fillStyle","console","warn","fillRect","data","getImageData","split","map","component","Number","alpha","ColorManager","elements","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","source","flags","stringIndex","uri","bufferIndex","stringIndexToBufferIndex","get","attr","getFg","isValid","_addLink","x","getStringCellWidth","x1","y1","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_currentLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestReset","reset","onRequestScroll","eraseAttr","scroll","onRequestWindowsOptionsReport","_reportWindowsOptions","onAnsiColorChange","_changeAnsiColor","forwardEvent","onTitleChange","_afterResize","optionsService","_colorManager","ansiColor","colorIndex","setColors","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","_coreService","sendFocus","C0","ESC","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cellHeight","lineHeight","cursorTop","cursorLeft","_initGlobal","_bindKeys","copyHandler","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_compositionView","CompositionHelper","_theme","onOptionChange","renderer","RenderService","IRenderService","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","suppressEvent","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","onMouseDown","_coreMouseService","areMouseEventsActive","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","markers","addMarker","cursorYOffset","normal","ybase","column","setSelection","getSelection","selectionStart","selectionEnd","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","_soundBell","playBellSound","hasValidSize","getBlankLine","DEFAULT_ATTR_DATA","_onScroll","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","cellWidth","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","Terminal","_scrollLines","_scrollArea","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","newScrollTop","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_textarea","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","bufferLine","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","_addons","instance","loadAddon","loadedAddon","isDisposed","_wrappedAddonDispose","apply","AddonManager","_addonManager","_checkProposedApi","allowProposedApi","onData","onBinary","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","columns","_verifyIntegers","registerMarker","scrollPages","pageCount","scrollToTop","scrollToLine","callback","writeUtf8","writeln","getOption","setOption","addon","values","Infinity","isNaN","init","BufferLineApiView","getNullCell","CellData","_onBufferChange","_normal","BufferApiView","_alternate","onBufferActivate","alternate","_line","loadCell","registerCsiHandler","addCsiHandler","params","toArray","registerDcsHandler","addDcsHandler","registerEscHandler","addEscHandler","registerOscHandler","ident","addOscHandler","provider","unicodeService","versions","activeVersion","version","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","toColorRGB","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","BaseRenderLayer","firstCell","combinedData","_width","isCombined","setFromCharData","getAsCharData","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","_workCell","joiner","getJoinedCharacters","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","joinedRanges","_getJoinedRanges","startIndex","endIndex","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","_state","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","cursorBlink","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","isCursorHidden","cursorY","viewportRelativeCursorY","cursorX","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","cache","GridCache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","_id","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","l","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","characterJoinerRegistry","_characterWidth","_characterFont","_characterOverlapCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","prevFillStyle","nextFillStyle","isBgPalette","_drawForeground","isInvisible","isUnderline","beginFrame","hasOwnProperty","overlaps","measureText","_didWarmUp","_doWarmUp","BaseCharAtlas","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","colorCode","CHAR_ATLAS_CELL_SPACING","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","clearColor","putImageData","_addGlyphToBitmap","isSafari","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","lineLength","charElement","_applyMinimumContrast","_addStyle","padStart","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","getRootNode","activeElement","hasFocus","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","createDecorator","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","charCodeAt","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","_onBinary","_onData","_onLineFeed","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","UnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","_writeBuffer","WriteBuffer","parse","_windowsMode","writeSync","MINIMUM_COLS","MINIMUM_ROWS","newLine","_cachedBlankLine","topRow","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","copyFrom","isUserScrolling","scrollRegionHeight","markRangeDirty","oldYdisp","scrollAmount","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","put","concat","subarray","unhook","success","utf32ToString","pt","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestScroll","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onAnsiColorChange","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","BEL","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","HTS","tabSet","OscHandler","setTitle","setIconName","setAnsiColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","error","DECRQSS","cursorStartX","cursorStartY","clearRange","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","fill","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","underlineStyle","updateExtended","p","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","_parseAnsiColorChange","collectAndFlag","level","yOffset","markAllDirty","_disposables","d","unregister","disposables","array","isNode","navigator","userAgent","platform","includes","test","isIpad","isIphone","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","Buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","src","applyInReverse","srcData","srcCombinedKeys","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_alt","_activeBuffer","inactiveBuffer","BufferSet","obj","combined","DEFAULT_ATTR","_nextId","_onDispose","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","codepoint","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","num","ucs","mid","bisearch","UnicodeV6","_action","_callbacks","_pendingData","_bufferOffset","cb","_innerWrite","startTime","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","unused","PRINTABLES","EXECUTABLES","states","_transitions","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","res","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","abort","handlers","addSubParam","addDigit","handlersEsc","jj","_start","_put","_end","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","k","newParams","prototype","getSubParamsAll","store","cur","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_entries","entries","service","ServiceCollection","_services","IInstantiationService","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","altClickMovesCursor","FONT_WEIGHT_OPTIONS","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","defaultProvider","_activeProvider"],"mappings":"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AAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,QAEzCC,EAAiB,CACrB,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,SA0BZ,aAGE,aAEE,GAJc,KAAAxhC,QAAU,KAInBshC,EAAO,CACVA,EAAQ,IAAI/iB,WAAW,OACvB,EAAAiR,KAAK8R,EAAO,GACZA,EAAM,GAAK,EAEX,EAAA9R,KAAK8R,EAAO,EAAG,EAAG,IAClB,EAAA9R,KAAK8R,EAAO,EAAG,IAAM,KAIrB,EAAA9R,KAAK8R,EAAO,EAAG,KAAQ,MACvBA,EAAM,MAAU,EAChBA,EAAM,MAAU,EAChB,EAAA9R,KAAK8R,EAAO,EAAG,MAAQ,OACvBA,EAAM,OAAU,EAEhB,EAAA9R,KAAK8R,EAAO,EAAG,MAAQ,OACvB,EAAA9R,KAAK8R,EAAO,EAAG,MAAQ,OACvB,EAAA9R,KAAK8R,EAAO,EAAG,MAAQ,OACvB,EAAA9R,KAAK8R,EAAO,EAAG,MAAQ,OACvB,EAAA9R,KAAK8R,EAAO,EAAG,MAAQ,OACvB,EAAA9R,KAAK8R,EAAO,EAAG,MAAQ,OAOvB,IAAK,IAAIptD,EAAI,EAAGA,EAAIqtD,EAAcl6D,SAAU6M,EAC1C,EAAAs7C,KAAK8R,EAAO,EAAGC,EAAcrtD,GAAG,GAAIqtD,EAAcrtD,GAAG,GAAK,IAalE,OARS,YAAA05C,QAAP,SAAe6T,GACb,OAAIA,EAAM,GAAW,EACjBA,EAAM,IAAY,EAClBA,EAAM,MAAcH,EAAMG,GA9DlC,SAAkBC,EAAapnD,GAC7B,IAEIqnD,EAFAprD,EAAM,EACNpQ,EAAMmU,EAAKjT,OAAS,EAExB,GAAIq6D,EAAMpnD,EAAK,GAAG,IAAMonD,EAAMpnD,EAAKnU,GAAK,GACtC,OAAO,EAET,KAAOA,GAAOoQ,GAEZ,GAAImrD,EAAMpnD,EADVqnD,EAAOprD,EAAMpQ,GAAQ,GACD,GAClBoQ,EAAMorD,EAAM,MACP,MAAID,EAAMpnD,EAAKqnD,GAAK,IAGzB,OAAO,EAFPx7D,EAAMw7D,EAAM,EAKhB,OAAO,EA8CDC,CAASH,EAAKD,GAAwB,EACrCC,GAAO,QAAWA,GAAO,QAAaA,GAAO,QAAWA,GAAO,OAAiB,EAC9E,GAEX,EA/CA,GAAa,EAAAI,a,mFCrEb,IAiBA,aAME,WAAoBC,GAAA,KAAAA,UALZ,KAAA1gB,aAAwC,GACxC,KAAA2gB,WAA2C,GAC3C,KAAAC,aAAe,EACf,KAAAC,cAAgB,EAwE1B,OApES,YAAAzgB,UAAP,SAAiBlnC,GAGf,GAAI7V,KAAK28C,aAAa/5C,OAAQ,CAC5B,IAAK,IAAIyD,EAAIrG,KAAKw9D,cAAen3D,EAAIrG,KAAK28C,aAAa/5C,SAAUyD,EAAG,CAClE,IAAM,EAAOrG,KAAK28C,aAAat2C,GACzBo3D,EAAKz9D,KAAKs9D,WAAWj3D,GAC3BrG,KAAKq9D,QAAQ,GACTI,GAAIA,IAGVz9D,KAAK28C,aAAe,GACpB38C,KAAKs9D,WAAa,GAClBt9D,KAAKu9D,aAAe,EAEpBv9D,KAAKw9D,cAAgB,WAGvBx9D,KAAKq9D,QAAQxnD,IAGR,YAAAqQ,MAAP,SAAarQ,EAA2BsjB,GAAxC,WACE,GAAIn5B,KAAKu9D,aA/Ca,IAgDpB,MAAM,IAAI56D,MAAM,+DAIb3C,KAAK28C,aAAa/5C,SACrB5C,KAAKw9D,cAAgB,EACrB54D,YAAW,WAAM,SAAK84D,kBAGxB19D,KAAKu9D,cAAgB1nD,EAAKjT,OAC1B5C,KAAK28C,aAAarxC,KAAKuK,GACvB7V,KAAKs9D,WAAWhyD,KAAK6tB,IAGb,YAAAukC,YAAV,WAEE,IAFF,WACQC,EAAY33B,KAAKC,MAChBjmC,KAAK28C,aAAa/5C,OAAS5C,KAAKw9D,eAAe,CACpD,IAAM3nD,EAAO7V,KAAK28C,aAAa38C,KAAKw9D,eAC9BC,EAAKz9D,KAAKs9D,WAAWt9D,KAAKw9D,eAOhC,GANAx9D,KAAKw9D,gBAELx9D,KAAKq9D,QAAQxnD,GACb7V,KAAKu9D,cAAgB1nD,EAAKjT,OACtB66D,GAAIA,IAEJz3B,KAAKC,MAAQ03B,GAjEE,GAkEjB,MAGA39D,KAAK28C,aAAa/5C,OAAS5C,KAAKw9D,eAG9Bx9D,KAAKw9D,cAjEuB,KAkE9Bx9D,KAAK28C,aAAe38C,KAAK28C,aAAa12C,MAAMjG,KAAKw9D,eACjDx9D,KAAKs9D,WAAat9D,KAAKs9D,WAAWr3D,MAAMjG,KAAKw9D,eAC7Cx9D,KAAKw9D,cAAgB,GAEvB54D,YAAW,WAAM,SAAK84D,gBAAe,KAErC19D,KAAK28C,aAAe,GACpB38C,KAAKs9D,WAAa,GAClBt9D,KAAKu9D,aAAe,EACpBv9D,KAAKw9D,cAAgB,IAG3B,EA5EA,GAAa,EAAA5gB,e,qFCwBA,EAAAghB,cAAgB,K,gGClD7B,aACA,UACA,UAEMC,EAAgC,GAEtC,0BACU,KAAAC,UAA6ChrD,OAAOirD,OAAO,MAC3D,KAAAC,QAAyBH,EACzB,KAAAI,OAAiB,EACjB,KAAAC,WAAqC,aAmF/C,OAjFS,YAAAh+D,QAAP,WACEF,KAAK89D,UAAYhrD,OAAOirD,OAAO,MAC/B/9D,KAAKk+D,WAAa,aAClBl+D,KAAKg+D,QAAUH,GAGV,YAAAM,gBAAP,SAAuBljC,EAAezkB,QACN3R,IAA1B7E,KAAK89D,UAAU7iC,KACjBj7B,KAAK89D,UAAU7iC,GAAS,IAE1B,IAAMmjC,EAAcp+D,KAAK89D,UAAU7iC,GAEnC,OADAmjC,EAAY9yD,KAAKkL,GACV,CACLtW,QAAS,WACP,IAAMm+D,EAAeD,EAAYn5D,QAAQuR,IACnB,IAAlB6nD,GACFD,EAAY7kD,OAAO8kD,EAAc,MAMlC,YAAAC,aAAP,SAAoBrjC,GACdj7B,KAAK89D,UAAU7iC,WAAej7B,KAAK89D,UAAU7iC,IAG5C,YAAAsjC,mBAAP,SAA0B/nD,GACxBxW,KAAKk+D,WAAa1nD,GAGb,YAAAuO,MAAP,WACM/kB,KAAKg+D,QAAQp7D,QACf5C,KAAK6gD,QAAO,GAEd7gD,KAAKg+D,QAAUH,EACf79D,KAAKi+D,OAAS,GAGT,YAAAxd,KAAP,SAAYxlB,EAAeP,GAKzB,GAHA16B,KAAK+kB,QACL/kB,KAAKi+D,OAAShjC,EACdj7B,KAAKg+D,QAAUh+D,KAAK89D,UAAU7iC,IAAU4iC,EACnC79D,KAAKg+D,QAAQp7D,OAGhB,IAAK,IAAI+b,EAAI3e,KAAKg+D,QAAQp7D,OAAS,EAAG+b,GAAK,EAAGA,IAC5C3e,KAAKg+D,QAAQr/C,GAAG8hC,KAAK/lB,QAHvB16B,KAAKk+D,WAAWl+D,KAAKi+D,OAAQ,OAAQvjC,IAQlC,YAAAgmB,IAAP,SAAW7qC,EAAmB1M,EAAeC,GAC3C,GAAKpJ,KAAKg+D,QAAQp7D,OAGhB,IAAK,IAAI+b,EAAI3e,KAAKg+D,QAAQp7D,OAAS,EAAG+b,GAAK,EAAGA,IAC5C3e,KAAKg+D,QAAQr/C,GAAG+hC,IAAI7qC,EAAM1M,EAAOC,QAHnCpJ,KAAKk+D,WAAWl+D,KAAKi+D,OAAQ,MAAO,EAAAld,cAAclrC,EAAM1M,EAAOC,KAQ5D,YAAAy3C,OAAP,SAAcC,GACZ,GAAK9gD,KAAKg+D,QAAQp7D,OAEX,CAEL,IADA,IAAI+b,EAAI3e,KAAKg+D,QAAQp7D,OAAS,EACvB+b,GAAK,IACN3e,KAAKg+D,QAAQr/C,GAAGkiC,OAAOC,GADdniC,KAOf,IAFAA,IAEOA,GAAK,EAAGA,IACb3e,KAAKg+D,QAAQr/C,GAAGkiC,QAAO,QAXzB7gD,KAAKk+D,WAAWl+D,KAAKi+D,OAAQ,SAAUnd,GAczC9gD,KAAKg+D,QAAUH,EACf79D,KAAKi+D,OAAS,GAElB,EAvFA,GAAa,EAAAO,YA0Fb,IAAMC,EAAe,IAAI,EAAAC,OACzBD,EAAaE,SAAS,GAMtB,iBAKE,WAAoBC,GAAA,KAAAA,WAJZ,KAAAre,MAAQ,GACR,KAAAse,QAAmBJ,EACnB,KAAAK,WAAqB,EAqC/B,OAjCS,YAAAre,KAAP,SAAY/lB,GAKV16B,KAAK6+D,QAAWnkC,EAAO93B,OAAS,GAAK83B,EAAOA,OAAO,GAAMA,EAAO0gB,QAAUqjB,EAC1Ez+D,KAAKugD,MAAQ,GACbvgD,KAAK8+D,WAAY,GAGZ,YAAApe,IAAP,SAAW7qC,EAAmB1M,EAAeC,GACvCpJ,KAAK8+D,YAGT9+D,KAAKugD,OAAS,EAAAQ,cAAclrC,EAAM1M,EAAOC,GACrCpJ,KAAKugD,MAAM39C,OAAS,EAAAg7D,gBACtB59D,KAAKugD,MAAQ,GACbvgD,KAAK8+D,WAAY,KAId,YAAAje,OAAP,SAAcC,GACZ,IAAIie,GAAM,EASV,OARI/+D,KAAK8+D,UACPC,GAAM,EACGje,IACTie,EAAM/+D,KAAK4+D,SAAS5+D,KAAKugD,MAAOvgD,KAAK6+D,UAEvC7+D,KAAK6+D,QAAUJ,EACfz+D,KAAKugD,MAAQ,GACbvgD,KAAK8+D,WAAY,EACVC,GAEX,EAxCA,GAAa,EAAAnV,c,qfCvGb,aAEA,UACA,UACA,UACA,UAgBA,aAGE,WAAYhnD,GACV5C,KAAK68D,MAAQ,IAAI/iB,WAAWl3C,GAmChC,OA3BS,YAAAo8D,WAAP,SAAkB1yC,EAAsBjU,GACtC,EAAA0yC,KAAK/qD,KAAK68D,MAAOvwC,GAAU,EAAsCjU,IAU5D,YAAAxQ,IAAP,SAAWu0B,EAAcld,EAAoBoN,EAAsBjU,GACjErY,KAAK68D,MAAM39C,GAAS,EAAgCkd,GAAQ9P,GAAU,EAAsCjU,GAUvG,YAAA4mD,QAAP,SAAeC,EAAiBhgD,EAAoBoN,EAAsBjU,GACxE,IAAK,IAAIhS,EAAI,EAAGA,EAAI64D,EAAMt8D,OAAQyD,IAChCrG,KAAK68D,MAAM39C,GAAS,EAAgCggD,EAAM74D,IAAMimB,GAAU,EAAsCjU,GAGtH,EAvCA,GAAa,EAAA8mD,kBA2Cb,IAAMC,EAAsB,IAOf,EAAAC,uBAAyB,WACpC,IAAMxC,EAAyB,IAAIsC,EAAgB,MAI7CG,EAAYj7D,MAAM2zB,MAAM,KAAM3zB,MADhB,MACoC2R,KAAI,SAACupD,EAAal5D,GAAc,OAAAA,KAClFoJ,EAAI,SAACtG,EAAeC,GAA0B,OAAAk2D,EAAUr5D,MAAMkD,EAAOC,IAGrEo2D,EAAa/vD,EAAE,GAAM,KACrBgwD,EAAchwD,EAAE,EAAM,IAC5BgwD,EAAYn0D,KAAK,IACjBm0D,EAAYn0D,KAAK0sB,MAAMynC,EAAahwD,EAAE,GAAM,KAE5C,IACIyP,EADEwgD,EAAmBjwD,EAAE,EAAoB,IAQ/C,IAAKyP,KAJL29C,EAAMmC,WAAW,EAAD,GAEhBnC,EAAMoC,QAAQO,EAAY,EAAF,KAEVE,EACZ7C,EAAMoC,QAAQ,CAAC,GAAM,GAAM,IAAM,KAAO//C,EAAO,EAAF,GAC7C29C,EAAMoC,QAAQxvD,EAAE,IAAM,KAAOyP,EAAO,EAAF,GAClC29C,EAAMoC,QAAQxvD,EAAE,IAAM,KAAOyP,EAAO,EAAF,GAClC29C,EAAMh1D,IAAI,IAAMqX,EAAO,EAAF,GACrB29C,EAAMh1D,IAAI,GAAMqX,EAAO,GAAF,GACrB29C,EAAMh1D,IAAI,IAAMqX,EAAO,EAAF,GACrB29C,EAAMoC,QAAQ,CAAC,IAAM,IAAM,KAAO//C,EAAO,EAAF,GACvC29C,EAAMh1D,IAAI,IAAMqX,EAAO,GAAF,GACrB29C,EAAMh1D,IAAI,IAAMqX,EAAO,GAAF,GAuFvB,OApFA29C,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMh1D,IAAI,IAAM,EAAF,KACdg1D,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMh1D,IAAI,IAAM,EAAF,KACdg1D,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMh1D,IAAI,IAAM,EAAF,KACdg1D,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMh1D,IAAI,IAAM,EAAF,KACdg1D,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMh1D,IAAI,IAAM,EAAF,KAEdg1D,EAAMh1D,IAAI,GAAM,EAAF,KACdg1D,EAAMoC,QAAQO,EAAY,EAAF,KACxB3C,EAAMh1D,IAAI,IAAM,EAAF,KACdg1D,EAAMoC,QAAQ,CAAC,IAAM,GAAM,GAAM,GAAM,GAAO,EAAF,KAC5CpC,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAE3BotD,EAAMoC,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,KAChCpC,EAAMoC,QAAQO,EAAY,EAAF,KACxB3C,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMh1D,IAAI,IAAM,EAAF,KACdg1D,EAAMh1D,IAAI,IAAM,EAAF,KAEdg1D,EAAMh1D,IAAI,GAAM,EAAF,MACdg1D,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAC3BotD,EAAMoC,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtCpC,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,EAAF,KAC3BotD,EAAMoC,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtCpC,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAC3BotD,EAAMh1D,IAAI,IAAM,EAAF,KACdg1D,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAE3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,EAAF,MAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,MAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,MAC3BotD,EAAMoC,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,MAChCpC,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,EAAF,MAE3BotD,EAAMh1D,IAAI,GAAM,EAAF,MACdg1D,EAAMoC,QAAQQ,EAAa,EAAF,KACzB5C,EAAMh1D,IAAI,IAAM,EAAF,KACdg1D,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,KAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,MAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,EAAF,MAC3BotD,EAAMoC,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,MACtCpC,EAAMoC,QAAQQ,EAAa,GAAF,MACzB5C,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,GAAF,MAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,GAAF,MAC3BotD,EAAMoC,QAAQQ,EAAa,GAAF,MACzB5C,EAAMh1D,IAAI,IAAM,GAAF,MACdg1D,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,GAAF,MAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,GAAF,MAC3BotD,EAAMoC,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,GAAF,MACtCpC,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,GAAF,MAC3BotD,EAAMoC,QAAQQ,EAAa,GAAF,MACzB5C,EAAMh1D,IAAI,IAAM,GAAF,MACdg1D,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,GAAF,MAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,GAAF,MAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,IAAO,GAAF,MAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,GAAF,OAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,GAAF,OAC3BotD,EAAMoC,QAAQxvD,EAAE,GAAM,KAAO,EAAF,OAC3BotD,EAAMoC,QAAQQ,EAAa,GAAF,OACzB5C,EAAMoC,QAAQO,EAAY,GAAF,OACxB3C,EAAMh1D,IAAI,IAAM,GAAF,MACdg1D,EAAMoC,QAAQ,CAAC,GAAM,IAAM,GAAM,IAAO,GAAF,MAEtCpC,EAAMh1D,IAAIu3D,EAAqB,EAAF,KAC7BvC,EAAMh1D,IAAIu3D,EAAqB,EAAF,KAC7BvC,EAAMh1D,IAAIu3D,EAAqB,EAAF,KAC7BvC,EAAMh1D,IAAIu3D,EAAqB,GAAF,MAC7BvC,EAAMh1D,IAAIu3D,EAAqB,GAAF,OACtBvC,EAtH6B,GAwJtC,kBAyBE,WACqB8C,QAAA,IAAAA,MAAgC,EAAAN,wBADrD,MAGE,cAAO,K,OAFY,EAAAM,eAInB,EAAKC,aAAe,EACpB,EAAKC,aAAe,EAAKD,aACzB,EAAKf,QAAU,IAAI,EAAAH,OACnB,EAAKG,QAAQF,SAAS,GACtB,EAAKmB,SAAW,EAChB,EAAKpW,mBAAqB,EAG1B,EAAKqW,gBAAkB,SAAClqD,EAAM1M,EAAOC,KACrC,EAAK42D,kBAAoB,SAAC5jC,KAC1B,EAAK6jC,cAAgB,SAAChlC,EAAeP,KACrC,EAAKwlC,cAAgB,SAACjlC,KACtB,EAAKklC,gBAAkB,SAACjhD,GAAwC,OAAAA,GAChE,EAAKkhD,cAAgB,EAAKL,gBAC1B,EAAKM,iBAAmBvtD,OAAOirD,OAAO,MACtC,EAAKuC,aAAextD,OAAOirD,OAAO,MAClC,EAAKwC,aAAeztD,OAAOirD,OAAO,MAClC,EAAKyC,WAAa,IAAI,EAAAC,UACtB,EAAKC,WAAa,IAAI,EAAAlC,UACtB,EAAKmC,cAAgB,EAAKR,gBAG1B,EAAKrlC,mBAAmB,CAACojB,MAAO,OAAO,WAAM,Y,EAuVjD,OA3Y0C,OAuD9B,YAAA0iB,YAAV,SAAsB/nD,EAAyBgoD,QAAA,IAAAA,MAAA,CAAwB,GAAM,MAC3E,IAAIC,EAAM,EACV,GAAIjoD,EAAGirC,OAAQ,CACb,GAAIjrC,EAAGirC,OAAOlhD,OAAS,EACrB,MAAM,IAAID,MAAM,qCAGlB,IADAm+D,EAAMjoD,EAAGirC,OAAO/J,WAAW,KAChB,GAAO+mB,GAAOA,EAAM,GAC7B,MAAM,IAAIn+D,MAAM,wCAGpB,GAAIkW,EAAGoqC,cAAe,CACpB,GAAIpqC,EAAGoqC,cAAcrgD,OAAS,EAC5B,MAAM,IAAID,MAAM,iDAElB,IAAK,IAAI0D,EAAI,EAAGA,EAAIwS,EAAGoqC,cAAcrgD,SAAUyD,EAAG,CAChD,IAAM06D,EAAeloD,EAAGoqC,cAAclJ,WAAW1zC,GACjD,GAAI,GAAO06D,GAAgBA,EAAe,GACxC,MAAM,IAAIp+D,MAAM,8CAElBm+D,IAAQ,EACRA,GAAOC,GAGX,GAAwB,IAApBloD,EAAGqlC,MAAMt7C,OACX,MAAM,IAAID,MAAM,+BAElB,IAAMq+D,EAAYnoD,EAAGqlC,MAAMnE,WAAW,GACtC,GAAI8mB,EAAW,GAAKG,GAAaA,EAAYH,EAAW,GACtD,MAAM,IAAIl+D,MAAM,0BAA0Bk+D,EAAW,GAAE,OAAOA,EAAW,IAK3E,OAHAC,IAAQ,GACDE,GAKF,YAAAxe,cAAP,SAAqBvnB,GAEnB,IADA,IAAM6lC,EAAgB,GACf7lC,GACL6lC,EAAIx1D,KAAKslB,OAAOC,aAAqB,IAARoK,IAC7BA,IAAU,EAEZ,OAAO6lC,EAAIG,UAAU/gC,KAAK,KAGrB,YAAAhgC,QAAP,WACEF,KAAKsgE,aAAextD,OAAOirD,OAAO,MAClC/9D,KAAKqgE,iBAAmBvtD,OAAOirD,OAAO,MACtC/9D,KAAKugE,aAAeztD,OAAOirD,OAAO,MAClC/9D,KAAKwgE,WAAWtgE,UAChBF,KAAK0gE,WAAWxgE,WAGX,YAAA4iD,gBAAP,SAAuBtsC,GACrBxW,KAAKogE,cAAgB5pD,GAEhB,YAAA0qD,kBAAP,WACElhE,KAAKogE,cAAgBpgE,KAAK+/D,iBAGrB,YAAAjlC,mBAAP,SAA0BjiB,EAAyBrC,GACjD,IAAMykB,EAAQj7B,KAAK4gE,YAAY/nD,EAAI,CAAC,GAAM,WACThU,IAA7B7E,KAAKugE,aAAatlC,KACpBj7B,KAAKugE,aAAatlC,GAAS,IAE7B,IAAMmjC,EAAcp+D,KAAKugE,aAAatlC,GAEtC,OADAmjC,EAAY9yD,KAAKkL,GACV,CACLtW,QAAS,WACP,IAAMm+D,EAAeD,EAAYn5D,QAAQuR,IACnB,IAAlB6nD,GACFD,EAAY7kD,OAAO8kD,EAAc,MAKlC,YAAA8C,gBAAP,SAAuBtoD,GACjB7Y,KAAKugE,aAAavgE,KAAK4gE,YAAY/nD,EAAI,CAAC,GAAM,eAAgB7Y,KAAKugE,aAAavgE,KAAK4gE,YAAY/nD,EAAI,CAAC,GAAM,QAE3G,YAAA4pC,sBAAP,SAA6BjsC,GAC3BxW,KAAKkgE,cAAgB1pD,GAGhB,YAAAuvC,kBAAP,SAAyB8B,EAAcrxC,GACrCxW,KAAKqgE,iBAAiBxY,EAAK9N,WAAW,IAAMvjC,GAEvC,YAAA4qD,oBAAP,SAA2BvZ,GACrB7nD,KAAKqgE,iBAAiBxY,EAAK9N,WAAW,YAAY/5C,KAAKqgE,iBAAiBxY,EAAK9N,WAAW,KAEvF,YAAA2I,0BAAP,SAAiClsC,GAC/BxW,KAAKggE,kBAAoBxpD,GAGpB,YAAAgkB,mBAAP,SAA0B3hB,EAAyBrC,GACjD,IAAMykB,EAAQj7B,KAAK4gE,YAAY/nD,QACEhU,IAA7B7E,KAAKsgE,aAAarlC,KACpBj7B,KAAKsgE,aAAarlC,GAAS,IAE7B,IAAMmjC,EAAcp+D,KAAKsgE,aAAarlC,GAEtC,OADAmjC,EAAY9yD,KAAKkL,GACV,CACLtW,QAAS,WACP,IAAMm+D,EAAeD,EAAYn5D,QAAQuR,IACnB,IAAlB6nD,GACFD,EAAY7kD,OAAO8kD,EAAc,MAKlC,YAAAgD,gBAAP,SAAuBxoD,GACjB7Y,KAAKsgE,aAAatgE,KAAK4gE,YAAY/nD,YAAa7Y,KAAKsgE,aAAatgE,KAAK4gE,YAAY/nD,KAElF,YAAAypC,sBAAP,SAA6BnpB,GAC3Bn5B,KAAKigE,cAAgB9mC,GAGhB,YAAAyB,mBAAP,SAA0B/hB,EAAyBrC,GACjD,OAAOxW,KAAK0gE,WAAWvC,gBAAgBn+D,KAAK4gE,YAAY/nD,GAAKrC,IAExD,YAAA8qD,gBAAP,SAAuBzoD,GACrB7Y,KAAK0gE,WAAWpC,aAAat+D,KAAK4gE,YAAY/nD,KAEzC,YAAA+pC,sBAAP,SAA6BpsC,GAC3BxW,KAAK0gE,WAAWnC,mBAAmB/nD,IAG9B,YAAAwkB,mBAAP,SAA0BC,EAAezkB,GACvC,OAAOxW,KAAKwgE,WAAWrC,gBAAgBljC,EAAOzkB,IAEzC,YAAA+qD,gBAAP,SAAuBtmC,GACrBj7B,KAAKwgE,WAAWlC,aAAarjC,IAExB,YAAA0nB,sBAAP,SAA6BnsC,GAC3BxW,KAAKwgE,WAAWjC,mBAAmB/nD,IAG9B,YAAAyxC,gBAAP,SAAuB9uB,GACrBn5B,KAAK2gE,cAAgBxnC,GAEhB,YAAAqoC,kBAAP,WACExhE,KAAK2gE,cAAgB3gE,KAAKmgE,iBAGrB,YAAAp7C,MAAP,WACE/kB,KAAK6/D,aAAe7/D,KAAK4/D,aACzB5/D,KAAKwgE,WAAWz7C,QAChB/kB,KAAK0gE,WAAW37C,QAChB/kB,KAAK6+D,QAAQ95C,QACb/kB,KAAK6+D,QAAQF,SAAS,GACtB3+D,KAAK8/D,SAAW,EAChB9/D,KAAK0pD,mBAAqB,GAmBrB,YAAA7M,MAAP,SAAahnC,EAAmBjT,GAW9B,IAVA,IAAIw5B,EAAO,EACPqlC,EAAa,EACb5B,EAAe7/D,KAAK6/D,aAClB6B,EAAM1hE,KAAKwgE,WACXmB,EAAM3hE,KAAK0gE,WACbkB,EAAU5hE,KAAK8/D,SACbplC,EAAS16B,KAAK6+D,QACdhC,EAAoB78D,KAAK2/D,aAAa9C,MAGnCx2D,EAAI,EAAGA,EAAIzD,IAAUyD,EAAG,CAK/B,QADAo7D,EAAa5E,EAAMgD,GAAgB,IAHnCzjC,EAAOvmB,EAAKxP,IAG+D,IAAO+1B,EAAOgjC,MACnE,GACpB,KAAK,EAGH,IAAK,IAAI,EAAI/4D,EAAI,KAAO,EAAG,CACzB,GAAI,GAAKzD,IAAWw5B,EAAOvmB,EAAK,IAAM,IAASumB,EAAO,KAAQA,EAAOgjC,EAAsB,CACzFp/D,KAAKogE,cAAcvqD,EAAMxP,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAKzD,IAAWw5B,EAAOvmB,EAAK,IAAM,IAASumB,EAAO,KAAQA,EAAOgjC,EAAsB,CAC3Fp/D,KAAKogE,cAAcvqD,EAAMxP,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAKzD,IAAWw5B,EAAOvmB,EAAK,IAAM,IAASumB,EAAO,KAAQA,EAAOgjC,EAAsB,CAC3Fp/D,KAAKogE,cAAcvqD,EAAMxP,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAKzD,IAAWw5B,EAAOvmB,EAAK,IAAM,IAASumB,EAAO,KAAQA,EAAOgjC,EAAsB,CAC3Fp/D,KAAKogE,cAAcvqD,EAAMxP,EAAG,GAC5BA,EAAI,EAAI,EACR,OAGJ,MACF,KAAK,EACCrG,KAAKqgE,iBAAiBjkC,GAAOp8B,KAAKqgE,iBAAiBjkC,KAClDp8B,KAAKggE,kBAAkB5jC,GAC5Bp8B,KAAK0pD,mBAAqB,EAC1B,MACF,KAAK,EACH,MACF,KAAK,EAUH,GAT8B1pD,KAAK2gE,cACjC,CACEp2D,SAAUlE,EACV+1B,KAAI,EACJyjC,aAAY,EACZ+B,QAAO,EACPlnC,OAAM,EACNmnC,OAAO,IAEAA,MAAO,OAElB,MACF,KAAK,EAIH,IAFA,IAAMC,EAAW9hE,KAAKsgE,aAAasB,GAAW,EAAIxlC,GAC9Czd,EAAImjD,EAAWA,EAASl/D,OAAS,GAAK,EACnC+b,GAAK,IAENmjD,EAASnjD,GAAG+b,GAFH/b,KAMXA,EAAI,GACN3e,KAAKigE,cAAc2B,GAAW,EAAIxlC,EAAM1B,GAE1C16B,KAAK0pD,mBAAqB,EAC1B,MACF,KAAK,EAEH,GACE,OAAQttB,GACN,KAAK,GACH1B,EAAOikC,SAAS,GAChB,MACF,KAAK,GACHjkC,EAAOqnC,aAAa,GACpB,MACF,QACErnC,EAAOsnC,SAAS5lC,EAAO,aAElB/1B,EAAIzD,IAAWw5B,EAAOvmB,EAAKxP,IAAM,IAAQ+1B,EAAO,IAC3D/1B,IACA,MACF,KAAK,EACHu7D,IAAY,EACZA,GAAWxlC,EACX,MACF,KAAK,GAGH,IAFA,IAAM6lC,EAAcjiE,KAAKugE,aAAaqB,GAAW,EAAIxlC,GACjD8lC,EAAKD,EAAcA,EAAYr/D,OAAS,GAAK,EAC1Cs/D,GAAM,IAEPD,EAAYC,KAFFA,KAMZA,EAAK,GACPliE,KAAKkgE,cAAc0B,GAAW,EAAIxlC,GAEpCp8B,KAAK0pD,mBAAqB,EAC1B,MACF,KAAK,GACHhvB,EAAO3V,QACP2V,EAAOikC,SAAS,GAChBiD,EAAU,EACV,MACF,KAAK,GACHD,EAAIlhB,KAAKmhB,GAAW,EAAIxlC,EAAM1B,GAC9B,MACF,KAAK,GAGH,IAAK,IAAI,EAAIr0B,EAAI,KAAO,EACtB,GAAI,GAAKzD,GAA+B,MAApBw5B,EAAOvmB,EAAK,KAAyB,KAATumB,GAA0B,KAATA,GAAkBA,EAAO,KAAQA,EAAOgjC,EAAsB,CAC7HuC,EAAIjhB,IAAI7qC,EAAMxP,EAAG,GACjBA,EAAI,EAAI,EACR,MAGJ,MACF,KAAK,GACHs7D,EAAI9gB,OAAgB,KAATzkB,GAA0B,KAATA,GACf,KAATA,IAAeqlC,GAAc,GACjC/mC,EAAO3V,QACP2V,EAAOikC,SAAS,GAChBiD,EAAU,EACV5hE,KAAK0pD,mBAAqB,EAC1B,MACF,KAAK,EACHgY,EAAIv4D,QACJ,MACF,KAAK,EAEH,IAAK,IAAI,EAAI9C,EAAI,GAAK,IACpB,GAAI,GAAKzD,IAAWw5B,EAAOvmB,EAAK,IAAM,IAASumB,EAAO,KAAQA,EAAOgjC,EAAsB,CACzFsC,EAAIhhB,IAAI7qC,EAAMxP,EAAG,GACjBA,EAAI,EAAI,EACR,MAGJ,MACF,KAAK,EACHq7D,EAAIt4D,IAAa,KAATgzB,GAA0B,KAATA,GACZ,KAATA,IAAeqlC,GAAc,GACjC/mC,EAAO3V,QACP2V,EAAOikC,SAAS,GAChBiD,EAAU,EACV5hE,KAAK0pD,mBAAqB,EAG9BmW,EAA4B,GAAb4B,EAIjBzhE,KAAK8/D,SAAW8B,EAGhB5hE,KAAK6/D,aAAeA,GAExB,EA3YA,CAA0C,EAAA9yD,YAA7B,EAAAk0C,wB,gGChOb,cACA,SAGM4c,EAAgC,GAEtC,0BACU,KAAA55B,OAAS,EACT,KAAA+5B,QAAUH,EACV,KAAAh3B,KAAO,EACP,KAAAi3B,UAA6ChrD,OAAOirD,OAAO,MAC3D,KAAAG,WAAqC,aAiJ/C,OA/IS,YAAAC,gBAAP,SAAuBljC,EAAezkB,QACN3R,IAA1B7E,KAAK89D,UAAU7iC,KACjBj7B,KAAK89D,UAAU7iC,GAAS,IAE1B,IAAMmjC,EAAcp+D,KAAK89D,UAAU7iC,GAEnC,OADAmjC,EAAY9yD,KAAKkL,GACV,CACLtW,QAAS,WACP,IAAMm+D,EAAeD,EAAYn5D,QAAQuR,IACnB,IAAlB6nD,GACFD,EAAY7kD,OAAO8kD,EAAc,MAKlC,YAAAC,aAAP,SAAoBrjC,GACdj7B,KAAK89D,UAAU7iC,WAAej7B,KAAK89D,UAAU7iC,IAE5C,YAAAsjC,mBAAP,SAA0B/nD,GACxBxW,KAAKk+D,WAAa1nD,GAGb,YAAAtW,QAAP,WACEF,KAAK89D,UAAYhrD,OAAOirD,OAAO,MAC/B/9D,KAAKk+D,WAAa,aAClBl+D,KAAKg+D,QAAUH,GAGV,YAAA94C,MAAP,WAEsB,IAAhB/kB,KAAKikC,QACPjkC,KAAKoJ,KAAI,GAEXpJ,KAAKg+D,QAAUH,EACf79D,KAAK6mC,KAAO,EACZ7mC,KAAKikC,OAAS,GAGR,YAAAk+B,OAAR,WAEE,GADAniE,KAAKg+D,QAAUh+D,KAAK89D,UAAU99D,KAAK6mC,MAAQg3B,EACtC79D,KAAKg+D,QAAQp7D,OAGhB,IAAK,IAAI+b,EAAI3e,KAAKg+D,QAAQp7D,OAAS,EAAG+b,GAAK,EAAGA,IAC5C3e,KAAKg+D,QAAQr/C,GAAGxV,aAHlBnJ,KAAKk+D,WAAWl+D,KAAK6mC,IAAK,UAQtB,YAAAu7B,KAAR,SAAavsD,EAAmB1M,EAAeC,GAC7C,GAAKpJ,KAAKg+D,QAAQp7D,OAGhB,IAAK,IAAI+b,EAAI3e,KAAKg+D,QAAQp7D,OAAS,EAAG+b,GAAK,EAAGA,IAC5C3e,KAAKg+D,QAAQr/C,GAAG+hC,IAAI7qC,EAAM1M,EAAOC,QAHnCpJ,KAAKk+D,WAAWl+D,KAAK6mC,IAAK,MAAO,EAAAka,cAAclrC,EAAM1M,EAAOC,KAQxD,YAAAi5D,KAAR,SAAavhB,GAIX,GAAK9gD,KAAKg+D,QAAQp7D,OAEX,CAEL,IADA,IAAI+b,EAAI3e,KAAKg+D,QAAQp7D,OAAS,EACvB+b,GAAK,IACN3e,KAAKg+D,QAAQr/C,GAAGvV,IAAI03C,GADXniC,KAOf,IAFAA,IAEOA,GAAK,EAAGA,IACb3e,KAAKg+D,QAAQr/C,GAAGvV,KAAI,QAXtBpJ,KAAKk+D,WAAWl+D,KAAK6mC,IAAK,MAAOia,IAgB9B,YAAA33C,MAAP,WAEEnJ,KAAK+kB,QACL/kB,KAAKikC,OAAS,GAUT,YAAAyc,IAAP,SAAW7qC,EAAmB1M,EAAeC,GAC3C,GAAoB,IAAhBpJ,KAAKikC,OAAT,CAGA,GAAoB,IAAhBjkC,KAAKikC,OACP,KAAO96B,EAAQC,GAAK,CAClB,IAAMgzB,EAAOvmB,EAAK1M,KAClB,GAAa,KAATizB,EAAe,CACjBp8B,KAAKikC,OAAS,EACdjkC,KAAKmiE,SACL,MAEF,GAAI/lC,EAAO,IAAQ,GAAOA,EAExB,YADAp8B,KAAKikC,OAAS,IAGE,IAAdjkC,KAAK6mC,MACP7mC,KAAK6mC,IAAM,GAEb7mC,KAAK6mC,IAAiB,GAAX7mC,KAAK6mC,IAAWzK,EAAO,GAGlB,IAAhBp8B,KAAKikC,QAA+B76B,EAAMD,EAAQ,GACpDnJ,KAAKoiE,KAAKvsD,EAAM1M,EAAOC,KASpB,YAAAA,IAAP,SAAW03C,GACW,IAAhB9gD,KAAKikC,SAIW,IAAhBjkC,KAAKikC,SAIa,IAAhBjkC,KAAKikC,QACPjkC,KAAKmiE,SAEPniE,KAAKqiE,KAAKvhB,IAEZ9gD,KAAKg+D,QAAUH,EACf79D,KAAK6mC,KAAO,EACZ7mC,KAAKikC,OAAS,IAElB,EAtJA,GAAa,EAAAw8B,YA4Jb,iBAIE,WAAoB7B,GAAA,KAAAA,WAHZ,KAAAre,MAAQ,GACR,KAAAue,WAAqB,EA+B/B,OA3BS,YAAA31D,MAAP,WACEnJ,KAAKugD,MAAQ,GACbvgD,KAAK8+D,WAAY,GAGZ,YAAApe,IAAP,SAAW7qC,EAAmB1M,EAAeC,GACvCpJ,KAAK8+D,YAGT9+D,KAAKugD,OAAS,EAAAQ,cAAclrC,EAAM1M,EAAOC,GACrCpJ,KAAKugD,MAAM39C,OAAS,EAAAg7D,gBACtB59D,KAAKugD,MAAQ,GACbvgD,KAAK8+D,WAAY,KAId,YAAA11D,IAAP,SAAW03C,GACT,IAAIie,GAAM,EAQV,OAPI/+D,KAAK8+D,UACPC,GAAM,EACGje,IACTie,EAAM/+D,KAAK4+D,SAAS5+D,KAAKugD,QAE3BvgD,KAAKugD,MAAQ,GACbvgD,KAAK8+D,WAAY,EACVC,GAEX,EAjCA,GAAa,EAAA5X,c,8ECjKb,IAAMmb,EAAY,WAuBlB,aAyCE,WAAmBlS,EAA+BmS,GAChD,QADiB,IAAAnS,MAAA,SAA+B,IAAAmS,MAAA,IAA/B,KAAAnS,YAA+B,KAAAmS,qBAC5CA,EA/Dc,IAgEhB,MAAM,IAAI5/D,MAAM,mDAElB3C,KAAK06B,OAAS,IAAI8nC,WAAWpS,GAC7BpwD,KAAK4C,OAAS,EACd5C,KAAKyiE,WAAa,IAAID,WAAWD,GACjCviE,KAAK0iE,iBAAmB,EACxB1iE,KAAK2iE,cAAgB,IAAIC,YAAYxS,GACrCpwD,KAAK6iE,eAAgB,EACrB7iE,KAAK8iE,kBAAmB,EACxB9iE,KAAK+iE,aAAc,EAkJvB,OApLgB,EAAAC,UAAd,SAAwBvpC,GACtB,IAAMiB,EAAS,IAAIgkC,EACnB,IAAKjlC,EAAO72B,OACV,OAAO83B,EAGT,IAAK,IAAIr0B,EAAKozB,EAAO,aAAcp1B,MAAS,EAAI,EAAGgC,EAAIozB,EAAO72B,SAAUyD,EAAG,CACzE,IAAMsH,EAAQ8rB,EAAOpzB,GACrB,GAAIsH,aAAiBtJ,MACnB,IAAK,IAAI4+D,EAAI,EAAGA,EAAIt1D,EAAM/K,SAAUqgE,EAClCvoC,EAAOqnC,YAAYp0D,EAAMs1D,SAG3BvoC,EAAOikC,SAAShxD,GAGpB,OAAO+sB,GAwBF,YAAA0gB,MAAP,WACE,IAAM8nB,EAAY,IAAIxE,EAAO1+D,KAAKowD,UAAWpwD,KAAKuiE,oBASlD,OARAW,EAAUxoC,OAAO3c,IAAI/d,KAAK06B,QAC1BwoC,EAAUtgE,OAAS5C,KAAK4C,OACxBsgE,EAAUT,WAAW1kD,IAAI/d,KAAKyiE,YAC9BS,EAAUR,iBAAmB1iE,KAAK0iE,iBAClCQ,EAAUP,cAAc5kD,IAAI/d,KAAK2iE,eACjCO,EAAUL,cAAgB7iE,KAAK6iE,cAC/BK,EAAUJ,iBAAmB9iE,KAAK8iE,iBAClCI,EAAUH,YAAc/iE,KAAK+iE,YACtBG,GASF,YAAAvoC,QAAP,WAEE,IADA,IAAMmmC,EAAmB,GAChBz6D,EAAI,EAAGA,EAAIrG,KAAK4C,SAAUyD,EAAG,CACpCy6D,EAAIx1D,KAAKtL,KAAK06B,OAAOr0B,IACrB,IAAM8C,EAAQnJ,KAAK2iE,cAAct8D,IAAM,EACjC+C,EAA8B,IAAxBpJ,KAAK2iE,cAAct8D,GAC3B+C,EAAMD,EAAQ,GAChB23D,EAAIx1D,KAAKjH,MAAM8+D,UAAUl9D,MAAMw4C,KAAKz+C,KAAKyiE,WAAYt5D,EAAOC,IAGhE,OAAO03D,GAMF,YAAA/7C,MAAP,WACE/kB,KAAK4C,OAAS,EACd5C,KAAK0iE,iBAAmB,EACxB1iE,KAAK6iE,eAAgB,EACrB7iE,KAAK8iE,kBAAmB,EACxB9iE,KAAK+iE,aAAc,GAUd,YAAApE,SAAP,SAAgBhxD,GAEd,GADA3N,KAAK+iE,aAAc,EACf/iE,KAAK4C,QAAU5C,KAAKowD,UACtBpwD,KAAK6iE,eAAgB,MADvB,CAIA,GAAIl1D,GAAS,EACX,MAAM,IAAIhL,MAAM,yCAElB3C,KAAK2iE,cAAc3iE,KAAK4C,QAAU5C,KAAK0iE,kBAAoB,EAAI1iE,KAAK0iE,iBACpE1iE,KAAK06B,OAAO16B,KAAK4C,UAAY+K,EAAQ20D,EAAYA,EAAY30D,IAUxD,YAAAo0D,YAAP,SAAmBp0D,GAEjB,GADA3N,KAAK+iE,aAAc,EACd/iE,KAAK4C,OAGV,GAAI5C,KAAK6iE,eAAiB7iE,KAAK0iE,kBAAoB1iE,KAAKuiE,mBACtDviE,KAAK8iE,kBAAmB,MAD1B,CAIA,GAAIn1D,GAAS,EACX,MAAM,IAAIhL,MAAM,yCAElB3C,KAAKyiE,WAAWziE,KAAK0iE,oBAAsB/0D,EAAQ20D,EAAYA,EAAY30D,EAC3E3N,KAAK2iE,cAAc3iE,KAAK4C,OAAS,OAM5B,YAAA0pD,aAAP,SAAoBtf,GAClB,OAAmC,IAA1BhtC,KAAK2iE,cAAc31B,KAAgBhtC,KAAK2iE,cAAc31B,IAAQ,GAAK,GAQvE,YAAAwf,aAAP,SAAoBxf,GAClB,IAAM7jC,EAAQnJ,KAAK2iE,cAAc31B,IAAQ,EACnC5jC,EAAgC,IAA1BpJ,KAAK2iE,cAAc31B,GAC/B,OAAI5jC,EAAMD,EAAQ,EACTnJ,KAAKyiE,WAAW7hB,SAASz3C,EAAOC,GAElC,MAOF,YAAAg6D,gBAAP,WAEE,IADA,IAAM3/D,EAAsC,GACnC4C,EAAI,EAAGA,EAAIrG,KAAK4C,SAAUyD,EAAG,CACpC,IAAM8C,EAAQnJ,KAAK2iE,cAAct8D,IAAM,EACjC+C,EAA8B,IAAxBpJ,KAAK2iE,cAAct8D,GAC3B+C,EAAMD,EAAQ,IAChB1F,EAAO4C,GAAKrG,KAAKyiE,WAAWx8D,MAAMkD,EAAOC,IAG7C,OAAO3F,GAOF,YAAAu+D,SAAP,SAAgBr0D,GACd,IAAI/K,EACJ,KAAI5C,KAAK6iE,iBACFjgE,EAAS5C,KAAK+iE,YAAc/iE,KAAK0iE,iBAAmB1iE,KAAK4C,SAC1D5C,KAAK+iE,aAAe/iE,KAAK8iE,kBAF/B,CAOA,IAAMO,EAAQrjE,KAAK+iE,YAAc/iE,KAAKyiE,WAAaziE,KAAK06B,OAClD4oC,EAAMD,EAAMzgE,EAAS,GAC3BygE,EAAMzgE,EAAS,IAAM0gE,EAAM7hE,KAAKqQ,IAAU,GAANwxD,EAAW31D,EAAO20D,GAAa30D,IAEvE,EAtMA,GAAa,EAAA+wD,U,i4BCzBb,cACA,UAEA,UACA,SAEa,EAAA1hB,aAAe,EACf,EAAAC,aAAe,EAE5B,kBAcE,WAC2Bv8B,GAD3B,MAGE,cAAO,K,OAFkB,EAAAA,kBARpB,EAAAg9B,iBAA2B,EAE1B,EAAAz0C,UAAY,IAAI,EAAAgO,aAStB,EAAKxW,KAAOgB,KAAKC,IAAIgf,EAAgBjK,QAAQhW,KAAM,EAAAu8C,cACnD,EAAKx8C,KAAOiB,KAAKC,IAAIgf,EAAgBjK,QAAQjW,KAAM,EAAAy8C,cACnD,EAAK92B,QAAU,IAAI,EAAA0wC,UAAUn2C,EAAiB,G,EAoBlD,OAxCmC,OAUjC,sBAAW,uBAAQ,C,IAAnB,WAAgE,OAAO1gB,KAAKiJ,UAAUoO,O,gCAEtF,sBAAW,qBAAM,C,IAAjB,WAA+B,OAAOrX,KAAKmmB,QAAQtiB,Q,gCAW5C,YAAA3D,QAAP,WACE,YAAMA,QAAO,WACbF,KAAKmmB,QAAQjmB,WAGR,YAAAU,OAAP,SAAcH,EAAcD,GAC1BR,KAAKS,KAAOA,EACZT,KAAKQ,KAAOA,EACZR,KAAKmmB,QAAQvlB,OAAOH,EAAMD,GAC1BR,KAAKmmB,QAAQU,cAAc7mB,KAAKS,MAChCT,KAAKiJ,UAAUmS,KAAK,CAAE3a,KAAI,EAAED,KAAI,KAG3B,YAAAukB,MAAP,WACE/kB,KAAKmmB,QAAQpB,QACb/kB,KAAK09C,iBAAkB,GAtCD,GAerB,MAAAx7B,kBAfQ45B,GAAb,CAAmC,EAAA/uC,YAAtB,EAAA+uC,iB,sFCNb,8BAIS,KAAAynB,OAAiB,EAEhB,KAAAC,UAAsC,GAmBhD,OAjBS,YAAAz+C,MAAP,WACE/kB,KAAKyoD,aAAU5jD,EACf7E,KAAKwjE,UAAY,GACjBxjE,KAAKujE,OAAS,GAGT,YAAA5b,UAAP,SAAiBj4C,GACf1P,KAAKujE,OAAS7zD,EACd1P,KAAKyoD,QAAUzoD,KAAKwjE,UAAU9zD,IAGzB,YAAA47C,YAAP,SAAmB57C,EAAW+4C,GAC5BzoD,KAAKwjE,UAAU9zD,GAAK+4C,EAChBzoD,KAAKujE,SAAW7zD,IAClB1P,KAAKyoD,QAAUA,IAGrB,EAzBA,GAAa,EAAAjM,kB,qgBCJb,cACA,UAMMinB,EAAyD,CAM7DC,KAAM,CACJj2C,OAAQ,EACRk2C,SAAU,WAAM,WAOlBC,IAAK,CACHn2C,OAAQ,EACRk2C,SAAU,SAACv7D,GAET,OAAiB,IAAbA,EAAEkgB,QAAiD,IAAblgB,EAAEkkB,SAI5ClkB,EAAEwkB,MAAO,EACTxkB,EAAE0kB,KAAM,EACR1kB,EAAE8C,OAAQ,GACH,KAQX24D,MAAO,CACLp2C,OAAQ,GACRk2C,SAAU,SAACv7D,GAET,OAAiB,KAAbA,EAAEkkB,SAWVw3C,KAAM,CACJr2C,OAAQ,GACRk2C,SAAU,SAACv7D,GAET,OAAiB,KAAbA,EAAEkkB,QAAgD,IAAblkB,EAAEkgB,SAW/Cy7C,IAAK,CACHt2C,OACE,GAEFk2C,SAAU,SAACv7D,GAAuB,YAWtC,SAAS47D,EAAU57D,EAAoB67D,GACrC,IAAI7nC,GAAQh0B,EAAEwkB,KAAO,GAAiB,IAAMxkB,EAAE8C,MAAQ,EAAkB,IAAM9C,EAAE0kB,IAAM,EAAgB,GAoBtG,OAnBiB,IAAb1kB,EAAEkgB,QACJ8T,GAAQ,GACRA,GAAQh0B,EAAEkkB,SAEV8P,GAAmB,EAAXh0B,EAAEkgB,OACK,EAAXlgB,EAAEkgB,SACJ8T,GAAQ,IAEK,EAAXh0B,EAAEkgB,SACJ8T,GAAQ,KAEO,KAAbh0B,EAAEkkB,OACJ8P,GAAQ,GACc,IAAbh0B,EAAEkkB,QAAkC23C,IAG7C7nC,GAAQ,IAGLA,EAGT,IAAM8nC,EAAItzC,OAAOC,aAKXszC,EAAwD,CAM5DC,QAAS,SAACh8D,GACR,IAAMsyB,EAAS,CAACspC,EAAU57D,GAAG,GAAS,GAAIA,EAAEjE,IAAM,GAAIiE,EAAElE,IAAM,IAK9D,OAAIw2B,EAAO,GAAK,KAAOA,EAAO,GAAK,KAAOA,EAAO,GAAK,IAC7C,GAEF,MAASwpC,EAAExpC,EAAO,IAAMwpC,EAAExpC,EAAO,IAAMwpC,EAAExpC,EAAO,KAOzD2pC,IAAK,SAACj8D,GACJ,IAAM81C,EAAsB,IAAb91C,EAAEkkB,QAA8C,IAAblkB,EAAEkgB,OAAoC,IAAM,IAC9F,MAAO,MAAS07C,EAAU57D,GAAG,GAAK,IAAIA,EAAEjE,IAAG,IAAIiE,EAAElE,IAAMg6C,IAoB3D,aAQE,WACmCvnC,EACFqQ,GADE,KAAArQ,iBACF,KAAAqQ,eATzB,KAAAs9C,WAAmD,GACnD,KAAAC,WAAkD,GAClD,KAAAC,gBAA0B,GAC1B,KAAAC,gBAA0B,GAC1B,KAAAC,kBAAoB,IAAI,EAAAztD,aACxB,KAAA0tD,WAAqC,KAO3C,IAAmB,UAAA7xD,OAAOmiD,KAAKwO,GAAZ,eAAgC,CAA9C,IAAM,EAAI,KAAoCzjE,KAAK4kE,YAAY,EAAMnB,EAAkB,IAC5F,IAAmB,UAAA3wD,OAAOmiD,KAAKkP,GAAZ,eAAgC,CAA9C,IAAM,EAAI,KAAoCnkE,KAAK6kE,YAAY,EAAMV,EAAkB,IAE5FnkE,KAAK+kB,QAiIT,OA9HS,YAAA6/C,YAAP,SAAmBE,EAAcC,GAC/B/kE,KAAKskE,WAAWQ,GAAQC,GAGnB,YAAAF,YAAP,SAAmBC,EAAcE,GAC/BhlE,KAAKukE,WAAWO,GAAQE,GAG1B,sBAAW,6BAAc,C,IAAzB,WACE,OAAOhlE,KAAKwkE,iB,IAOd,SAA0BM,GACxB,IAAK9kE,KAAKskE,WAAWQ,GACnB,MAAM,IAAIniE,MAAM,qBAAqBmiE,EAAI,KAE3C9kE,KAAKwkE,gBAAkBM,EACvB9kE,KAAK0kE,kBAAkBtpD,KAAKpb,KAAKskE,WAAWQ,GAAMr3C,S,gCATpD,sBAAW,mCAAoB,C,IAA/B,WACE,OAAwD,IAAjDztB,KAAKskE,WAAWtkE,KAAKwkE,iBAAiB/2C,Q,gCAW/C,sBAAW,6BAAc,C,IAAzB,WACE,OAAOztB,KAAKykE,iB,IAGd,SAA0BK,GACxB,IAAK9kE,KAAKukE,WAAWO,GACnB,MAAM,IAAIniE,MAAM,qBAAqBmiE,EAAI,KAE3C9kE,KAAKykE,gBAAkBK,G,gCAGlB,YAAA//C,MAAP,WACE/kB,KAAK6tB,eAAiB,OACtB7tB,KAAKyrD,eAAiB,UACtBzrD,KAAK2kE,WAAa,MAMpB,sBAAW,+BAAgB,C,IAA3B,WACE,OAAO3kE,KAAK0kE,kBAAkBrtD,O,gCAazB,YAAAsV,kBAAP,SAAyBvkB,GAEvB,GAAIA,EAAEjE,IAAM,GAAKiE,EAAEjE,KAAOnE,KAAK2W,eAAelW,MACvC2H,EAAElE,IAAM,GAAKkE,EAAElE,KAAOlE,KAAK2W,eAAenW,KAC/C,OAAO,EAIT,GAAiB,IAAb4H,EAAEkgB,QAAiD,KAAblgB,EAAEkkB,OAC1C,OAAO,EAET,GAAiB,IAAblkB,EAAEkgB,QAAgD,KAAblgB,EAAEkkB,OACzC,OAAO,EAET,GAAiB,IAAblkB,EAAEkgB,SAAkD,IAAblgB,EAAEkkB,QAAgD,IAAblkB,EAAEkkB,QAChF,OAAO,EAQT,GAJAlkB,EAAEjE,MACFiE,EAAElE,MAGe,KAAbkE,EAAEkkB,QAAmCtsB,KAAK2kE,YAAc3kE,KAAKilE,eAAejlE,KAAK2kE,WAAYv8D,GAC/F,OAAO,EAIT,IAAKpI,KAAKskE,WAAWtkE,KAAKwkE,iBAAiBb,SAASv7D,GAClD,OAAO,EAIT,IAAM88D,EAASllE,KAAKukE,WAAWvkE,KAAKykE,iBAAiBr8D,GAYrD,OAXI88D,IAE2B,YAAzBllE,KAAKykE,gBACPzkE,KAAKgnB,aAAam+C,mBAAmBD,GAErCllE,KAAKgnB,aAAatZ,iBAAiBw3D,GAAQ,IAI/CllE,KAAK2kE,WAAav8D,GAEX,GAGF,YAAAulB,cAAP,SAAqBF,GACnB,MAAO,CACL23C,QAAkB,EAAT33C,GACT43C,MAAgB,EAAT53C,GACP63C,QAAkB,EAAT73C,GACT83C,QAAkB,EAAT93C,GACTN,SAAmB,GAATM,KAIN,YAAAw3C,eAAR,SAAuBO,EAAqBC,GAC1C,OAAID,EAAGrhE,MAAQshE,EAAGthE,KACdqhE,EAAGthE,MAAQuhE,EAAGvhE,KACdshE,EAAGl9C,SAAWm9C,EAAGn9C,QACjBk9C,EAAGl5C,SAAWm5C,EAAGn5C,QACjBk5C,EAAG54C,OAAS64C,EAAG74C,MACf44C,EAAG14C,MAAQ24C,EAAG34C,KACd04C,EAAGt6D,QAAUu6D,EAAGv6D,OA9IK,GASxB,MAAAqQ,gBACA,MAAAga,eAVQ0mB,GAAb,GAAa,EAAAA,oB,k2BC9Jb,cACA,UAEA,UACA,SAEMypB,EAAwB5yD,OAAOC,OAAO,CAC1C61C,YAAY,IAGR+c,EAA8C7yD,OAAOC,OAAO,CAChEmb,uBAAuB,EACvBs9B,mBAAmB,EACnBn+C,oBAAoB,EACpB88C,QAAQ,EACRL,mBAAmB,EACnB7iC,WAAW,EACX0hC,YAAY,IAGd,cAkBE,WAEE94B,EACiClZ,EACHC,EACI8J,GALpC,MAOE,cAAO,K,OAJ0B,EAAA/J,iBACH,EAAAC,cACI,EAAA8J,kBApB7B,EAAA+N,qBAA+B,EAC/B,EAAAwW,gBAA0B,EAOzB,EAAAyW,QAAU,EAAK1yC,SAAS,IAAI,EAAAiO,cAE5B,EAAA2uD,aAAe,EAAK58D,SAAS,IAAI,EAAAiO,cAEjC,EAAAwkC,UAAY,EAAKzyC,SAAS,IAAI,EAAAiO,cAWpC,EAAK4uD,gBAAkBh2C,EACvB,EAAK7mB,SAAS,CAAE9I,QAAS,WAAM,SAAK2lE,qBAAkBhhE,KACtD,EAAKgkD,MAAQ,EAAAzN,MAAMsqB,GACnB,EAAKj4D,gBAAkB,EAAA2tC,MAAMuqB,G,EAqCjC,OAlEiC,OAY/B,sBAAW,qBAAM,C,IAAjB,WAAsC,OAAO3lE,KAAK07C,QAAQrkC,O,gCAE1D,sBAAW,0BAAW,C,IAAtB,WAAyC,OAAOrX,KAAK4lE,aAAavuD,O,gCAElE,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAOrX,KAAKy7C,UAAUpkC,O,gCAgBvD,YAAA0N,MAAP,WACE/kB,KAAK6oD,MAAQ,EAAAzN,MAAMsqB,GACnB1lE,KAAKyN,gBAAkB,EAAA2tC,MAAMuqB,IAGxB,YAAAj4D,iBAAP,SAAwBmI,EAAciwD,GAEpC,QAFoC,IAAAA,OAAA,IAEhC9lE,KAAK0gB,gBAAgBjK,QAAQsvD,aAAjC,CAKA,IAAMniE,EAAS5D,KAAK2W,eAAe/S,OAC/BA,EAAOwrB,QAAUxrB,EAAO6I,OAC1BzM,KAAK6lE,kBAIHC,GACF9lE,KAAK4lE,aAAaxqD,OAIpBpb,KAAK4W,YAAY8B,MAAM,iBAAiB7C,EAAI,KAAK,WAAM,OAAAA,EAAKE,MAAM,IAAIC,KAAI,SAAA5N,GAAK,OAAAA,EAAE2xC,WAAW,SAC5F/5C,KAAK07C,QAAQtgC,KAAKvF,KAGb,YAAAsvD,mBAAP,SAA0BtvD,GACpB7V,KAAK0gB,gBAAgBjK,QAAQsvD,eAGjC/lE,KAAK4W,YAAY8B,MAAM,mBAAmB7C,EAAI,KAAK,WAAM,OAAAA,EAAKE,MAAM,IAAIC,KAAI,SAAA5N,GAAK,OAAAA,EAAE2xC,WAAW,SAC9F/5C,KAAKy7C,UAAUrgC,KAAKvF,KAhEA,GAqBnB,MAAA0F,gBACA,MAAAC,aACA,MAAA0G,kBAvBQ85B,GAAb,CAAiC,EAAAjvC,YAApB,EAAAivC,e,ogBCpBb,cAEA,aASE,WACmCrlC,GAAA,KAAAA,iBAEjC3W,KAAKsoD,aAiCT,OAvCE,sBAAW,oBAAK,C,IAAhB,WAA6B,OAAOtoD,KAAKmiE,Q,gCACzC,sBAAW,kBAAG,C,IAAd,WAA2B,OAAOniE,KAAKqiE,M,gCAQhC,YAAA/Z,WAAP,WACEtoD,KAAKmiE,OAASniE,KAAK2W,eAAe/S,OAAOD,EACzC3D,KAAKqiE,KAAOriE,KAAK2W,eAAe/S,OAAOD,GAGlC,YAAAqlD,UAAP,SAAiBrlD,GACXA,EAAI3D,KAAKmiE,OACXniE,KAAKmiE,OAASx+D,EACLA,EAAI3D,KAAKqiE,OAClBriE,KAAKqiE,KAAO1+D,IAIT,YAAAi6C,eAAP,SAAsBjjC,EAAYE,GAChC,GAAIF,EAAKE,EAAI,CACX,IAAMqmB,EAAOvmB,EACbA,EAAKE,EACLA,EAAKqmB,EAEHvmB,EAAK3a,KAAKmiE,SACZniE,KAAKmiE,OAASxnD,GAEZE,EAAK7a,KAAKqiE,OACZriE,KAAKqiE,KAAOxnD,IAIT,YAAA6yC,aAAP,WACE1tD,KAAK49C,eAAe,EAAG59C,KAAK2W,eAAenW,KAAO,IA3C1B,GAUvB,MAAA+a,iBAVQ6gC,GAAb,GAAa,EAAAA,mB,+UCIb,cACA,UAEA,aAIE,a,IAAY,sDAFJ,KAAA4pB,SAAW,IAAIvoD,IAGrB,IAA4B,UAAAwoD,EAAA,eAAS,CAA1B,WAACptD,EAAE,KAAEqtD,EAAO,KACrBlmE,KAAK+d,IAAIlF,EAAIqtD,IAqBnB,OAjBS,YAAAnoD,IAAP,SAAclF,EAA2B8e,GACvC,IAAMl0B,EAASzD,KAAKgmE,SAAS7rD,IAAItB,GAEjC,OADA7Y,KAAKgmE,SAASjoD,IAAIlF,EAAI8e,GACfl0B,GAGF,YAAA6Z,QAAP,SAAe6b,GACbn5B,KAAKgmE,SAAS1oD,SAAQ,SAAC3P,EAAO7D,GAAQ,OAAAqvB,EAASrvB,EAAK6D,OAG/C,YAAA6Q,IAAP,SAAW3F,GACT,OAAO7Y,KAAKgmE,SAASxnD,IAAI3F,IAGpB,YAAAsB,IAAP,SAActB,GACZ,OAAO7Y,KAAKgmE,SAAS7rD,IAAItB,IAE7B,EA3BA,GAAa,EAAAstD,oBA6Bb,iBAGE,aAFiB,KAAAC,UAA+B,IAAID,EAGlDnmE,KAAKomE,UAAUroD,IAAI,EAAAsoD,sBAAuBrmE,MAiC9C,OA9BS,YAAA8pB,WAAP,SAAqBjR,EAA2B8e,GAC9C33B,KAAKomE,UAAUroD,IAAIlF,EAAI8e,IAGlB,YAAA2uC,WAAP,SAAqBztD,GACnB,OAAO7Y,KAAKomE,UAAUjsD,IAAItB,IAGrB,YAAA2L,eAAP,SAAyB+hD,G,IAAW,wDAIlC,IAHA,IAAMC,EAAsB,EAAAC,uBAAuBF,GAAMG,MAAK,SAAC92D,EAAGD,GAAM,OAAAC,EAAE6O,MAAQ9O,EAAE8O,SAE9EkoD,EAAqB,GACF,MAAAH,EAAA,eAAqB,CAAzC,IAAMI,EAAU,KACbV,EAAUlmE,KAAKomE,UAAUjsD,IAAIysD,EAAW/tD,IAC9C,IAAKqtD,EACH,MAAM,IAAIvjE,MAAM,oBAAoB4jE,EAAKzB,KAAI,+BAA+B8B,EAAW/tD,GAAE,KAE3F8tD,EAAYr7D,KAAK46D,GAGnB,IAAMW,EAAqBL,EAAoB5jE,OAAS,EAAI4jE,EAAoB,GAAG/nD,MAAQqoD,EAAKlkE,OAGhG,GAAIkkE,EAAKlkE,SAAWikE,EAClB,MAAM,IAAIlkE,MAAM,gDAAgD4jE,EAAKzB,KAAI,iBAAgB+B,EAAqB,GAAC,mBAAmBC,EAAKlkE,OAAM,qBAI/I,OAAO,IAAI2jE,EAAI,WAAJA,EAAI,aAAQO,EAASH,OAEpC,EArCA,GAAa,EAAA/qB,wB,6tBCtCb,IAiBYmrB,EAjBZ,WAiBA,SAAYA,GACV,qBACA,mBACA,mBACA,qBACA,iBALF,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAQpB,IAAMC,EAAoD,CACxDtuD,MAAOquD,EAASE,MAChBC,KAAMH,EAASI,KACfxxD,KAAMoxD,EAASK,KACflf,MAAO6e,EAASM,MAChBC,IAAKP,EAASQ,KAKhB,aAKE,WACoC7mD,GADpC,WACoC,KAAAA,kBAElC1gB,KAAKwnE,kBACLxnE,KAAK0gB,gBAAgB2J,gBAAe,SAAAvgB,GACtB,aAARA,GACF,EAAK09D,qBA6Cb,OAxCU,YAAAA,gBAAR,WACExnE,KAAKynE,UAAYT,EAAqBhnE,KAAK0gB,gBAAgBjK,QAAQiX,WAG7D,YAAAg6C,wBAAR,SAAgCC,GAC9B,IAAK,IAAIthE,EAAI,EAAGA,EAAIshE,EAAe/kE,OAAQyD,IACR,mBAAtBshE,EAAethE,KACxBshE,EAAethE,GAAKshE,EAAethE,OAKjC,YAAAuhE,KAAR,SAAarxD,EAAesxD,EAAiBF,GAC3C3nE,KAAK0nE,wBAAwBC,GAC7BpxD,EAAKkoC,KAAI,MAATloC,EAAI,GAAMb,QAhCK,aAgCiBmyD,GAAYF,KAGvC,YAAAjvD,MAAP,SAAamvD,G,IAAiB,wDACxB7nE,KAAKynE,WAAaV,EAASE,OAC7BjnE,KAAK4nE,KAAKlyD,QAAQoyD,IAAKD,EAASF,IAI7B,YAAAT,KAAP,SAAYW,G,IAAiB,wDACvB7nE,KAAKynE,WAAaV,EAASI,MAC7BnnE,KAAK4nE,KAAKlyD,QAAQwxD,KAAMW,EAASF,IAI9B,YAAAhyD,KAAP,SAAYkyD,G,IAAiB,wDACvB7nE,KAAKynE,WAAaV,EAASK,MAC7BpnE,KAAK4nE,KAAKlyD,QAAQC,KAAMkyD,EAASF,IAI9B,YAAAzf,MAAP,SAAa2f,G,IAAiB,wDACxB7nE,KAAKynE,WAAaV,EAASM,OAC7BrnE,KAAK4nE,KAAKlyD,QAAQwyC,MAAO2f,EAASF,IArDjB,GAMlB,MAAAzlD,kBANQ65B,GAAb,GAAa,EAAAA,c,+HClCb,cACA,UACA,UAMa,EAAAgsB,mBAAqB,ioBAGrB,EAAAC,gBAAoCl1D,OAAOC,OAAO,CAC7DtS,KAAM,GACND,KAAM,GACNmkC,aAAa,EACbU,YAAa,QACbG,YAAa,EACb8T,UAAY,EAAAyuB,mBACZ71C,UAAW,OACXoN,4BAA4B,EAC5BjL,mBAAoB,MACpBC,sBAAuB,EACvBc,WAAY,kCACZC,SAAU,GACVoL,WAAY,SACZD,eAAgB,OAChB3Y,WAAY,EACZhG,yBAA0B,IAC1B8lB,cAAe,EACfja,SAAU,OACV6iC,WAAY,IACZh8B,kBAAmB,EACnB5N,kBAAkB,EAClBoJ,iBAAiB,EACjBimB,+BAA+B,EAC/BtV,qBAAsB,EACtBqlC,cAAc,EACd3tC,kBAAkB,EAClBllB,mBAAmB,EACnBwgD,aAAc,EACdr/C,MAAO,GACPmU,sBAAuB,EAAAvc,MACvB+f,aAAc,SACd25B,cAAe,GACf5H,aAAa,EACbxF,cAAe,eACf0vB,qBAAqB,EACrBpe,YAAY,EACZwB,SAAU,QACVr5B,cAAc,IAGhB,IAAMk2C,EAAqD,CAAC,SAAU,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAKhIC,EAA2B,CAAC,OAAQ,QAE1C,aAQE,WAAY1xD,GAHJ,KAAA2xD,gBAAkB,IAAI,EAAAnxD,aAI5BjX,KAAKyW,QAAU,EAAA2kC,MAAM,EAAA4sB,iBACrB,IAAgB,UAAAl1D,OAAOmiD,KAAKx+C,GAAZ,eAAsB,CAAjC,IAAMwsD,EAAC,KACV,GAAIA,KAAKjjE,KAAKyW,QACZ,IACE,IAAM4xD,EAAW5xD,EAAQwsD,GACzBjjE,KAAKyW,QAAQwsD,GAAKjjE,KAAKsoE,2BAA2BrF,EAAGoF,GACrD,MAAOjgE,GACPsN,QAAQwyC,MAAM9/C,KAgFxB,OA1FE,sBAAW,6BAAc,C,IAAzB,WAA8C,OAAOpI,KAAKooE,gBAAgB/wD,O,gCAgBnE,YAAAkiB,UAAP,SAAiBzvB,EAAa6D,GAC5B,KAAM7D,KAAO,EAAAk+D,iBACX,MAAM,IAAIrlE,MAAM,uBAAyBmH,EAAM,KAEjD,GAAIq+D,EAAyB/Z,SAAStkD,GACpC,MAAM,IAAInH,MAAM,WAAWmH,EAAG,wCAE5B9J,KAAKyW,QAAQ3M,KAAS6D,IAI1BA,EAAQ3N,KAAKsoE,2BAA2Bx+D,EAAK6D,GAGzC3N,KAAKyW,QAAQ3M,KAAS6D,IAI1B3N,KAAKyW,QAAQ3M,GAAO6D,EACpB3N,KAAKooE,gBAAgBhtD,KAAKtR,MAGpB,YAAAw+D,2BAAR,SAAmCx+D,EAAa6D,GAC9C,OAAQ7D,GACN,IAAK,YACL,IAAK,cACL,IAAK,eACL,IAAK,gBACE6D,IACHA,EAAQ,EAAAq6D,gBAAgBl+D,IAE1B,MACF,IAAK,aACL,IAAK,iBACH,GAAqB,iBAAV6D,GAAsB,GAAKA,GAASA,GAAS,IAEtD,MAEFA,EAAQu6D,EAAoB9Z,SAASzgD,GAASA,EAAQ,EAAAq6D,gBAAgBl+D,GACtE,MACF,IAAK,cACH6D,EAAQlM,KAAKO,MAAM2L,GAErB,IAAK,aACL,IAAK,eACH,GAAIA,EAAQ,EACV,MAAM,IAAIhL,MAASmH,EAAG,kCAAkC6D,GAE1D,MACF,IAAK,uBACHA,EAAQlM,KAAKC,IAAI,EAAGD,KAAKqQ,IAAI,GAAIrQ,KAAKgP,MAAc,GAAR9C,GAAc,KAC1D,MACF,IAAK,aAEH,IADAA,EAAQlM,KAAKqQ,IAAInE,EAAO,aACZ,EACV,MAAM,IAAIhL,MAASmH,EAAG,kCAAkC6D,GAE1D,MACF,IAAK,wBACL,IAAK,oBACH,GAAIA,GAAS,EACX,MAAM,IAAIhL,MAASmH,EAAG,8CAA8C6D,GAI1E,OAAOA,GAGF,YAAA2rB,UAAP,SAAiBxvB,GACf,KAAMA,KAAO,EAAAk+D,iBACX,MAAM,IAAIrlE,MAAM,uBAAuBmH,EAAG,KAE5C,OAAO9J,KAAKyW,QAAQ3M,IAExB,EAhGA,GAAa,EAAA+xC,kB,aCxBb,SAAS0sB,EAAuB1vD,EAAcpO,EAAkBgU,GACzDhU,EAAwB,YAAMA,EAChCA,EAA8B,gBAAEa,KAAK,CAAEuN,GAAE,EAAE4F,MAAK,KAEhDhU,EAA8B,gBAAI,CAAC,CAAEoO,GAAE,EAAE4F,MAAK,IAC9ChU,EAAwB,UAAIA,G,qHA9BpB,EAAA+9D,gBAAwD,IAAI/qD,IAEzE,kCAAuC8oD,GACrC,OAAOA,EAAoB,iBAAK,IAGlC,2BAAmC1tD,GACjC,GAAI,EAAA2vD,gBAAgBhqD,IAAI3F,GACtB,OAAO,EAAA2vD,gBAAgBruD,IAAItB,GAG7B,IAAM4vD,EAAiB,SAAUh+D,EAAkBX,EAAa2U,GAC9D,GAAyB,IAArBiqD,UAAU9lE,OACZ,MAAM,IAAID,MAAM,oEAGlB4lE,EAAuBE,EAAWh+D,EAAQgU,IAM5C,OAHAgqD,EAAUn8D,SAAW,WAAM,OAAAuM,GAE3B,EAAA2vD,gBAAgBzqD,IAAIlF,EAAI4vD,GACjBA,I,0OC9BT,cAEa,EAAAltD,eAAiB,EAAAo9B,gBAAgC,iBAgBjD,EAAAuD,kBAAoB,EAAAvD,gBAAmC,oBAgCvD,EAAApjB,aAAe,EAAAojB,gBAA8B,eAqC7C,EAAA8D,gBAAkB,EAAA9D,gBAAiC,kBAuBnD,EAAA0D,iBAAmB,EAAA1D,gBAAkC,mBAkCrD,EAAA0tB,sBAAwB,EAAA1tB,gBAAuC,wBAO/D,EAAAn9B,YAAc,EAAAm9B,gBAA6B,cAU3C,EAAAz2B,gBAAkB,EAAAy2B,gBAAiC,kBAsHnD,EAAAl9B,gBAAkB,EAAAk9B,gBAAiC,mB,wFC1RhE,cACA,SAGA,aASE,aANQ,KAAAgwB,WAAuD71D,OAAOirD,OAAO,MACrE,KAAAC,QAAkB,GAElB,KAAA4K,UAAY,IAAI,EAAA3xD,aAItB,IAAM4xD,EAAkB,IAAI,EAAAzL,UAC5Bp9D,KAAKgJ,SAAS6/D,GACd7oE,KAAKg+D,QAAU6K,EAAgBttC,QAC/Bv7B,KAAK8oE,gBAAkBD,EA2D3B,OAjEE,sBAAW,uBAAQ,C,IAAnB,WAAwC,OAAO7oE,KAAK4oE,UAAUvxD,O,gCAS9D,sBAAW,uBAAQ,C,IAAnB,WACE,OAAOvE,OAAOmiD,KAAKj1D,KAAK2oE,a,gCAG1B,sBAAW,4BAAa,C,IAAxB,WACE,OAAO3oE,KAAKg+D,S,IAGd,SAAyBziC,GACvB,IAAKv7B,KAAK2oE,WAAWptC,GACnB,MAAM,IAAI54B,MAAM,4BAA4B44B,EAAO,KAErDv7B,KAAKg+D,QAAUziC,EACfv7B,KAAK8oE,gBAAkB9oE,KAAK2oE,WAAWptC,GACvCv7B,KAAK4oE,UAAUxtD,KAAKmgB,I,gCAGf,YAAAvyB,SAAP,SAAgBmyB,GACdn7B,KAAK2oE,WAAWxtC,EAASI,SAAWJ,GAM/B,YAAAguB,QAAP,SAAe6T,GACb,OAAOh9D,KAAK8oE,gBAAgB3f,QAAQ6T,IAG/B,YAAAviD,mBAAP,SAA0BrL,GAGxB,IAFA,IAAI3L,EAAS,EACPb,EAASwM,EAAExM,OACRyD,EAAI,EAAGA,EAAIzD,IAAUyD,EAAG,CAC/B,IAAI+1B,EAAOhtB,EAAE2qC,WAAW1zC,GAExB,GAAI,OAAU+1B,GAAQA,GAAQ,MAAQ,CACpC,KAAM/1B,GAAKzD,EAMT,OAAOa,EAASzD,KAAKmpD,QAAQ/sB,GAE/B,IAAMgxB,EAASh+C,EAAE2qC,WAAW1zC,GAGxB,OAAU+mD,GAAUA,GAAU,MAChChxB,EAAyB,MAAjBA,EAAO,OAAkBgxB,EAAS,MAAS,MAEnD3pD,GAAUzD,KAAKmpD,QAAQiE,GAG3B3pD,GAAUzD,KAAKmpD,QAAQ/sB,GAEzB,OAAO34B,GAEX,EAxEA,GAAa,EAAA64C,mBCRTp6C,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUxC,QAG3C,IAAID,EAASuC,EAAyBE,GAAY,CAGjDxC,QAAS,IAOV,OAHAyC,EAAoBD,GAAUq8C,KAAK9+C,EAAOC,QAASD,EAAQA,EAAOC,QAASuC,GAGpExC,EAAOC,QCjBRuC,CAAoB,O;;;;;;;;;;;;;;;;;;;;ACH6D;AACxF,YAA6F;;AAE7F;;AAEA;AACA;;AAEA,aAAa,6FAAG,CAAC,iFAAO;;;;AAIxB,iEAAe,wFAAc,MAAM,E","file":"vendors-node_modules_theia_terminal_lib_browser_terminal-widget-impl_js.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2019 Red Hat, Inc. and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-search-terminal-widget-parent {\\n    background: var(--theia-sideBar-background);\\n    position: absolute;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    top: 1px;\\n    right: 19px;\\n\\n    z-index: 10;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box {\\n    display: flex;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    align-items: center;\\n    color: var(--theia-input-foreground);\\n    background: var(--theia-input-background);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\\n    margin-left: 5px;\\n    padding: 0px;\\n    width: 100px;\\n    height: 18px;\\n    color: inherit;\\n    background-color: inherit;\\n    border: var(--theia-border-width) solid transparent;\\n    outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem {\\n    border: var(--theia-border-width) solid transparent;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    height: 18px;\\n    width: 18px;\\n    margin: 1px;\\n    opacity: 0.7;\\n    outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem:hover {\\n    opacity: 1;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\\n    border: var(--theia-border-width) solid var(--theia-focusBorder);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .search-elem.option-enabled {\\n    border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\\n    background-color: var(--theia-inputOption-activeBackground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .whole-word {\\n    background-image: var(--theia-icon-whole-word);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .match-case {\\n    background-image: var(--theia-icon-case-sensitive);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .use-regexp {\\n    background-image: var(--theia-icon-regex);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\\n    margin: 2px;\\n    display: flex;\\n    align-items: center;\\n    font: var(--theia-content-font-size);\\n    color: var(--theia-input-foreground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\\n    background-color: transparent;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button:focus {\\n    border: var(--theia-border-width) var(--theia-focusBorder) solid;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.close {\\n    background-image: var(--theia-icon-close);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.arrow-up {\\n    background-image: var(--theia-icon-arrow-up);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget .search-elem.arrow-down {\\n    background-image: var(--theia-icon-arrow-down);\\n}\\n\", \"\"]);\n\n// exports\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Event } from '@theia/core';\nimport { BaseWidget } from '@theia/core/lib/browser';\nimport { CommandLineOptions } from '@theia/process/lib/common/shell-command-builder';\nimport { TerminalSearchWidget } from '../search/terminal-search-widget';\nimport { TerminalProcessInfo } from '../../common/base-terminal-protocol';\nimport URI from '@theia/core/lib/common/uri';\n\nexport interface TerminalDimensions {\n    cols: number;\n    rows: number;\n}\n\n/**\n * Terminal UI widget.\n */\nexport abstract class TerminalWidget extends BaseWidget {\n\n    abstract processId: Promise<number>;\n\n    /**\n     * Get the current executable and arguments.\n     */\n    abstract processInfo: Promise<TerminalProcessInfo>;\n\n    /** Terminal kind that indicates whether a terminal is created by a user or by some extension for a user */\n    abstract readonly kind: 'user' | string;\n\n    abstract readonly terminalId: number;\n\n    abstract readonly dimensions: TerminalDimensions;\n\n    /**\n     * Start terminal and return terminal id.\n     * @param id - terminal id.\n     */\n    abstract start(id?: number): Promise<number>;\n\n    /**\n     * Send text to the terminal server.\n     * @param text - text content.\n     */\n    abstract sendText(text: string): void;\n\n    /**\n     * Resolves when the command is successfully sent, this doesn't mean that it\n     * was evaluated. Might reject if terminal wasn't properly started yet.\n     *\n     * Note that this method will try to escape your arguments as if it was\n     * someone inputting everything in a shell.\n     *\n     * Supported shells: `bash`, `cmd.exe`, `wsl.exe`, `pwsh/powershell.exe`\n     */\n    abstract executeCommand(commandOptions: CommandLineOptions): Promise<void>;\n\n    /** Event that fires when the terminal is connected or reconnected */\n    abstract onDidOpen: Event<void>;\n\n    /** Event that fires when the terminal fails to connect or reconnect */\n    abstract onDidOpenFailure: Event<void>;\n\n    /** Event that fires when the terminal size changed */\n    abstract onSizeChanged: Event<{ cols: number; rows: number; }>;\n\n    /** Event that fires when the terminal input data */\n    abstract onData: Event<string>;\n\n    abstract scrollLineUp(): void;\n\n    abstract scrollLineDown(): void;\n\n    abstract scrollToTop(): void;\n\n    abstract scrollToBottom(): void;\n\n    abstract scrollPageUp(): void;\n\n    abstract scrollPageDown(): void;\n\n    abstract resetTerminal(): void;\n    /**\n     * Event which fires when terminal did closed. Event value contains closed terminal widget definition.\n     */\n    abstract onTerminalDidClose: Event<TerminalWidget>;\n\n    /**\n     * Cleat terminal output.\n     */\n    abstract clearOutput(): void;\n\n    abstract writeLine(line: string): void;\n\n    abstract write(data: string): void;\n\n    abstract resize(cols: number, rows: number): void;\n\n    /**\n     * Return Terminal search box widget.\n     */\n    abstract getSearchBox(): TerminalSearchWidget;\n    /**\n     * Whether the terminal process has child processes.\n     */\n    abstract hasChildProcesses(): Promise<boolean>;\n\n    abstract setTitle(title: string): void;\n\n    abstract waitOnExit(waitOnExit?: boolean | string): void;\n}\n\n/**\n * Terminal widget options.\n */\nexport const TerminalWidgetOptions = Symbol('TerminalWidgetOptions');\nexport interface TerminalWidgetOptions {\n\n    /**\n     * Human readable terminal representation on the UI.\n     */\n    readonly title?: string;\n\n    /**\n     * Path to the executable shell. For example: `/bin/bash`, `bash`, `sh`.\n     */\n    readonly shellPath?: string;\n\n    /**\n     * Shell arguments to executable shell, for example: [`-l`] - without login.\n     */\n    readonly shellArgs?: string[];\n\n    /**\n     * Current working directory.\n     */\n    readonly cwd?: string | URI;\n\n    /**\n     * Environment variables for terminal.\n     */\n    readonly env?: { [key: string]: string | null };\n\n    /**\n     * In case `destroyTermOnClose` is true - terminal process will be destroyed on close terminal widget, otherwise will be kept\n     * alive.\n     */\n    readonly destroyTermOnClose?: boolean;\n\n    /**\n     * Terminal server side can send to the client `terminal title` to display this value on the UI. If\n     * useServerTitle = true then display this title, otherwise display title defined by 'title' argument.\n     */\n    readonly useServerTitle?: boolean;\n\n    /**\n     * Whether it is a pseudo terminal where an extension controls its input and output.\n     */\n    readonly isPseudoTerminal?: boolean;\n\n    /**\n     * Terminal id. Should be unique for all DOM.\n     */\n    readonly id?: string;\n\n    /**\n     * Terminal attributes. Can be useful to apply some implementation specific information.\n     */\n    readonly attributes?: { [key: string]: string | null };\n\n    /**\n     * Terminal kind that indicates whether a terminal is created by a user or by some extension for a user\n     */\n    readonly kind?: 'user' | string;\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from '@theia/core/shared/react';\nimport '../../../src/browser/style/terminal-search.css';\nimport { Terminal } from 'xterm';\nimport { SearchAddon, ISearchOptions } from 'xterm-addon-search';\nimport { Key } from '@theia/core/lib/browser';\n\nexport const TERMINAL_SEARCH_WIDGET_FACTORY_ID = 'terminal-search';\nexport const TerminalSearchWidgetFactory = Symbol('TerminalSearchWidgetFactory');\nexport type TerminalSearchWidgetFactory = (terminal: Terminal) => TerminalSearchWidget;\n\n@injectable()\nexport class TerminalSearchWidget extends ReactWidget {\n\n    private searchInput: HTMLInputElement | null;\n    private searchBox: HTMLDivElement | null;\n    private searchOptions: ISearchOptions = {};\n    private searchAddon: SearchAddon;\n\n    @inject(Terminal)\n    protected terminal: Terminal;\n\n    @postConstruct()\n    protected init(): void {\n        this.node.classList.add('theia-search-terminal-widget-parent');\n\n        this.searchAddon = new SearchAddon();\n        this.terminal.loadAddon(this.searchAddon);\n\n        this.hide();\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        return <div className='theia-search-terminal-widget'>\n            <div className='theia-search-elem-box' ref={searchBox => this.searchBox = searchBox} >\n                <input\n                    title='Find'\n                    type='text'\n                    placeholder='Find'\n                    ref={ip => this.searchInput = ip}\n                    onKeyUp={this.onInputChanged}\n                    onFocus={this.onSearchInputFocus}\n                    onBlur={this.onSearchInputBlur}\n                />\n                <div title='Match case' tabIndex={0} className='search-elem match-case' onClick={this.handleCaseSensitiveOptionClicked}></div>\n                <div title='Match whole word' tabIndex={0} className='search-elem whole-word' onClick={this.handleWholeWordOptionClicked}></div>\n                <div title='Use regular expression' tabIndex={0} className='search-elem use-regexp' onClick={this.handleRegexOptionClicked}></div>\n            </div>\n            <button title='Previous match' className='search-elem arrow-up' onClick={this.handlePreviousButtonClicked}></button>\n            <button title='Next match' className='search-elem arrow-down' onClick={this.handleNextButtonClicked}></button>\n            <button title='Close' className='search-elem close' onClick={this.handleHide}></button>\n       </div>;\n    }\n\n    onSearchInputFocus = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.add('focused');\n        }\n    };\n\n    onSearchInputBlur = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.remove('focused');\n        }\n    };\n\n    private handleHide = (): void => {\n        this.hide();\n    };\n\n    private handleCaseSensitiveOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.caseSensitive = !this.searchOptions.caseSensitive;\n        this.updateSearchInputBox(this.searchOptions.caseSensitive, event.currentTarget);\n    };\n\n    private handleWholeWordOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.wholeWord = !this.searchOptions.wholeWord;\n        this.updateSearchInputBox(this.searchOptions.wholeWord, event.currentTarget);\n    };\n\n    private handleRegexOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.regex = !this.searchOptions.regex;\n        this.updateSearchInputBox(this.searchOptions.regex, event.currentTarget);\n    };\n\n    private updateSearchInputBox(enable: boolean, optionElement: HTMLSpanElement): void {\n        if (enable) {\n            optionElement.classList.add('option-enabled');\n        } else {\n            optionElement.classList.remove('option-enabled');\n        }\n        this.searchInput!.focus();\n    }\n\n    private onInputChanged = (event: React.KeyboardEvent): void => {\n        // move to previous search result on `Shift + Enter`\n        if (event && event.shiftKey && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'previous');\n            return;\n        }\n        // move to next search result on `Enter`\n        if (event && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'next');\n            return;\n        }\n\n        this.search(true, 'next');\n    };\n\n    search(incremental: boolean, searchDirection: 'next' | 'previous'): void {\n        if (this.searchInput) {\n            this.searchOptions.incremental = incremental;\n            const searchText = this.searchInput.value;\n\n            if (searchDirection === 'next') {\n                this.searchAddon.findNext(searchText, this.searchOptions);\n            }\n\n            if (searchDirection === 'previous') {\n                this.searchAddon.findPrevious(searchText, this.searchOptions);\n            }\n        }\n    }\n\n    private handleNextButtonClicked = (): void => {\n        this.search(false, 'next');\n    };\n\n    private handlePreviousButtonClicked = (): void => {\n        this.search(false, 'previous');\n    };\n\n    onAfterHide(): void {\n        this.terminal.focus();\n    }\n\n    onAfterShow(): void {\n        if (this.searchInput) {\n            this.searchInput.select();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { TerminalWidgetImpl } from './terminal-widget-impl';\n\nexport const TerminalContribution = Symbol('TerminalContribution');\nexport interface TerminalContribution {\n    onCreate(term: TerminalWidgetImpl): void;\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { isFirefox } from '@theia/core/lib/browser';\n\n@injectable()\nexport class TerminalCopyOnSelectionHandler {\n\n    private textToCopy: string;\n    private interceptCopy: boolean;\n\n    private copyListener = (ev: ClipboardEvent) => {\n        if (this.interceptCopy && ev.clipboardData) {\n            ev.clipboardData.setData('text/plain', this.textToCopy);\n            ev.preventDefault();\n        }\n    };\n\n    @postConstruct()\n    protected init(): void {\n        document.addEventListener('copy', this.copyListener);\n    }\n\n    private async clipBoardCopyIsGranted(): Promise<boolean> {\n        // Unfortunately Firefox doesn't support permission check `clipboard-write`, so let try to copy anyway,\n        if (isFirefox) {\n            return true;\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const permissions = (navigator as any).permissions;\n            const { state } = await permissions.query({ name: 'clipboard-write' });\n            if (state === 'granted') {\n                return true;\n            }\n        } catch (e) { }\n\n        return false;\n    }\n\n    private executeCommandCopy(): void {\n        try {\n            this.interceptCopy = true;\n            document.execCommand('copy');\n            this.interceptCopy = false;\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    private async writeToClipBoard(): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const clipboard = (navigator as any).clipboard;\n\n        if (!clipboard) {\n            this.executeCommandCopy();\n            return;\n        }\n\n        try {\n            await clipboard.writeText(this.textToCopy);\n        } catch (e) {\n            this.executeCommandCopy();\n        }\n    }\n\n    async copy(text: string): Promise<void> {\n        this.textToCopy = text;\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const permissions = (navigator as any).permissions;\n        if (permissions && permissions.query && await this.clipBoardCopyIsGranted()) {\n            await this.writeToClipBoard();\n        } else {\n            this.executeCommandCopy();\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Bitsler and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\nimport { EDITOR_FONT_DEFAULTS } from '@theia/editor/lib/browser';\n\nexport const TerminalConfigSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'terminal.enableCopy': {\n            type: 'boolean',\n            description: 'Enable ctrl-c (cmd-c on macOS) to copy selected text',\n            default: true\n        },\n        'terminal.enablePaste': {\n            type: 'boolean',\n            description: 'Enable ctrl-v (cmd-v on macOS) to paste from clipboard',\n            default: true\n        },\n        'terminal.integrated.fontFamily': {\n            type: 'string',\n            description: 'Controls the font family of the terminal.',\n            default: EDITOR_FONT_DEFAULTS.fontFamily\n        },\n        'terminal.integrated.fontSize': {\n            type: 'number',\n            description: 'Controls the font size in pixels of the terminal.',\n            minimum: 6,\n            default: EDITOR_FONT_DEFAULTS.fontSize\n        },\n        'terminal.integrated.fontWeight': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: 'The font weight to use within the terminal for non-bold text.',\n            default: 'normal'\n        },\n        'terminal.integrated.fontWeightBold': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: 'The font weight to use within the terminal for bold text.',\n            default: 'bold'\n        },\n        'terminal.integrated.drawBoldTextInBrightColors': {\n            description: 'Controls whether to draw bold text in bright colors.',\n            type: 'boolean',\n            default: true,\n        },\n        'terminal.integrated.letterSpacing': {\n            description: 'Controls the letter spacing of the terminal, this is an integer value which represents the amount of additional pixels to add between characters.',\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.lineHeight': {\n            description: 'Controls the line height of the terminal, this number is multiplied by the terminal font size to get the actual line-height in pixels.',\n            type: 'number',\n            minimum: 1,\n            default: 1\n        },\n        'terminal.integrated.scrollback': {\n            description: 'Controls the maximum amount of lines the terminal keeps in its buffer.',\n            type: 'number',\n            default: 1000\n        },\n        'terminal.integrated.fastScrollSensitivity': {\n            description: 'Controls the scrolling speed when pressing \\'alt\\'.',\n            type: 'number',\n            default: 5,\n        },\n        'terminal.integrated.rendererType': {\n            description: 'Controls how the terminal is rendered.',\n            type: 'string',\n            enum: ['canvas', 'dom'],\n            default: 'canvas'\n        },\n        'terminal.integrated.copyOnSelection': {\n            description: 'Controls whether text selected in the terminal will be copied to the clipboard.',\n            type: 'boolean',\n            default: false,\n        },\n        'terminal.integrated.cursorBlinking': {\n            description: 'Controls whether the terminal cursor blinks.',\n            type: 'boolean',\n            default: false\n        },\n        'terminal.integrated.cursorStyle': {\n            description: 'Controls the style of the terminal cursor.',\n            enum: ['block', 'underline', 'line'],\n            default: 'block'\n        },\n        'terminal.integrated.cursorWidth': {\n            description: 'Controls the width of the cursor when \\'terminal.integrated.cursorStyle\\' is set to \\'line\\'.',\n            markdownDescription: 'Controls the width of the cursor when `#terminal.integrated.cursorStyle#` is set to `line`.',\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.shell.windows': {\n            type: ['string', 'null'],\n            description: 'The path of the shell that the terminal uses on Windows. (default: C:\\\\Windows\\\\System32\\\\cmd.exe).',\n            markdownDescription: 'The path of the shell that the terminal uses on Windows. (default: C:\\\\Windows\\\\System32\\\\cmd.exe).',\n            default: undefined\n        },\n        'terminal.integrated.shell.osx': {\n            type: ['string', 'null'],\n            description: 'The path of the shell that the terminal uses on macOS (default: \\'/bin/bash\\'}).',\n            markdownDescription: 'The path of the shell that the terminal uses on macOS (default: \\'/bin/bash\\'}).',\n            default: undefined\n        },\n        'terminal.integrated.shell.linux': {\n            type: ['string', 'null'],\n            description: 'The path of the shell that the terminal uses on Linux (default: \\'/bin/bash\\'}).',\n            markdownDescription: 'The path of the shell that the terminal uses on Linux (default: \\'/bin/bash\\'}).',\n            default: undefined\n        },\n        'terminal.integrated.shellArgs.windows': {\n            type: 'array',\n            description: 'The command line arguments to use when on the Windows terminal.',\n            markdownDescription: 'The command line arguments to use when on the Windows terminal.',\n            default: []\n        },\n        'terminal.integrated.shellArgs.osx': {\n            type: 'array',\n            description: 'The command line arguments to use when on the macOS terminal.',\n            markdownDescription: 'The command line arguments to use when on the macOS terminal.',\n            default: [\n                '-l'\n            ]\n        },\n        'terminal.integrated.shellArgs.linux': {\n            type: 'array',\n            description: 'The command line arguments to use when on the Linux terminal.',\n            markdownDescription: 'The command line arguments to use when on the Linux terminal.',\n            default: []\n        },\n    }\n};\n\nexport interface TerminalConfiguration {\n    'terminal.enableCopy': boolean\n    'terminal.enablePaste': boolean\n    // xterm compatible, see https://xtermjs.org/docs/api/terminal/interfaces/iterminaloptions/\n    'terminal.integrated.fontFamily': string\n    'terminal.integrated.fontSize': number\n    'terminal.integrated.fontWeight': FontWeight\n    'terminal.integrated.fontWeightBold': FontWeight,\n    'terminal.integrated.drawBoldTextInBrightColors': boolean,\n    'terminal.integrated.letterSpacing': number\n    'terminal.integrated.lineHeight': number,\n    'terminal.integrated.scrollback': number,\n    'terminal.integrated.fastScrollSensitivity': number,\n    'terminal.integrated.rendererType': TerminalRendererType,\n    'terminal.integrated.copyOnSelection': boolean,\n    'terminal.integrated.cursorBlinking': boolean,\n    'terminal.integrated.cursorStyle': CursorStyleVSCode,\n    'terminal.integrated.cursorWidth': number,\n    'terminal.integrated.shell.windows': string | null | undefined,\n    'terminal.integrated.shell.osx': string | null | undefined,\n    'terminal.integrated.shell.linux': string | null | undefined,\n    'terminal.integrated.shellArgs.windows': string[],\n    'terminal.integrated.shellArgs.osx': string[],\n    'terminal.integrated.shellArgs.linux': string[],\n}\n\ntype FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type CursorStyle = 'block' | 'underline' | 'bar';\n// VS Code uses 'line' to represent 'bar'. The following conversion is necessary to support their preferences.\nexport type CursorStyleVSCode = CursorStyle | 'line';\nexport type TerminalRendererType = 'canvas' | 'dom';\nexport const DEFAULT_TERMINAL_RENDERER_TYPE = 'canvas';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isTerminalRendererType(arg: any): arg is TerminalRendererType {\n    return typeof arg === 'string' && (arg === 'canvas' || arg === 'dom');\n}\n\nexport const TerminalPreferences = Symbol('TerminalPreferences');\nexport type TerminalPreferences = PreferenceProxy<TerminalConfiguration>;\n\nexport function createTerminalPreferences(preferences: PreferenceService): TerminalPreferences {\n    return createPreferenceProxy(preferences, TerminalConfigSchema);\n}\n\nexport function bindTerminalPreferences(bind: interfaces.Bind): void {\n    bind(TerminalPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createTerminalPreferences(preferences);\n    });\n    bind(PreferenceContribution).toConstantValue({ schema: TerminalConfigSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ITheme } from 'xterm';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ColorRegistry, ColorDefaults } from '@theia/core/lib/browser/color-registry';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\n\n/**\n * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts#L40\n */\nexport const terminalAnsiColorMap: { [key: string]: { index: number, defaults: ColorDefaults } } = {\n    'terminal.ansiBlack': {\n        index: 0,\n        defaults: {\n            light: '#000000',\n            dark: '#000000',\n            hc: '#000000'\n        }\n    },\n    'terminal.ansiRed': {\n        index: 1,\n        defaults: {\n            light: '#cd3131',\n            dark: '#cd3131',\n            hc: '#cd0000'\n        }\n    },\n    'terminal.ansiGreen': {\n        index: 2,\n        defaults: {\n            light: '#00BC00',\n            dark: '#0DBC79',\n            hc: '#00cd00'\n        }\n    },\n    'terminal.ansiYellow': {\n        index: 3,\n        defaults: {\n            light: '#949800',\n            dark: '#e5e510',\n            hc: '#cdcd00'\n        }\n    },\n    'terminal.ansiBlue': {\n        index: 4,\n        defaults: {\n            light: '#0451a5',\n            dark: '#2472c8',\n            hc: '#0000ee'\n        }\n    },\n    'terminal.ansiMagenta': {\n        index: 5,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#bc3fbc',\n            hc: '#cd00cd'\n        }\n    },\n    'terminal.ansiCyan': {\n        index: 6,\n        defaults: {\n            light: '#0598bc',\n            dark: '#11a8cd',\n            hc: '#00cdcd'\n        }\n    },\n    'terminal.ansiWhite': {\n        index: 7,\n        defaults: {\n            light: '#555555',\n            dark: '#e5e5e5',\n            hc: '#e5e5e5'\n        }\n    },\n    'terminal.ansiBrightBlack': {\n        index: 8,\n        defaults: {\n            light: '#666666',\n            dark: '#666666',\n            hc: '#7f7f7f'\n        }\n    },\n    'terminal.ansiBrightRed': {\n        index: 9,\n        defaults: {\n            light: '#cd3131',\n            dark: '#f14c4c',\n            hc: '#ff0000'\n        }\n    },\n    'terminal.ansiBrightGreen': {\n        index: 10,\n        defaults: {\n            light: '#14CE14',\n            dark: '#23d18b',\n            hc: '#00ff00'\n        }\n    },\n    'terminal.ansiBrightYellow': {\n        index: 11,\n        defaults: {\n            light: '#b5ba00',\n            dark: '#f5f543',\n            hc: '#ffff00'\n        }\n    },\n    'terminal.ansiBrightBlue': {\n        index: 12,\n        defaults: {\n            light: '#0451a5',\n            dark: '#3b8eea',\n            hc: '#5c5cff'\n        }\n    },\n    'terminal.ansiBrightMagenta': {\n        index: 13,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#d670d6',\n            hc: '#ff00ff'\n        }\n    },\n    'terminal.ansiBrightCyan': {\n        index: 14,\n        defaults: {\n            light: '#0598bc',\n            dark: '#29b8db',\n            hc: '#00ffff'\n        }\n    },\n    'terminal.ansiBrightWhite': {\n        index: 15,\n        defaults: {\n            light: '#a5a5a5',\n            dark: '#e5e5e5',\n            hc: '#ffffff'\n        }\n    }\n};\n\n@injectable()\nexport class TerminalThemeService {\n\n    @inject(ColorRegistry)\n    protected readonly colorRegistry: ColorRegistry;\n\n    readonly onDidChange = ThemeService.get().onThemeChange;\n\n    get theme(): ITheme {\n        const foregroundColor = this.colorRegistry.getCurrentColor('terminal.foreground');\n        const backgroundColor = this.colorRegistry.getCurrentColor('terminal.background') || this.colorRegistry.getCurrentColor('panel.background');\n        const cursorColor = this.colorRegistry.getCurrentColor('terminalCursor.foreground') || foregroundColor;\n        const cursorAccentColor = this.colorRegistry.getCurrentColor('terminalCursor.background') || backgroundColor;\n        const selectionColor = this.colorRegistry.getCurrentColor('terminal.selectionBackground');\n\n        const theme: ITheme = {\n            background: backgroundColor,\n            foreground: foregroundColor,\n            cursor: cursorColor,\n            cursorAccent: cursorAccentColor,\n            selection: selectionColor\n        };\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const colorId = id.substring(13);\n            const colorName = colorId.charAt(0).toLowerCase() + colorId.slice(1);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (theme as any)[colorName] = this.colorRegistry.getCurrentColor(id);\n        }\n        return theme;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Terminal, RendererType } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { inject, injectable, named, postConstruct } from '@theia/core/shared/inversify';\nimport { ContributionProvider, Disposable, Event, Emitter, ILogger, DisposableCollection } from '@theia/core';\nimport { Widget, Message, WebSocketConnectionProvider, StatefulWidget, isFirefox, MessageLoop, KeyCode } from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ShellTerminalServerProxy, IShellTerminalPreferences } from '../common/shell-terminal-protocol';\nimport { terminalsPath } from '../common/terminal-protocol';\nimport { IBaseTerminalServer, TerminalProcessInfo } from '../common/base-terminal-protocol';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport { TerminalWidgetOptions, TerminalWidget, TerminalDimensions } from './base/terminal-widget';\nimport { MessageConnection } from '@theia/core/shared/vscode-ws-jsonrpc';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { TerminalPreferences, TerminalRendererType, isTerminalRendererType, DEFAULT_TERMINAL_RENDERER_TYPE, CursorStyle } from './terminal-preferences';\nimport { TerminalContribution } from './terminal-contribution';\nimport URI from '@theia/core/lib/common/uri';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalSearchWidgetFactory, TerminalSearchWidget } from './search/terminal-search-widget';\nimport { TerminalCopyOnSelectionHandler } from './terminal-copy-on-selection-handler';\nimport { TerminalThemeService } from './terminal-theme-service';\nimport { CommandLineOptions, ShellCommandBuilder } from '@theia/process/lib/common/shell-command-builder';\nimport { Key } from '@theia/core/lib/browser/keys';\n\nexport const TERMINAL_WIDGET_FACTORY_ID = 'terminal';\n\nexport interface TerminalWidgetFactoryOptions extends Partial<TerminalWidgetOptions> {\n    /* a unique string per terminal */\n    created: string\n}\n\n@injectable()\nexport class TerminalWidgetImpl extends TerminalWidget implements StatefulWidget {\n\n    private readonly TERMINAL = 'Terminal';\n    protected terminalKind = 'user';\n    protected _terminalId = -1;\n    protected readonly onTermDidClose = new Emitter<TerminalWidget>();\n    protected fitAddon: FitAddon;\n    protected term: Terminal;\n    protected searchBox: TerminalSearchWidget;\n    protected restored = false;\n    protected closeOnDispose = true;\n    protected waitForConnection: Deferred<MessageConnection> | undefined;\n    protected hoverMessage: HTMLDivElement;\n    protected lastTouchEnd: TouchEvent | undefined;\n    protected isAttachedCloseListener: boolean = false;\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(WebSocketConnectionProvider) protected readonly webSocketConnectionProvider: WebSocketConnectionProvider;\n    @inject(TerminalWidgetOptions) options: TerminalWidgetOptions;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(TerminalWatcher) protected readonly terminalWatcher: TerminalWatcher;\n    @inject(ILogger) @named('terminal') protected readonly logger: ILogger;\n    @inject('terminal-dom-id') public readonly id: string;\n    @inject(TerminalPreferences) protected readonly preferences: TerminalPreferences;\n    @inject(ContributionProvider) @named(TerminalContribution) protected readonly terminalContributionProvider: ContributionProvider<TerminalContribution>;\n    @inject(TerminalService) protected readonly terminalService: TerminalService;\n    @inject(TerminalSearchWidgetFactory) protected readonly terminalSearchBoxFactory: TerminalSearchWidgetFactory;\n    @inject(TerminalCopyOnSelectionHandler) protected readonly copyOnSelectionHandler: TerminalCopyOnSelectionHandler;\n    @inject(TerminalThemeService) protected readonly themeService: TerminalThemeService;\n    @inject(ShellCommandBuilder) protected readonly shellCommandBuilder: ShellCommandBuilder;\n\n    protected readonly onDidOpenEmitter = new Emitter<void>();\n    readonly onDidOpen: Event<void> = this.onDidOpenEmitter.event;\n\n    protected readonly onDidOpenFailureEmitter = new Emitter<void>();\n    readonly onDidOpenFailure: Event<void> = this.onDidOpenFailureEmitter.event;\n\n    protected readonly onSizeChangedEmitter = new Emitter<{ cols: number; rows: number; }>();\n    readonly onSizeChanged: Event<{ cols: number; rows: number; }> = this.onSizeChangedEmitter.event;\n\n    protected readonly onDataEmitter = new Emitter<string>();\n    readonly onData: Event<string> = this.onDataEmitter.event;\n\n    protected readonly toDisposeOnConnect = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        this.setTitle(this.options.title || this.TERMINAL);\n        this.title.iconClass = 'fa fa-terminal';\n\n        if (this.options.kind) {\n            this.terminalKind = this.options.kind;\n        }\n\n        if (this.options.destroyTermOnClose === true) {\n            this.toDispose.push(Disposable.create(() =>\n                this.term.dispose()\n            ));\n        }\n\n        this.title.closable = true;\n        this.addClass('terminal-container');\n\n        this.term = new Terminal({\n            cursorBlink: this.preferences['terminal.integrated.cursorBlinking'],\n            cursorStyle: this.getCursorStyle(),\n            cursorWidth: this.preferences['terminal.integrated.cursorWidth'],\n            fontFamily: this.preferences['terminal.integrated.fontFamily'],\n            fontSize: this.preferences['terminal.integrated.fontSize'],\n            fontWeight: this.preferences['terminal.integrated.fontWeight'],\n            fontWeightBold: this.preferences['terminal.integrated.fontWeightBold'],\n            drawBoldTextInBrightColors: this.preferences['terminal.integrated.drawBoldTextInBrightColors'],\n            letterSpacing: this.preferences['terminal.integrated.letterSpacing'],\n            lineHeight: this.preferences['terminal.integrated.lineHeight'],\n            scrollback: this.preferences['terminal.integrated.scrollback'],\n            fastScrollSensitivity: this.preferences['terminal.integrated.fastScrollSensitivity'],\n            rendererType: this.getTerminalRendererType(this.preferences['terminal.integrated.rendererType']),\n            theme: this.themeService.theme\n        });\n\n        this.fitAddon = new FitAddon();\n        this.term.loadAddon(this.fitAddon);\n\n        this.hoverMessage = document.createElement('div');\n        this.hoverMessage.textContent = 'Cmd + click to follow link';\n        this.hoverMessage.style.position = 'fixed';\n        // TODO use `var(--theia-editorHoverWidget-foreground) with a newer Monaco version\n        this.hoverMessage.style.color = 'var(--theia-editorWidget-foreground)';\n        this.hoverMessage.style.backgroundColor = 'var(--theia-editorHoverWidget-background)';\n        this.hoverMessage.style.borderColor = 'var(--theia-editorHoverWidget-border)';\n        this.hoverMessage.style.borderWidth = '0.5px';\n        this.hoverMessage.style.borderStyle = 'solid';\n        this.hoverMessage.style.padding = '5px';\n        // Above the xterm.js canvas layers:\n        // https://github.com/xtermjs/xterm.js/blob/ff790236c1b205469f17a21246141f512d844295/src/renderer/Renderer.ts#L41-L46\n        this.hoverMessage.style.zIndex = '10';\n        // Initially invisible:\n        this.hoverMessage.style.display = 'none';\n        this.node.appendChild(this.hoverMessage);\n\n        this.toDispose.push(this.preferences.onPreferenceChanged(change => {\n            const lastSeparator = change.preferenceName.lastIndexOf('.');\n            if (lastSeparator > 0) {\n                let preferenceName = change.preferenceName.substr(lastSeparator + 1);\n                let preferenceValue = change.newValue;\n\n                if (preferenceName === 'rendererType') {\n                    const newRendererType = preferenceValue as string;\n                    if (newRendererType !== this.getTerminalRendererType(newRendererType)) {\n                        // Given terminal renderer type is not supported or invalid\n                        preferenceValue = DEFAULT_TERMINAL_RENDERER_TYPE;\n                    }\n                } else if (preferenceName === 'cursorBlinking') {\n                    // Convert the terminal preference into a valid `xterm` option\n                    preferenceName = 'cursorBlink';\n                } else if (preferenceName === 'cursorStyle') {\n                    preferenceValue = this.getCursorStyle();\n                }\n\n                this.term.setOption(preferenceName, preferenceValue);\n                this.needsResize = true;\n                this.update();\n            }\n        }));\n\n        this.toDispose.push(this.themeService.onDidChange(() => this.term.setOption('theme', this.themeService.theme)));\n        this.attachCustomKeyEventHandler();\n        const titleChangeListenerDispose = this.term.onTitleChange((title: string) => {\n            if (this.options.useServerTitle) {\n                this.title.label = title;\n            }\n        });\n        this.toDispose.push(titleChangeListenerDispose);\n\n        this.toDispose.push(this.terminalWatcher.onTerminalError(({ terminalId, error }) => {\n            if (terminalId === this.terminalId) {\n                this.dispose();\n                this.onTermDidClose.fire(this);\n                this.onTermDidClose.dispose();\n                this.logger.error(`The terminal process terminated. Cause: ${error}`);\n            }\n        }));\n        this.toDispose.push(this.terminalWatcher.onTerminalExit(({ terminalId }) => {\n            if (terminalId === this.terminalId) {\n                this.dispose();\n                this.onTermDidClose.fire(this);\n                this.onTermDidClose.dispose();\n            }\n        }));\n        this.toDispose.push(this.toDisposeOnConnect);\n        this.toDispose.push(this.shellTerminalServer.onDidCloseConnection(() => {\n            const disposable = this.shellTerminalServer.onDidOpenConnection(() => {\n                disposable.dispose();\n                this.reconnectTerminalProcess();\n            });\n            this.toDispose.push(disposable);\n        }));\n        this.toDispose.push(this.onTermDidClose);\n        this.toDispose.push(this.onDidOpenEmitter);\n        this.toDispose.push(this.onDidOpenFailureEmitter);\n        this.toDispose.push(this.onSizeChangedEmitter);\n        this.toDispose.push(this.onDataEmitter);\n\n        const touchEndListener = (event: TouchEvent) => {\n            if (this.node.contains(event.target as Node)) {\n                this.lastTouchEnd = event;\n            }\n        };\n        document.addEventListener('touchend', touchEndListener, { passive: true });\n        this.onDispose(() => {\n            document.removeEventListener('touchend', touchEndListener);\n        });\n\n        this.toDispose.push(this.term.onSelectionChange(() => {\n            if (this.copyOnSelection) {\n                this.copyOnSelectionHandler.copy(this.term.getSelection());\n            }\n        }));\n\n        this.toDispose.push(this.term.onResize(data => {\n            this.onSizeChangedEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onData(data => {\n            this.onDataEmitter.fire(data);\n        }));\n\n        for (const contribution of this.terminalContributionProvider.getContributions()) {\n            contribution.onCreate(this);\n        }\n\n        this.searchBox = this.terminalSearchBoxFactory(this.term);\n        this.toDispose.push(this.searchBox);\n    }\n\n    get kind(): 'user' | string {\n        return this.terminalKind;\n    }\n\n    /**\n     * Get the cursor style compatible with `xterm`.\n     * @returns CursorStyle\n     */\n    private getCursorStyle(): CursorStyle {\n        const value = this.preferences['terminal.integrated.cursorStyle'];\n        return value === 'line' ? 'bar' : value;\n    }\n\n    /**\n     * Returns given renderer type if it is valid and supported or default renderer otherwise.\n     *\n     * @param terminalRendererType desired terminal renderer type\n     */\n    private getTerminalRendererType(terminalRendererType?: string | TerminalRendererType): RendererType {\n        if (terminalRendererType && isTerminalRendererType(terminalRendererType)) {\n            return terminalRendererType;\n        }\n        return DEFAULT_TERMINAL_RENDERER_TYPE;\n    }\n\n    showHoverMessage(x: number, y: number, message: string): void {\n        this.hoverMessage.innerText = message;\n        this.hoverMessage.style.display = 'inline';\n        this.hoverMessage.style.top = `${y - 30}px`;\n        this.hoverMessage.style.left = `${x - 60}px`;\n    }\n\n    hideHover(): void {\n        this.hoverMessage.style.display = 'none';\n    }\n\n    getTerminal(): Terminal {\n        return this.term;\n    }\n\n    getSearchBox(): TerminalSearchWidget {\n        return this.searchBox;\n    }\n\n    get dimensions(): TerminalDimensions {\n        return {\n            cols: this.term.cols,\n            rows: this.term.rows,\n        };\n    }\n\n    get cwd(): Promise<URI> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        if (this.terminalService.getById(this.id)) {\n            return this.shellTerminalServer.getCwdURI(this.terminalId)\n                .then(cwdUrl => new URI(cwdUrl));\n        }\n        return Promise.resolve(new URI());\n    }\n\n    get processId(): Promise<number> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessId(this.terminalId);\n    }\n\n    get processInfo(): Promise<TerminalProcessInfo> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessInfo(this.terminalId);\n    }\n\n    get terminalId(): number {\n        return this._terminalId;\n    }\n\n    get lastTouchEndEvent(): TouchEvent | undefined {\n        return this.lastTouchEnd;\n    }\n\n    onDispose(onDispose: () => void): void {\n        this.toDispose.push(Disposable.create(onDispose));\n    }\n\n    clearOutput(): void {\n        this.term.clear();\n    }\n\n    async hasChildProcesses(): Promise<boolean> {\n        return this.shellTerminalServer.hasChildProcesses(await this.processId);\n    }\n\n    storeState(): object {\n        this.closeOnDispose = false;\n        if (this.options.isPseudoTerminal) {\n            return {};\n        }\n        return { terminalId: this.terminalId, titleLabel: this.title.label };\n    }\n\n    restoreState(oldState: object): void {\n        // pseudo terminal can not restore\n        if (this.options.isPseudoTerminal) {\n            this.dispose();\n            return;\n        }\n        if (this.restored === false) {\n            const state = oldState as { terminalId: number, titleLabel: string };\n            /* This is a workaround to issue #879 */\n            this.restored = true;\n            this.title.label = state.titleLabel;\n            this.start(state.terminalId);\n        }\n    }\n\n    /**\n     * Create a new shell terminal in the back-end and attach it to a\n     * new terminal widget.\n     * If id is provided attach to the terminal for this id.\n     */\n    async start(id?: number): Promise<number> {\n        this._terminalId = typeof id !== 'number' ? await this.createTerminal() : await this.attachTerminal(id);\n        this.resizeTerminalProcess();\n        this.connectTerminalProcess();\n        if (IBaseTerminalServer.validateId(this.terminalId)) {\n            this.onDidOpenEmitter.fire(undefined);\n            await this.shellTerminalServer.onAttachAttempted(this._terminalId);\n            return this.terminalId;\n        }\n        this.onDidOpenFailureEmitter.fire(undefined);\n        throw new Error('Failed to start terminal' + (id ? ` for id: ${id}.` : '.'));\n    }\n\n    protected async attachTerminal(id: number): Promise<number> {\n        const terminalId = await this.shellTerminalServer.attach(id);\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        this.logger.warn(`Failed attaching to terminal id ${id}, the terminal is most likely gone. Starting up a new terminal instead.`);\n        if (this.kind === 'user') {\n            return this.createTerminal();\n        } else {\n            return -1;\n        }\n    }\n\n    protected async createTerminal(): Promise<number> {\n        let rootURI = this.options.cwd?.toString();\n        if (!rootURI) {\n            const root = (await this.workspaceService.roots)[0];\n            rootURI = root?.resource?.toString();\n        }\n        const { cols, rows } = this.term;\n\n        const terminalId = await this.shellTerminalServer.create({\n            shellPreferences: this.shellPreferences,\n            shell: this.options.shellPath,\n            args: this.options.shellArgs,\n            env: this.options.env,\n            isPseudo: this.options.isPseudoTerminal,\n            rootURI,\n            cols,\n            rows\n        });\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        throw new Error('Error creating terminal widget, see the backend error log for more information.');\n    }\n\n    processMessage(msg: Message): void {\n        super.processMessage(msg);\n        switch (msg.type) {\n            case 'fit-request':\n                this.onFitRequest(msg);\n                break;\n            default:\n                break;\n        }\n    }\n    protected onFitRequest(msg: Message): void {\n        super.onFitRequest(msg);\n        MessageLoop.sendMessage(this, Widget.ResizeMessage.UnknownSize);\n    }\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.term.focus();\n    }\n    protected onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.update();\n    }\n    protected onAfterAttach(msg: Message): void {\n        Widget.attach(this.searchBox, this.node);\n        super.onAfterAttach(msg);\n        this.update();\n    }\n    protected onBeforeDetach(msg: Message): void {\n        Widget.detach(this.searchBox);\n        super.onBeforeDetach(msg);\n    }\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.needsResize = true;\n        this.update();\n    }\n\n    protected needsResize = true;\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        if (!this.isVisible || !this.isAttached) {\n            return;\n        }\n\n        this.open();\n\n        if (this.needsResize) {\n            this.resizeTerminal();\n            this.needsResize = false;\n\n            this.resizeTerminalProcess();\n        }\n    }\n\n    // Device status code emitted by Xterm.js\n    // Check: https://github.com/xtermjs/xterm.js/blob/release/3.14/src/InputHandler.ts#L1055-L1082\n    protected readonly deviceStatusCodes = new Set(['\\u001B[>0;276;0c', '\\u001B[>85;95;0c', '\\u001B[>83;40003;0c', '\\u001B[?1;2c', '\\u001B[?6c']);\n\n    protected connectTerminalProcess(): void {\n        if (typeof this.terminalId !== 'number') {\n            return;\n        }\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        this.toDisposeOnConnect.dispose();\n        this.toDispose.push(this.toDisposeOnConnect);\n        const waitForConnection = this.waitForConnection = new Deferred<MessageConnection>();\n        this.webSocketConnectionProvider.listen({\n            path: `${terminalsPath}/${this.terminalId}`,\n            onConnection: connection => {\n                connection.onNotification('onData', (data: string) => this.write(data));\n\n                // Excludes the device status code emitted by Xterm.js\n                const sendData = (data?: string) => {\n                    if (data && !this.deviceStatusCodes.has(data) && !this.disableEnterWhenAttachCloseListener()) {\n                        return connection.sendRequest('write', data);\n                    }\n                };\n\n                const disposable = this.term.onData(sendData);\n                connection.onDispose(() => disposable.dispose());\n\n                this.toDisposeOnConnect.push(connection);\n                connection.listen();\n                if (waitForConnection) {\n                    waitForConnection.resolve(connection);\n                }\n            }\n        }, { reconnecting: false });\n    }\n    protected async reconnectTerminalProcess(): Promise<void> {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (typeof this.terminalId === 'number') {\n            await this.start(this.terminalId);\n        }\n    }\n\n    protected termOpened = false;\n    protected initialData = '';\n    protected open(): void {\n        if (this.termOpened) {\n            return;\n        }\n        this.term.open(this.node);\n        if (this.initialData) {\n            this.term.write(this.initialData);\n        }\n        this.termOpened = true;\n        this.initialData = '';\n\n        if (isFirefox) {\n            // The software scrollbars don't work with xterm.js, so we disable the scrollbar if we are on firefox.\n            if (this.term.element) {\n                (this.term.element.children.item(0) as HTMLElement).style.overflow = 'hidden';\n            }\n        }\n    }\n\n    write(data: string): void {\n        if (this.termOpened) {\n            this.term.write(data);\n        } else {\n            this.initialData += data;\n        }\n    }\n\n    resize(cols: number, rows: number): void {\n        this.term.resize(cols, rows);\n    }\n\n    sendText(text: string): void {\n        if (this.waitForConnection) {\n            this.waitForConnection.promise.then(connection =>\n                connection.sendRequest('write', text)\n            );\n        }\n    }\n\n    async executeCommand(commandOptions: CommandLineOptions): Promise<void> {\n        this.sendText(this.shellCommandBuilder.buildCommand(await this.processInfo, commandOptions) + '\\n');\n    }\n\n    scrollLineUp(): void {\n        this.term.scrollLines(-1);\n    }\n\n    scrollLineDown(): void {\n        this.term.scrollLines(1);\n    }\n\n    scrollToTop(): void {\n        this.term.scrollToTop();\n    }\n\n    scrollToBottom(): void {\n        this.term.scrollToBottom();\n    }\n\n    scrollPageUp(): void {\n        this.term.scrollPages(-1);\n    }\n\n    scrollPageDown(): void {\n        this.term.scrollPages(1);\n    }\n\n    resetTerminal(): void {\n        this.term.reset();\n    }\n\n    writeLine(text: string): void {\n        this.term.writeln(text);\n    }\n\n    get onTerminalDidClose(): Event<TerminalWidget> {\n        return this.onTermDidClose.event;\n    }\n\n    dispose(): void {\n        /* Close the backend terminal only when explicitly closing the terminal\n         * a refresh for example won't close it.  */\n        if (this.closeOnDispose === true && typeof this.terminalId === 'number') {\n            this.shellTerminalServer.close(this.terminalId);\n            this.onTermDidClose.fire(this);\n        }\n        super.dispose();\n    }\n\n    protected resizeTerminal(): void {\n        const geo = this.fitAddon.proposeDimensions();\n        const cols = geo.cols;\n        const rows = geo.rows - 1; // subtract one row for margin\n        this.term.resize(cols, rows);\n    }\n\n    protected resizeTerminalProcess(): void {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (!IBaseTerminalServer.validateId(this.terminalId)\n            || !this.terminalService.getById(this.id)) {\n            return;\n        }\n        const { cols, rows } = this.term;\n        this.shellTerminalServer.resize(this.terminalId, cols, rows);\n    }\n\n    protected get enableCopy(): boolean {\n        return this.preferences['terminal.enableCopy'];\n    }\n\n    protected get enablePaste(): boolean {\n        return this.preferences['terminal.enablePaste'];\n    }\n\n    protected get shellPreferences(): IShellTerminalPreferences {\n        return {\n            shell: {\n                Windows: this.preferences['terminal.integrated.shell.windows'] ?? undefined,\n                Linux: this.preferences['terminal.integrated.shell.linux'] ?? undefined,\n                OSX: this.preferences['terminal.integrated.shell.osx'] ?? undefined,\n            },\n            shellArgs: {\n                Windows: this.preferences['terminal.integrated.shellArgs.windows'],\n                Linux: this.preferences['terminal.integrated.shellArgs.linux'],\n                OSX: this.preferences['terminal.integrated.shellArgs.osx'],\n            }\n        };\n    }\n\n    protected customKeyHandler(event: KeyboardEvent): boolean {\n        const keyBindings = KeyCode.createKeyCode(event).toString();\n        const ctrlCmdCopy = (isOSX && keyBindings === 'meta+c') || (!isOSX && keyBindings === 'ctrl+c');\n        const ctrlCmdPaste = (isOSX && keyBindings === 'meta+v') || (!isOSX && keyBindings === 'ctrl+v');\n        if (ctrlCmdCopy && this.enableCopy && this.term.hasSelection()) {\n            return false;\n        }\n        if (ctrlCmdPaste && this.enablePaste) {\n            return false;\n        }\n        return true;\n    }\n\n    protected get copyOnSelection(): boolean {\n        return this.preferences['terminal.integrated.copyOnSelection'];\n    }\n\n    protected attachCustomKeyEventHandler(): void {\n        this.term.attachCustomKeyEventHandler(e => this.customKeyHandler(e));\n    }\n\n    setTitle(title: string): void {\n        this.title.caption = title;\n        this.title.label = title;\n    }\n\n    waitOnExit(waitOnExit?: boolean | string): void {\n        if (waitOnExit) {\n            if (typeof waitOnExit === 'string') {\n                let message = waitOnExit;\n                // Bold the message and add an extra new line to make it stand out from the rest of the output\n                message = `\\r\\n\\x1b[1m${message}\\x1b[0m`;\n                this.write(message);\n            }\n            if (this.closeOnDispose === true && typeof this.terminalId === 'number') {\n                this.shellTerminalServer.close(this.terminalId);\n                this.onTermDidClose.fire(this);\n            }\n            this.attachPressEnterKeyToCloseListener(this.term);\n            return;\n        }\n        this.dispose();\n    }\n\n    private attachPressEnterKeyToCloseListener(term: Terminal): void {\n        if (term.textarea) {\n            this.isAttachedCloseListener = true;\n            this.addKeyListener(term.textarea, Key.ENTER, (event: KeyboardEvent) => {\n                this.dispose();\n                this.isAttachedCloseListener = false;\n            });\n        }\n    }\n\n    private disableEnterWhenAttachCloseListener(): boolean {\n        return this.isAttachedCloseListener;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { Disposable } from '@theia/core';\n\nexport interface TerminalProcessInfo {\n    executable: string\n    arguments: string[]\n}\n\nexport interface IBaseTerminalServerOptions { }\n\nexport interface IBaseTerminalServer extends JsonRpcServer<IBaseTerminalClient> {\n    create(IBaseTerminalServerOptions: object): Promise<number>;\n    getProcessId(id: number): Promise<number>;\n    getProcessInfo(id: number): Promise<TerminalProcessInfo>;\n    getCwdURI(id: number): Promise<string>;\n    resize(id: number, cols: number, rows: number): Promise<void>;\n    attach(id: number): Promise<number>;\n    onAttachAttempted(id: number): Promise<void>;\n    close(id: number): Promise<void>;\n    getDefaultShell(): Promise<string>;\n\n    /**\n     * Gets a single collection constructed by merging all environment variable collections into\n     * one.\n     */\n    readonly collections: ReadonlyMap<string, EnvironmentVariableCollection>;\n    /**\n     * Gets a single collection constructed by merging all environment variable collections into\n     * one.\n     */\n    readonly mergedCollection: MergedEnvironmentVariableCollection;\n    /**\n     * Sets an extension's environment variable collection.\n     */\n    setCollection(extensionIdentifier: string, persistent: boolean, collection: SerializableEnvironmentVariableCollection): void;\n    /**\n     * Deletes an extension's environment variable collection.\n     */\n    deleteCollection(extensionIdentifier: string): void;\n}\nexport namespace IBaseTerminalServer {\n    export function validateId(id?: number): boolean {\n        return typeof id === 'number' && id !== -1;\n    }\n}\n\nexport interface IBaseTerminalExitEvent {\n    terminalId: number;\n\n    // Exactly one of code and signal will be set.\n    code?: number;\n    signal?: string;\n}\n\nexport interface IBaseTerminalErrorEvent {\n    terminalId: number;\n    error: Error\n}\n\nexport interface IBaseTerminalClient {\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void;\n    onTerminalError(event: IBaseTerminalErrorEvent): void;\n    updateTerminalEnvVariables(): void;\n    storeTerminalEnvVariables(data: string): void;\n}\n\nexport class DispatchingBaseTerminalClient {\n\n    protected readonly clients = new Set<IBaseTerminalClient>();\n\n    push(client: IBaseTerminalClient): Disposable {\n        this.clients.add(client);\n        return Disposable.create(() => this.clients.delete(client));\n    }\n\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalExitChanged(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    onTerminalError(event: IBaseTerminalErrorEvent): void {\n\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalError(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    updateTerminalEnvVariables(): void {\n        this.clients.forEach(c => {\n            try {\n                c.updateTerminalEnvVariables();\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    storeTerminalEnvVariables(data: string): void {\n        this.clients.forEach(c => {\n            try {\n                c.storeTerminalEnvVariables(data);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n}\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.0/src/vs/workbench/contrib/terminal/common/environmentVariable.ts\n\nexport const ENVIRONMENT_VARIABLE_COLLECTIONS_KEY = 'terminal.integrated.environmentVariableCollections';\n\nexport interface EnvironmentVariableCollection {\n    readonly map: ReadonlyMap<string, EnvironmentVariableMutator>;\n}\n\nexport interface EnvironmentVariableCollectionWithPersistence extends EnvironmentVariableCollection {\n    readonly persistent: boolean;\n}\n\nexport enum EnvironmentVariableMutatorType {\n    Replace = 1,\n    Append = 2,\n    Prepend = 3\n}\n\nexport interface EnvironmentVariableMutator {\n    readonly value: string;\n    readonly type: EnvironmentVariableMutatorType;\n}\n\nexport interface ExtensionOwnedEnvironmentVariableMutator extends EnvironmentVariableMutator {\n    readonly extensionIdentifier: string;\n}\n\n/**\n * Represents an environment variable collection that results from merging several collections\n * together.\n */\nexport interface MergedEnvironmentVariableCollection {\n    readonly map: ReadonlyMap<string, ExtensionOwnedEnvironmentVariableMutator[]>;\n\n    /**\n     * Applies this collection to a process environment.\n     */\n    applyToProcessEnvironment(env: { [key: string]: string | null }): void;\n}\n\nexport interface SerializableExtensionEnvironmentVariableCollection {\n    extensionIdentifier: string,\n    collection: SerializableEnvironmentVariableCollection\n}\n\nexport type SerializableEnvironmentVariableCollection = [string, EnvironmentVariableMutator][];\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\n\nexport const ITerminalServer = Symbol('ITerminalServer');\n\nexport const terminalPath = '/services/terminal';\nexport const terminalsPath = '/services/terminals';\n\nexport interface ITerminalServer extends IBaseTerminalServer {\n    create(ITerminalServerOptions: object): Promise<number>;\n}\n\nexport interface ITerminalServerOptions extends IBaseTerminalServerOptions {\n    command: string,\n    args?: string[],\n    options?: object\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport {\n    IBaseTerminalClient,\n    IBaseTerminalExitEvent,\n    IBaseTerminalErrorEvent\n} from './base-terminal-protocol';\n\n@injectable()\nexport class TerminalWatcher {\n\n    getTerminalClient(): IBaseTerminalClient {\n        const exitEmitter = this.onTerminalExitEmitter;\n        const errorEmitter = this.onTerminalErrorEmitter;\n        const storeTerminalEnvVariablesEmitter = this.onStoreTerminalEnvVariablesRequestedEmitter;\n        const updateTerminalEnvVariablesEmitter = this.onUpdateTerminalEnvVariablesRequestedEmitter;\n        return {\n            storeTerminalEnvVariables(data: string): void {\n                storeTerminalEnvVariablesEmitter.fire(data);\n            },\n            updateTerminalEnvVariables(): void {\n                updateTerminalEnvVariablesEmitter.fire(undefined);\n            },\n            onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n                exitEmitter.fire(event);\n            },\n            onTerminalError(event: IBaseTerminalErrorEvent): void {\n                errorEmitter.fire(event);\n            }\n        };\n    }\n\n    private onTerminalExitEmitter = new Emitter<IBaseTerminalExitEvent>();\n    private onTerminalErrorEmitter = new Emitter<IBaseTerminalErrorEvent>();\n    private onStoreTerminalEnvVariablesRequestedEmitter = new Emitter<string>();\n    private onUpdateTerminalEnvVariablesRequestedEmitter = new Emitter<undefined>();\n\n    get onTerminalExit(): Event<IBaseTerminalExitEvent> {\n        return this.onTerminalExitEmitter.event;\n    }\n\n    get onTerminalError(): Event<IBaseTerminalErrorEvent> {\n        return this.onTerminalErrorEmitter.event;\n    }\n\n    get onStoreTerminalEnvVariablesRequested(): Event<string> {\n        return this.onStoreTerminalEnvVariablesRequestedEmitter.event;\n    }\n\n    get onUpdateTerminalEnvVariablesRequested(): Event<undefined> {\n        return this.onUpdateTerminalEnvVariablesRequestedEmitter.event;\n    }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IDisposable, ITerminalAddon, ISelectionPosition } from 'xterm';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n}\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\n\nexport class SearchAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: string[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void { }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    let startCol = 0;\n    let startRow = 0;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      const incremental = searchOptions ? searchOptions.incremental : false;\n      // Start from the selection end if there is a selection\n      // For incremental search, use existing row\n      currentSelection = this._terminal.getSelectionPosition()!;\n      startRow = incremental ? currentSelection.startRow : currentSelection.endRow;\n      startCol = incremental ? currentSelection.startColumn : currentSelection.endColumn;\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, wrap back and return selection if it exists.\n    if (!result && currentSelection) {\n      searchPosition.startRow = currentSelection.startRow;\n      searchPosition.startCol = 0;\n      result = this._findInLine(term, searchPosition, searchOptions);\n    }\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    const isReverseSearch = true;\n    let startRow = this._terminal.buffer.active.baseY + this._terminal.rows;\n    let startCol = this._terminal.cols;\n    let result: ISearchResult | undefined;\n    const incremental = searchOptions ? searchOptions.incremental : false;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      currentSelection = this._terminal.getSelectionPosition()!;\n      // Start from selection start if there is a selection\n      startRow = currentSelection.startRow;\n      startCol = currentSelection.startColumn;\n    }\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    if (incremental) {\n      // Try to expand selection to right first.\n      result = this._findInLine(term, searchPosition, searchOptions, false);\n      const isOldResultHighlighted = result && result.row === startRow && result.col === startCol;\n      if (!isOldResultHighlighted) {\n        // If selection was not able to be expanded to the right, then try reverse search\n        if (currentSelection) {\n          searchPosition.startRow = currentSelection.endRow;\n          searchPosition.startCol = currentSelection.endColumn;\n        }\n        result = this._findInLine(term, searchPosition, searchOptions, true);\n      }\n    } else {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.active.baseY + this._terminal.rows)) {\n      for (let y = (this._terminal.buffer.active.baseY + this._terminal.rows); y >= startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.active.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return (((searchIndex === 0) || (NON_WORD_CHARACTERS.indexOf(line[searchIndex - 1]) !== -1)) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.indexOf(line[searchIndex + term.length]) !== -1)));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line, which may contain\n   * subsequent terminal lines if the text is wrapped. If the provided line number is part of a wrapped text line that\n   * started on an earlier line then it is skipped since it will be properly searched when the terminal line that the\n   * text starts on is searched.\n   * @param term The search term.\n   * @param position The position to start the search.\n   * @param searchOptions Search options.\n   * @param isReverseSearch Whether the search should start from the right side of the terminal and search to the left.\n   * @return The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    let row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.active.getLine(row);\n    if (firstLine && firstLine.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let stringLine = this._linesCache ? this._linesCache[row] : void 0;\n    if (stringLine === void 0) {\n      stringLine = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = stringLine;\n      }\n    }\n\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..col\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, col))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(col));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = col + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (col - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, col - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, col);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple rows\n      if (resultIndex >= terminal.cols) {\n        row += Math.floor(resultIndex / terminal.cols);\n        resultIndex = resultIndex % terminal.cols;\n      }\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      const line = terminal.buffer.active.getLine(row);\n\n      if (line) {\n        for (let i = 0; i < resultIndex; i++) {\n          const cell = line.getCell(i);\n          if (!cell) {\n            break;\n          }\n          // Adjust the searchIndex to normalize emoji into single chars\n          const char = cell.getChars();\n          if (char.length > 1) {\n            resultIndex -= char.length - 1;\n          }\n          // Adjust the searchIndex for empty characters following wide unicode\n          // chars (eg. CJK)\n          const charWidth = cell.getWidth();\n          if (charWidth === 0) {\n            resultIndex++;\n          }\n        }\n      }\n      return {\n        term,\n        col: resultIndex,\n        row\n      };\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): string {\n    const terminal = this._terminal!;\n    let lineString = '';\n    let lineWrapsToNext: boolean;\n\n    do {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      const line = terminal.buffer.active.getLine(lineIndex);\n      if (!line) {\n        break;\n      }\n      lineString += line.translateToString(!lineWrapsToNext && trimRight).substring(0, terminal.cols);\n      lineIndex++;\n    } while (lineWrapsToNext);\n\n    return lineString;\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @return Whethera result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined): boolean {\n    const terminal = this._terminal!;\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.term.length);\n    // If it is not in the viewport then we scroll else it just gets selected\n    if (result.row >= (terminal.buffer.active.viewportY + terminal.rows) || result.row < terminal.buffer.active.viewportY) {\n      let scroll = result.row - terminal.buffer.active.viewportY;\n      scroll = scroll - Math.floor(terminal.rows / 2);\n      terminal.scrollLines(scroll);\n    }\n    return true;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(258);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\ninterface ILinkState {\n  decorations: ILinkDecorations;\n  isHovered: boolean;\n}\n\ninterface ILinkWithState {\n  link: ILink;\n  state?: ILinkState;\n}\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.options.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2 } from 'browser/Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, IAnsiColorChangeEvent } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { ITerminalOptions as IInitializedTerminalOptions } from 'common/services/Services';\nimport { rgba } from 'browser/Color';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): IInitializedTerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestScroll((eraseAttr, isWrapped) => this.scroll(eraseAttr, isWrapped || undefined)));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onAnsiColorChange((event) => this._changeAnsiColor(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  private _changeAnsiColor(event: IAnsiColorChangeEvent): void {\n    if (!this._colorManager) { return; }\n\n    event.colors.forEach(ansiColor => {\n      const color = rgba.toColor(ansiColor.red, ansiColor.green, ansiColor.blue);\n\n      this._colorManager!.colors.ansi[ansiColor.colorIndex] = color;\n    });\n\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.options.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.options.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing) {\n      return;\n    }\n\n    const cellHeight = Math.ceil(this._charSizeService!.height * this.optionsService.options.lineHeight);\n    const cursorTop = this._bufferService.buffer.y * cellHeight;\n    const cursorLeft = this._bufferService.buffer.x * this._charSizeService!.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = this._charSizeService!.width + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this._coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this.element.setAttribute('role', 'document');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.element, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this._coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this._coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport!.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }, { passive: true }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    super.scrollLines(disp, suppressScrollEvent);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService!.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService!.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService!.playBellSound();\n    }\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier, ILinkProvider, IUnicodeHandling, IUnicodeVersionProvider, FontWeight } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../LocalizableStrings';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.options.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n\nclass BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ITerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, <ICellData>cell);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n\nclass UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ITerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    bufferService: IBufferService,\n    optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    bufferService: IBufferService,\n    optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService coreService: ICoreService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(this._bufferService);\n    this._renderLayers = [\n      new TextRenderLayer(this._screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, this._bufferService, _optionsService),\n      new SelectionRenderLayer(this._screenElement, 1, this._colors, this._id, this._bufferService, _optionsService),\n      new LinkRenderLayer(this._screenElement, 2, this._colors, this._id, linkifier, linkifier2, this._bufferService, _optionsService),\n      new CursorRenderLayer(this._screenElement, 3, this._colors, this._id, this._onRequestRedraw, this._bufferService, _optionsService, coreService, coreBrowserService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    bufferService: IBufferService,\n    optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    bufferService: IBufferService,\n    optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _optionsService: IOptionsService,\n    private _colors: IColorSet\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (this._workCell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      let fg = this._workCell.getFgColor();\n      let fgColorMode = this._workCell.getFgColorMode();\n      let bg = this._workCell.getBgColor();\n      let bgColorMode = this._workCell.getBgColorMode();\n      const isInverse = !!this._workCell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (this._workCell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(e => this._fullRefresh()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      this._selectWordAtCursor(ev);\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({index: start, amount: deleteCount});\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({index: start, amount: items.length});\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ITerminalOptions, IDisposable, IBufferLine, IAttributeData, ICoreTerminal } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _coreService: ICoreService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _coreMouseService: ICoreMouseService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n\n  constructor(\n    options: ITerminalOptions\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this._coreService.onData, this._onData));\n    this.register(forwardEvent(this._coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this._bufferService.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._bufferService.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._bufferService.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._bufferService.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    const buffer = this._bufferService.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this._bufferService.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this._bufferService.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.options.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.addCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IAnsiColorChangeEvent } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestScroll = new EventEmitter<IAttributeData, boolean | void>();\n  public get onRequestScroll(): IEvent<IAttributeData, boolean | void> { return this._onRequestScroll.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onAnsiColorChange = new EventEmitter<IAnsiColorChangeEvent>();\n  public get onAnsiColorChange(): IEvent<IAnsiColorChangeEvent> { return this._onAnsiColorChange.event; }\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.registerCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.registerCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.registerCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.registerCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.registerCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.registerCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({final: 't'}, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setAnsiColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.registerEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.registerEscHandler({final: 'D'}, () => this.index());\n    this._parser.registerEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.registerEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.registerEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.registerEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({final: 'c'}, () => this.fullReset());\n    this._parser.registerEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.registerEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.registerEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.registerEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.registerEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.registerEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    this._dirtyRowService.clearRange();\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n\n    this._dirtyRowService.markDirty(buffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (buffer.x && end - start > 0 && bufferRow.getWidth(buffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(buffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (buffer.x < cols) {\n            bufferRow.setCellFromCodePoint(buffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._onRequestScroll.fire(this._eraseAttrData(), true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (buffer.x < cols && end - start > 0 && bufferRow.getWidth(buffer.x) === 0 && !bufferRow.hasContent(buffer.x)) {\n      bufferRow.setCellFromCodePoint(buffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._onRequestScroll.fire(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._bufferService.buffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    const buffer = this._bufferService.buffer;\n\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (buffer.x > 0) {\n        buffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (buffer.x > 0) {\n      buffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (buffer.x === 0\n          && buffer.y > buffer.scrollTop\n          && buffer.y <= buffer.scrollBottom\n          && buffer.lines.get(buffer.ybase + buffer.y)?.isWrapped)\n      {\n        buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = false;\n        buffer.y--;\n        buffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = buffer.lines.get(buffer.ybase + buffer.y)!;\n        if (line.hasWidth(buffer.x) && !line.hasContent(buffer.x)) {\n          buffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._onA11yTab.fire(this._bufferService.buffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._bufferService.buffer.x = Math.min(maxCol, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.fill(this._bufferService.buffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters.                                  | #N      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out.                                         | #N      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._bufferService.buffer.savedX = 0;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._charsetService.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  protected _parseAnsiColorChange(data: string): IAnsiColorChangeEvent | null {\n    const result: IAnsiColorChangeEvent = { colors: [] };\n    // example data: 5;rgb:aa/bb/cc\n    const regex = /(\\d+);rgb:([0-9a-f]{2})\\/([0-9a-f]{2})\\/([0-9a-f]{2})/gi;\n    let match;\n\n    while ((match = regex.exec(data)) !== null) {\n      result.colors.push({\n        colorIndex: parseInt(match[1]),\n        red: parseInt(match[2], 16),\n        green: parseInt(match[3], 16),\n        blue: parseInt(match[4], 16)\n      });\n    }\n\n    if (result.colors.length === 0) {\n      return null;\n    }\n\n    return result;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. `spec` color format is 'rgb:hh/hh/hh' where `h` are hexadecimal digits.\n   * There may be multipe c ; spec elements present in the same instruction, e.g. 1;rgb:10/20/30;2;rgb:a0/b0/c0.\n   */\n  public setAnsiColor(data: string): boolean {\n    const event = this._parseAnsiColorChange(data);\n    if (event) {\n      this._onAnsiColorChange.fire(event);\n    }\n    else {\n      this._logService.warn(`Expected format <num>;rgb:<rr>/<gg>/<bb> but got data: ${data}`);\n    }\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._bufferService.buffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._onRequestScroll.fire(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.ybase + buffer.y, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.ybase + buffer.y, buffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.ybase + buffer.y + yOffset;\n      const line = buffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range, content};\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success)) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean) {}\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean {\n    let ret = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({final: '\\\\'}, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this._transitions.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            if (handlers[j](params)) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            if (handlersEsc[jj]()) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].end(success)) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean {\n    let ret = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n});\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    for (const k of Object.keys(options)) {\n      if (k in this.options) {\n        try {\n          const newValue = options[k as keyof IPartialTerminalOptions] as any;\n          this.options[k] = this._sanitizeAndValidateOption(k, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(key)) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n\n  onResize: IEvent<{ cols: number, rows: number }>;\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  altClickMovesCursor?: boolean;\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n  windowOptions?: IWindowOptions;\n}\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(4389);\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/index.js!./terminal-search.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}