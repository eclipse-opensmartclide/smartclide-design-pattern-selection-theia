{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/plugin-dev/src/browser/hosted-plugin-controller.ts","webpack://browser-app/../node_modules/@theia/plugin-dev/src/browser/hosted-plugin-frontend-contribution.ts","webpack://browser-app/../node_modules/@theia/plugin-dev/src/browser/hosted-plugin-informer.ts","webpack://browser-app/../node_modules/@theia/plugin-dev/src/browser/hosted-plugin-log-viewer.ts","webpack://browser-app/../node_modules/@theia/plugin-dev/src/browser/hosted-plugin-manager-client.ts","webpack://browser-app/../node_modules/@theia/plugin-dev/src/browser/hosted-plugin-preferences.ts","webpack://browser-app/../node_modules/@theia/plugin-dev/src/browser/plugin-dev-frontend-module.ts","webpack://browser-app/../node_modules/@theia/plugin-dev/src/common/plugin-dev-protocol.ts","webpack://browser-app/../node_modules/@theia/plugin-ext/src/hosted/browser/hosted-plugin-watcher.ts","webpack://browser-app/../node_modules/@theia/workspace/src/browser/index.ts"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_plugin-dev_lib_browser_plugin-dev-frontend-module_js.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { setTimeout } from 'timers';\nimport { StatusBar } from '@theia/core/lib/browser/status-bar/status-bar';\nimport { StatusBarAlignment, StatusBarEntry, FrontendApplicationContribution, PreferenceServiceImpl, PreferenceChange } from '@theia/core/lib/browser';\nimport { MessageService } from '@theia/core/lib/common';\nimport { CommandRegistry } from '@theia/core/shared/@phosphor/commands';\nimport { Menu } from '@theia/core/shared/@phosphor/widgets';\nimport { FrontendApplicationStateService } from '@theia/core/lib/browser/frontend-application-state';\nimport { ConnectionStatusService, ConnectionStatus } from '@theia/core/lib/browser/connection-status-service';\nimport { HostedPluginServer } from '../common/plugin-dev-protocol';\nimport { HostedPluginManagerClient, HostedInstanceState, HostedPluginCommands, HostedInstanceData } from './hosted-plugin-manager-client';\nimport { HostedPluginLogViewer } from './hosted-plugin-log-viewer';\nimport { HostedPluginPreferences } from './hosted-plugin-preferences';\n\n/**\n * Adds a status bar element displaying the state of secondary Theia instance with hosted plugin and\n * allows controlling the instance by simple clicking on the status bar element.\n */\n@injectable()\nexport class HostedPluginController implements FrontendApplicationContribution {\n\n    public static readonly HOSTED_PLUGIN = 'hosted-plugin';\n    public static readonly HOSTED_PLUGIN_OFFLINE = 'hosted-plugin-offline';\n    public static readonly HOSTED_PLUGIN_FAILED = 'hosted-plugin-failed';\n\n    @inject(StatusBar)\n    protected readonly statusBar: StatusBar;\n\n    @inject(FrontendApplicationStateService)\n    protected readonly frontendApplicationStateService: FrontendApplicationStateService;\n\n    @inject(HostedPluginServer)\n    protected readonly hostedPluginServer: HostedPluginServer;\n\n    @inject(HostedPluginManagerClient)\n    protected readonly hostedPluginManagerClient: HostedPluginManagerClient;\n\n    @inject(ConnectionStatusService)\n    protected readonly connectionStatusService: ConnectionStatusService;\n\n    @inject(HostedPluginLogViewer)\n    protected readonly hostedPluginLogViewer: HostedPluginLogViewer;\n\n    @inject(HostedPluginPreferences)\n    protected readonly hostedPluginPreferences: HostedPluginPreferences;\n\n    @inject(PreferenceServiceImpl)\n    protected readonly preferenceService: PreferenceServiceImpl;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    private pluginState: HostedInstanceState = HostedInstanceState.STOPPED;\n    // used only for displaying Running instead of Watching in status bar if run of watcher fails\n    private watcherSuccess: boolean;\n    private entry: StatusBarEntry | undefined;\n\n    public initialize(): void {\n        this.hostedPluginServer.getHostedPlugin().then(pluginMetadata => {\n            if (!pluginMetadata) {\n                this.frontendApplicationStateService.reachedState('ready').then(() => {\n                    // handles status bar item\n                    this.hostedPluginManagerClient.onStateChanged(e => {\n                        if (e.state === HostedInstanceState.STARTING) {\n                            this.onHostedPluginStarting();\n                        } else if (e.state === HostedInstanceState.RUNNING) {\n                            this.onHostedPluginRunning();\n                        } else if (e.state === HostedInstanceState.STOPPED) {\n                            this.onHostedPluginStopped();\n                        } else if (e.state === HostedInstanceState.FAILED) {\n                            this.onHostedPluginFailed();\n                        }\n                    });\n\n                    // handles watch compilation\n                    this.hostedPluginManagerClient.onStateChanged(e => this.handleWatchers(e));\n\n                    // updates status bar if page is loading when hosted instance is already running\n                    this.hostedPluginServer.isHostedPluginInstanceRunning().then(running => {\n                        if (running) {\n                            this.onHostedPluginRunning();\n                        }\n                    });\n                });\n\n                this.connectionStatusService.onStatusChange(() => this.onConnectionStatusChanged());\n\n                this.preferenceService.onPreferenceChanged(preference => this.onPreferencesChanged(preference));\n            } else {\n                console.error(`Need to load plugin ${pluginMetadata.model.id}`);\n            }\n        });\n    }\n\n    /**\n     * Display status bar element for stopped plugin.\n     */\n    protected async onHostedPluginStopped(): Promise<void> {\n        this.pluginState = HostedInstanceState.STOPPED;\n\n        this.entry = {\n            text: 'Hosted Plugin: Stopped $(angle-up)',\n            alignment: StatusBarAlignment.LEFT,\n            priority: 100,\n            onclick: e => {\n                this.showMenu(e.clientX, e.clientY);\n            }\n        };\n\n        this.entry.className = HostedPluginController.HOSTED_PLUGIN;\n        await this.statusBar.setElement(HostedPluginController.HOSTED_PLUGIN, this.entry);\n    }\n\n    /**\n     * Display status bar element for starting plugin.\n     */\n    protected async onHostedPluginStarting(): Promise<void> {\n        this.pluginState = HostedInstanceState.STARTING;\n\n        this.hostedPluginLogViewer.showLogConsole();\n\n        this.entry = {\n            text: '$(cog~spin) Hosted Plugin: Starting',\n            alignment: StatusBarAlignment.LEFT,\n            priority: 100\n        };\n\n        this.entry.className = HostedPluginController.HOSTED_PLUGIN;\n        await this.statusBar.setElement(HostedPluginController.HOSTED_PLUGIN, this.entry);\n    }\n\n    /**\n     * Display status bar element for running plugin.\n     */\n    protected async onHostedPluginRunning(): Promise<void> {\n        this.pluginState = HostedInstanceState.RUNNING;\n\n        let entryText: string;\n        if (this.hostedPluginPreferences['hosted-plugin.watchMode'] && this.watcherSuccess) {\n            entryText = '$(cog~spin) Hosted Plugin: Watching $(angle-up)';\n        } else {\n            entryText = '$(cog~spin) Hosted Plugin: Running $(angle-up)';\n        }\n\n        this.entry = {\n            text: entryText,\n            alignment: StatusBarAlignment.LEFT,\n            priority: 100,\n            onclick: e => {\n                this.showMenu(e.clientX, e.clientY);\n            }\n        };\n\n        this.entry.className = HostedPluginController.HOSTED_PLUGIN;\n        await this.statusBar.setElement(HostedPluginController.HOSTED_PLUGIN, this.entry);\n    }\n\n    /**\n     * Display status bar element for failed plugin.\n     */\n    protected async onHostedPluginFailed(): Promise<void> {\n        this.pluginState = HostedInstanceState.FAILED;\n\n        this.entry = {\n            text: 'Hosted Plugin: Stopped $(angle-up)',\n            alignment: StatusBarAlignment.LEFT,\n            priority: 100,\n            onclick: e => {\n                this.showMenu(e.clientX, e.clientY);\n            }\n        };\n\n        this.entry.className = HostedPluginController.HOSTED_PLUGIN_FAILED;\n        await this.statusBar.setElement(HostedPluginController.HOSTED_PLUGIN, this.entry);\n    }\n\n    protected async onPreferencesChanged(preference: PreferenceChange): Promise<void> {\n        if (preference.preferenceName === 'hosted-plugin.watchMode') {\n            if (await this.hostedPluginServer.isHostedPluginInstanceRunning()) {\n                const pluginLocation = await this.hostedPluginServer.getHostedPluginURI();\n                const isWatchCompilationRunning = await this.hostedPluginServer.isWatchCompilationRunning(pluginLocation);\n                if (preference.newValue === true) {\n                    if (!isWatchCompilationRunning) {\n                        await this.runWatchCompilation(pluginLocation.toString());\n                    }\n                } else {\n                    if (isWatchCompilationRunning) {\n                        await this.hostedPluginServer.stopWatchCompilation(pluginLocation.toString());\n                    }\n                }\n                // update status bar\n                this.onHostedPluginRunning();\n            }\n        }\n    }\n\n    /**\n     * Starts / stops watchers on hosted instance state change.\n     *\n     * @param event hosted instance state change event\n     */\n    protected async handleWatchers(event: HostedInstanceData): Promise<void> {\n        if (event.state === HostedInstanceState.RUNNING) {\n            if (this.hostedPluginPreferences['hosted-plugin.watchMode']) {\n                await this.runWatchCompilation(event.pluginLocation.toString());\n                // update status bar\n                this.onHostedPluginRunning();\n            }\n        } else if (event.state === HostedInstanceState.STOPPING) {\n            if (this.hostedPluginPreferences['hosted-plugin.watchMode']) {\n                const isRunning = await this.hostedPluginServer.isWatchCompilationRunning(event.pluginLocation.toString());\n                if (isRunning) {\n                    try {\n                        await this.hostedPluginServer.stopWatchCompilation(event.pluginLocation.toString());\n                    } catch (error) {\n                        this.messageService.error(this.getErrorMessage(error.message));\n                    }\n                }\n            }\n        }\n    }\n\n    private async runWatchCompilation(pluginLocation: string): Promise<void> {\n        try {\n            await this.hostedPluginServer.runWatchCompilation(pluginLocation);\n            this.watcherSuccess = true;\n        } catch (error) {\n            this.messageService.error(this.getErrorMessage(error));\n            this.watcherSuccess = false;\n        }\n    }\n\n    private getErrorMessage(error: Error): string {\n        return error.message.substring(error.message.indexOf(':') + 1);\n    }\n\n    /**\n     * Updating status bar element when changing connection status.\n     */\n    private onConnectionStatusChanged(): void {\n        if (this.connectionStatusService.currentStatus === ConnectionStatus.OFFLINE) {\n            // Re-set the element only if it's visible on status bar\n            if (this.entry) {\n                const offlineElement = {\n                    text: 'Hosted Plugin: Stopped',\n                    alignment: StatusBarAlignment.LEFT,\n                    priority: 100\n                };\n\n                this.entry.className = HostedPluginController.HOSTED_PLUGIN_OFFLINE;\n                this.statusBar.setElement(HostedPluginController.HOSTED_PLUGIN, offlineElement);\n            }\n        } else {\n            // ask state of hosted plugin when switching to Online\n            if (this.entry) {\n                this.hostedPluginServer.isHostedPluginInstanceRunning().then(running => {\n                    if (running) {\n                        this.onHostedPluginRunning();\n                    } else {\n                        this.onHostedPluginStopped();\n                    }\n                });\n            }\n        }\n    }\n\n    /**\n     * Show menu containing actions to start/stop/restart hosted plugin.\n     */\n    protected showMenu(x: number, y: number): void {\n        const commands = new CommandRegistry();\n        const menu = new Menu({\n            commands\n        });\n\n        if (this.pluginState === HostedInstanceState.RUNNING) {\n            this.addCommandsForRunningPlugin(commands, menu);\n        } else if (this.pluginState === HostedInstanceState.STOPPED || this.pluginState === HostedInstanceState.FAILED) {\n            this.addCommandsForStoppedPlugin(commands, menu);\n        }\n\n        menu.open(x, y);\n    }\n\n    /**\n     * Adds commands to the menu for running plugin.\n     */\n    protected addCommandsForRunningPlugin(commands: CommandRegistry, menu: Menu): void {\n        commands.addCommand(HostedPluginCommands.STOP.id, {\n            label: 'Stop Instance',\n            icon: 'fa fa-stop',\n            execute: () => setTimeout(() => this.hostedPluginManagerClient.stop(), 100)\n        });\n\n        menu.addItem({\n            type: 'command',\n            command: HostedPluginCommands.STOP.id\n        });\n\n        commands.addCommand(HostedPluginCommands.RESTART.id, {\n            label: 'Restart Instance',\n            icon: 'fa fa-repeat',\n            execute: () => setTimeout(() => this.hostedPluginManagerClient.restart(), 100)\n        });\n\n        menu.addItem({\n            type: 'command',\n            command: HostedPluginCommands.RESTART.id\n        });\n    }\n\n    /**\n     * Adds command to the menu for stopped plugin.\n     */\n    protected addCommandsForStoppedPlugin(commands: CommandRegistry, menu: Menu): void {\n        commands.addCommand(HostedPluginCommands.START.id, {\n            label: 'Start Instance',\n            icon: 'fa fa-play',\n            execute: () => setTimeout(() => this.hostedPluginManagerClient.start(), 100)\n        });\n\n        menu.addItem({\n            type: 'command',\n            command: HostedPluginCommands.START.id\n        });\n\n        commands.addCommand(HostedPluginCommands.DEBUG.id, {\n            label: 'Debug Instance',\n            icon: 'fa fa-bug',\n            execute: () => setTimeout(() => this.hostedPluginManagerClient.debug(), 100)\n        });\n\n        menu.addItem({\n            type: 'command',\n            command: HostedPluginCommands.DEBUG.id\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { CommandRegistry, CommandContribution } from '@theia/core/lib/common';\nimport { HostedPluginManagerClient, HostedPluginCommands } from './hosted-plugin-manager-client';\n\n@injectable()\nexport class HostedPluginFrontendContribution implements CommandContribution {\n\n    @inject(HostedPluginManagerClient)\n    protected readonly hostedPluginManagerClient: HostedPluginManagerClient;\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(HostedPluginCommands.START, {\n            execute: () => this.hostedPluginManagerClient.start()\n        });\n        commands.registerCommand(HostedPluginCommands.DEBUG, {\n            execute: () => this.hostedPluginManagerClient.debug()\n        });\n        commands.registerCommand(HostedPluginCommands.STOP, {\n            execute: () => this.hostedPluginManagerClient.stop()\n        });\n        commands.registerCommand(HostedPluginCommands.RESTART, {\n            execute: () => this.hostedPluginManagerClient.restart()\n        });\n        commands.registerCommand(HostedPluginCommands.SELECT_PATH, {\n            execute: () => this.hostedPluginManagerClient.selectPluginPath()\n        });\n\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { StatusBar } from '@theia/core/lib/browser/status-bar/status-bar';\nimport { StatusBarAlignment, StatusBarEntry, FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { HostedPluginServer } from '../common/plugin-dev-protocol';\nimport { ConnectionStatusService, ConnectionStatus } from '@theia/core/lib/browser/connection-status-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { FrontendApplicationStateService } from '@theia/core/lib/browser/frontend-application-state';\n\n/**\n * Informs the user whether Theia is running with hosted plugin.\n * Adds 'Development Host' status bar element and appends the same prefix to window title.\n */\n@injectable()\nexport class HostedPluginInformer implements FrontendApplicationContribution {\n\n    public static readonly DEVELOPMENT_HOST_TITLE = 'Development Host';\n\n    public static readonly DEVELOPMENT_HOST = 'development-host';\n\n    public static readonly DEVELOPMENT_HOST_OFFLINE = 'development-host-offline';\n\n    private entry: StatusBarEntry;\n\n    @inject(StatusBar)\n    protected readonly statusBar: StatusBar;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(HostedPluginServer)\n    protected readonly hostedPluginServer: HostedPluginServer;\n\n    @inject(ConnectionStatusService)\n    protected readonly connectionStatusService: ConnectionStatusService;\n\n    @inject(FrontendApplicationStateService)\n    protected readonly frontendApplicationStateService: FrontendApplicationStateService;\n\n    public initialize(): void {\n        this.workspaceService.roots.then(roots => {\n            const workspaceFolder = roots[0];\n            this.hostedPluginServer.getHostedPlugin().then(pluginMetadata => {\n                if (pluginMetadata) {\n                    this.updateTitle(workspaceFolder);\n\n                    this.entry = {\n                        text: `$(cube) ${HostedPluginInformer.DEVELOPMENT_HOST_TITLE}`,\n                        tooltip: `Hosted Plugin '${pluginMetadata.model.name}'`,\n                        alignment: StatusBarAlignment.LEFT,\n                        priority: 100\n                    };\n\n                    this.frontendApplicationStateService.reachedState('ready').then(() => {\n                        this.updateStatusBarElement();\n                    });\n\n                    this.connectionStatusService.onStatusChange(() => this.updateStatusBarElement());\n                }\n            });\n        });\n    }\n\n    private updateStatusBarElement(): void {\n        if (this.connectionStatusService.currentStatus === ConnectionStatus.OFFLINE) {\n            this.entry.className = HostedPluginInformer.DEVELOPMENT_HOST_OFFLINE;\n        } else {\n            this.entry.className = HostedPluginInformer.DEVELOPMENT_HOST;\n        }\n\n        this.statusBar.setElement(HostedPluginInformer.DEVELOPMENT_HOST, this.entry);\n    }\n\n    private updateTitle(root: FileStat | undefined): void {\n        if (root) {\n            const uri = root.resource;\n            document.title = HostedPluginInformer.DEVELOPMENT_HOST_TITLE + ' - ' + uri.displayName;\n        } else {\n            document.title = HostedPluginInformer.DEVELOPMENT_HOST_TITLE;\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { OutputChannel, OutputChannelManager } from '@theia/output/lib/common/output-channel';\nimport { OutputContribution } from '@theia/output/lib/browser/output-contribution';\nimport { LogPart } from '@theia/plugin-ext/lib/common/types';\nimport { HostedPluginWatcher } from '@theia/plugin-ext/lib/hosted/browser/hosted-plugin-watcher';\n\n@injectable()\nexport class HostedPluginLogViewer {\n    public static OUTPUT_CHANNEL_NAME = 'hosted-instance-log';\n\n    @inject(HostedPluginWatcher)\n    protected readonly watcher: HostedPluginWatcher;\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n    @inject(OutputContribution)\n    protected readonly outputContribution: OutputContribution;\n\n    protected channel: OutputChannel;\n\n    showLogConsole(): void {\n        this.outputContribution.openView({ reveal: true }).then(view => {\n            view.activate();\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.channel = this.outputChannelManager.getChannel(HostedPluginLogViewer.OUTPUT_CHANNEL_NAME);\n        this.watcher.onLogMessageEvent(event => this.logMessageEventHandler(event));\n    }\n\n    protected logMessageEventHandler(event: LogPart): void {\n        this.channel.appendLine(event.data);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Path } from '@theia/core/lib/common/path';\nimport { MessageService, Command, Emitter, Event, UriSelection } from '@theia/core/lib/common';\nimport { LabelProvider, isNative, AbstractDialog } from '@theia/core/lib/browser';\nimport { WindowService } from '@theia/core/lib/browser/window/window-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { OpenFileDialogFactory, DirNode } from '@theia/filesystem/lib/browser';\nimport { HostedPluginServer } from '../common/plugin-dev-protocol';\nimport { DebugConfiguration as HostedDebugConfig } from '../common';\nimport { DebugSessionManager } from '@theia/debug/lib/browser/debug-session-manager';\nimport { HostedPluginPreferences } from './hosted-plugin-preferences';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\n\n/**\n * Commands to control Hosted plugin instances.\n */\nexport namespace HostedPluginCommands {\n    const HOSTED_PLUGIN_CATEGORY = 'Hosted Plugin';\n    export const START: Command = {\n        id: 'hosted-plugin:start',\n        category: HOSTED_PLUGIN_CATEGORY,\n        label: 'Start Instance'\n    };\n\n    export const DEBUG: Command = {\n        id: 'hosted-plugin:debug',\n        category: HOSTED_PLUGIN_CATEGORY,\n        label: 'Debug Instance'\n    };\n\n    export const STOP: Command = {\n        id: 'hosted-plugin:stop',\n        category: HOSTED_PLUGIN_CATEGORY,\n        label: 'Stop Instance'\n    };\n    export const RESTART: Command = {\n        id: 'hosted-plugin:restart',\n        category: HOSTED_PLUGIN_CATEGORY,\n        label: 'Restart Instance'\n    };\n    export const SELECT_PATH: Command = {\n        id: 'hosted-plugin:select-path',\n        category: HOSTED_PLUGIN_CATEGORY,\n        label: 'Select Path'\n    };\n}\n\n/**\n * Available states of hosted plugin instance.\n */\nexport enum HostedInstanceState {\n    STOPPED = 'stopped',\n    STARTING = 'starting',\n    RUNNING = 'running',\n    STOPPING = 'stopping',\n    FAILED = 'failed'\n}\n\nexport interface HostedInstanceData {\n    state: HostedInstanceState;\n    pluginLocation: URI;\n}\n\n/**\n * Responsible for UI to set up and control Hosted Plugin Instance.\n */\n@injectable()\nexport class HostedPluginManagerClient {\n    private openNewTabAskDialog: OpenHostedInstanceLinkDialog;\n\n    // path to the plugin on the file system\n    protected pluginLocation: URI | undefined;\n\n    // URL to the running plugin instance\n    protected pluginInstanceURL: string | undefined;\n\n    protected isDebug = false;\n\n    protected readonly stateChanged = new Emitter<HostedInstanceData>();\n\n    get onStateChanged(): Event<HostedInstanceData> {\n        return this.stateChanged.event;\n    }\n\n    @inject(HostedPluginServer)\n    protected readonly hostedPluginServer: HostedPluginServer;\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n    @inject(OpenFileDialogFactory)\n    protected readonly openFileDialogFactory: OpenFileDialogFactory;\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n    @inject(WindowService)\n    protected readonly windowService: WindowService;\n    @inject(FileService)\n    protected readonly fileService: FileService;\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(DebugSessionManager)\n    protected readonly debugSessionManager: DebugSessionManager;\n    @inject(HostedPluginPreferences)\n    protected readonly hostedPluginPreferences: HostedPluginPreferences;\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.openNewTabAskDialog = new OpenHostedInstanceLinkDialog(this.windowService);\n\n        // is needed for case when page is loaded when hosted instance is already running.\n        if (await this.hostedPluginServer.isHostedPluginInstanceRunning()) {\n            this.pluginLocation = new URI(await this.hostedPluginServer.getHostedPluginURI());\n        }\n    }\n\n    get lastPluginLocation(): string | undefined {\n        if (this.pluginLocation) {\n            return this.pluginLocation.toString();\n        }\n        return undefined;\n    }\n\n    async start(debugConfig?: HostedDebugConfig): Promise<void> {\n        if (await this.hostedPluginServer.isHostedPluginInstanceRunning()) {\n            this.messageService.warn('Hosted instance is already running.');\n            return;\n        }\n\n        if (!this.pluginLocation) {\n            await this.selectPluginPath();\n            if (!this.pluginLocation) {\n                // selection was cancelled\n                return;\n            }\n        }\n\n        try {\n            this.stateChanged.fire({ state: HostedInstanceState.STARTING, pluginLocation: this.pluginLocation });\n            this.messageService.info('Starting hosted instance server ...');\n\n            if (debugConfig) {\n                this.isDebug = true;\n                this.pluginInstanceURL = await this.hostedPluginServer.runDebugHostedPluginInstance(this.pluginLocation.toString(), debugConfig);\n            } else {\n                this.isDebug = false;\n                this.pluginInstanceURL = await this.hostedPluginServer.runHostedPluginInstance(this.pluginLocation.toString());\n            }\n            await this.openPluginWindow();\n\n            this.messageService.info('Hosted instance is running at: ' + this.pluginInstanceURL);\n            this.stateChanged.fire({ state: HostedInstanceState.RUNNING, pluginLocation: this.pluginLocation });\n        } catch (error) {\n            this.messageService.error('Failed to run hosted plugin instance: ' + this.getErrorMessage(error));\n            this.stateChanged.fire({ state: HostedInstanceState.FAILED, pluginLocation: this.pluginLocation });\n            this.stop();\n        }\n    }\n\n    async debug(): Promise<void> {\n        await this.start({ debugMode: this.hostedPluginPreferences['hosted-plugin.debugMode'] });\n        await this.startDebugSessionManager();\n    }\n\n    async startDebugSessionManager(): Promise<void> {\n        let outFiles: string[] | undefined = undefined;\n        if (this.pluginLocation && this.hostedPluginPreferences['hosted-plugin.launchOutFiles'].length > 0) {\n            const fsPath = await this.fileService.fsPath(this.pluginLocation);\n            if (fsPath) {\n                outFiles = this.hostedPluginPreferences['hosted-plugin.launchOutFiles'].map(outFile =>\n                    outFile.replace('${pluginPath}', new Path(fsPath).toString())\n                );\n            }\n        }\n        await this.debugSessionManager.start({\n            configuration: {\n                type: 'node',\n                request: 'attach',\n                timeout: 30000,\n                name: 'Hosted Plugin',\n                smartStep: true,\n                sourceMaps: !!outFiles,\n                outFiles\n            }\n        });\n    }\n\n    async stop(checkRunning: boolean = true): Promise<void> {\n        if (checkRunning && !await this.hostedPluginServer.isHostedPluginInstanceRunning()) {\n            this.messageService.warn('Hosted instance is not running.');\n            return;\n        }\n        try {\n            this.stateChanged.fire({ state: HostedInstanceState.STOPPING, pluginLocation: this.pluginLocation! });\n            await this.hostedPluginServer.terminateHostedPluginInstance();\n            this.messageService.info((this.pluginInstanceURL ? this.pluginInstanceURL : 'The instance') + ' has been terminated.');\n            this.stateChanged.fire({ state: HostedInstanceState.STOPPED, pluginLocation: this.pluginLocation! });\n        } catch (error) {\n            this.messageService.error(this.getErrorMessage(error));\n        }\n    }\n\n    async restart(): Promise<void> {\n        if (await this.hostedPluginServer.isHostedPluginInstanceRunning()) {\n            await this.stop(false);\n\n            this.messageService.info('Starting hosted instance server ...');\n\n            // It takes some time before OS released all resources e.g. port.\n            // Keep trying to run hosted instance with delay.\n            this.stateChanged.fire({ state: HostedInstanceState.STARTING, pluginLocation: this.pluginLocation! });\n            let lastError;\n            for (let tries = 0; tries < 15; tries++) {\n                try {\n                    if (this.isDebug) {\n                        this.pluginInstanceURL = await this.hostedPluginServer.runDebugHostedPluginInstance(this.pluginLocation!.toString(), {\n                            debugMode: this.hostedPluginPreferences['hosted-plugin.debugMode']\n                        });\n                        await this.startDebugSessionManager();\n                    } else {\n                        this.pluginInstanceURL = await this.hostedPluginServer.runHostedPluginInstance(this.pluginLocation!.toString());\n                    }\n                    await this.openPluginWindow();\n                    this.messageService.info('Hosted instance is running at: ' + this.pluginInstanceURL);\n                    this.stateChanged.fire({\n                        state: HostedInstanceState.RUNNING,\n                        pluginLocation: this.pluginLocation!\n                    });\n                    return;\n                } catch (error) {\n                    lastError = error;\n                    await new Promise(resolve => setTimeout(resolve, 500));\n                }\n            }\n            this.messageService.error('Failed to run hosted plugin instance: ' + this.getErrorMessage(lastError));\n            this.stateChanged.fire({ state: HostedInstanceState.FAILED, pluginLocation: this.pluginLocation! });\n            this.stop();\n        } else {\n            this.messageService.warn('Hosted Plugin instance was not running.');\n            this.start();\n        }\n    }\n\n    /**\n     * Creates directory choose dialog and set selected folder into pluginLocation field.\n     */\n    async selectPluginPath(): Promise<void> {\n        const workspaceFolder = (await this.workspaceService.roots)[0] || await this.fileService.resolve(new URI(await this.environments.getHomeDirUri()));\n        if (!workspaceFolder) {\n            throw new Error('Unable to find the root');\n        }\n\n        const rootNode = DirNode.createRoot(workspaceFolder);\n\n        const dialog = this.openFileDialogFactory({\n            title: HostedPluginCommands.SELECT_PATH.label!,\n            openLabel: 'Select',\n            canSelectFiles: false,\n            canSelectFolders: true,\n            canSelectMany: false\n        });\n        dialog.model.navigateTo(rootNode);\n        const result = await dialog.open();\n\n        if (UriSelection.is(result)) {\n            if (await this.hostedPluginServer.isPluginValid(result.uri.toString())) {\n                this.pluginLocation = result.uri;\n                this.messageService.info('Plugin folder is set to: ' + this.labelProvider.getLongName(result.uri));\n            } else {\n                this.messageService.error('Specified folder does not contain valid plugin.');\n            }\n        }\n    }\n\n    /**\n     * Opens window with URL to the running plugin instance.\n     */\n    protected async openPluginWindow(): Promise<void> {\n        // do nothing for electron browser\n        if (isNative) {\n            return;\n        }\n\n        if (this.pluginInstanceURL) {\n            try {\n                this.windowService.openNewWindow(this.pluginInstanceURL);\n            } catch (err) {\n                // browser blocked opening of a new tab\n                this.openNewTabAskDialog.showOpenNewTabAskDialog(this.pluginInstanceURL);\n            }\n        }\n    }\n\n    protected getErrorMessage(error: Error): string {\n        return error.message.substring(error.message.indexOf(':') + 1);\n    }\n}\n\nclass OpenHostedInstanceLinkDialog extends AbstractDialog<string> {\n    protected readonly windowService: WindowService;\n    protected readonly openButton: HTMLButtonElement;\n    protected readonly messageNode: HTMLDivElement;\n    protected readonly linkNode: HTMLAnchorElement;\n    value: string;\n\n    constructor(windowService: WindowService) {\n        super({\n            title: 'Your browser prevented opening of a new tab'\n        });\n        this.windowService = windowService;\n\n        this.linkNode = document.createElement('a');\n        this.linkNode.target = '_blank';\n        this.linkNode.setAttribute('style', 'color: var(--theia-editorWidget-foreground);');\n        this.contentNode.appendChild(this.linkNode);\n\n        const messageNode = document.createElement('div');\n        messageNode.innerText = 'Hosted instance is started at: ';\n        messageNode.appendChild(this.linkNode);\n        this.contentNode.appendChild(messageNode);\n\n        this.appendCloseButton();\n        this.openButton = this.appendAcceptButton('Open');\n    }\n\n    showOpenNewTabAskDialog(uri: string): void {\n        this.value = uri;\n\n        this.linkNode.innerHTML = uri;\n        this.linkNode.href = uri;\n        this.openButton.onclick = () => {\n            this.windowService.openNewWindow(uri);\n        };\n\n        this.open();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\n\nexport const HostedPluginConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    properties: {\n        'hosted-plugin.watchMode': {\n            type: 'boolean',\n            description: 'Run watcher on plugin under development',\n            default: true\n        },\n        'hosted-plugin.debugMode': {\n            type: 'string',\n            description: 'Using inspect or inspect-brk for Node.js debug',\n            default: 'inspect',\n            enum: ['inspect', 'inspect-brk']\n        },\n        'hosted-plugin.launchOutFiles': {\n            type: 'array',\n            items: {\n                type: 'string'\n            },\n            description: 'Array of glob patterns for locating generated JavaScript files (`${pluginPath}` will be replaced by plugin actual path).',\n            default: ['${pluginPath}/out/**/*.js']\n        }\n    }\n};\n\nexport interface HostedPluginConfiguration {\n    'hosted-plugin.watchMode': boolean;\n    'hosted-plugin.debugMode': string;\n    'hosted-plugin.launchOutFiles': string[];\n}\n\nexport const HostedPluginPreferences = Symbol('HostedPluginPreferences');\nexport type HostedPluginPreferences = PreferenceProxy<HostedPluginConfiguration>;\n\nexport function createNavigatorPreferences(preferences: PreferenceService): HostedPluginPreferences {\n    return createPreferenceProxy(preferences, HostedPluginConfigSchema);\n}\n\nexport function bindHostedPluginPreferences(bind: interfaces.Bind): void {\n    bind(HostedPluginPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createNavigatorPreferences(preferences);\n    });\n    bind(PreferenceContribution).toConstantValue({ schema: HostedPluginConfigSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { HostedPluginLogViewer } from './hosted-plugin-log-viewer';\nimport { HostedPluginManagerClient } from './hosted-plugin-manager-client';\nimport { HostedPluginInformer } from './hosted-plugin-informer';\nimport { bindHostedPluginPreferences } from './hosted-plugin-preferences';\nimport { HostedPluginController } from './hosted-plugin-controller';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { FrontendApplicationContribution, WebSocketConnectionProvider } from '@theia/core/lib/browser';\nimport { HostedPluginFrontendContribution } from './hosted-plugin-frontend-contribution';\nimport { CommandContribution } from '@theia/core/lib/common/command';\nimport { HostedPluginServer, hostedServicePath } from '../common/plugin-dev-protocol';\nimport { HostedPluginWatcher } from '@theia/plugin-ext/lib/hosted/browser/hosted-plugin-watcher';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bindHostedPluginPreferences(bind);\n    bind(HostedPluginLogViewer).toSelf().inSingletonScope();\n    bind(HostedPluginManagerClient).toSelf().inSingletonScope();\n\n    bind(FrontendApplicationContribution).to(HostedPluginInformer).inSingletonScope();\n    bind(FrontendApplicationContribution).to(HostedPluginController).inSingletonScope();\n\n    bind(HostedPluginFrontendContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(HostedPluginFrontendContribution);\n\n    bind(HostedPluginServer).toDynamicValue(ctx => {\n        const connection = ctx.container.get(WebSocketConnectionProvider);\n        const hostedWatcher = ctx.container.get(HostedPluginWatcher);\n        return connection.createProxy<HostedPluginServer>(hostedServicePath, hostedWatcher.getHostedPluginClient());\n    }).inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { PluginMetadata } from '@theia/plugin-ext/lib/common/plugin-protocol';\n\nexport const hostedServicePath = '/services/plugin-dev';\nexport const HostedPluginServer = Symbol('HostedPluginServer');\nexport interface HostedPluginServer extends JsonRpcServer<HostedPluginClient> {\n    getHostedPlugin(): Promise<PluginMetadata | undefined>;\n    runHostedPluginInstance(uri: string): Promise<string>;\n    runDebugHostedPluginInstance(uri: string, debugConfig: DebugConfiguration): Promise<string>;\n    terminateHostedPluginInstance(): Promise<void>;\n    isHostedPluginInstanceRunning(): Promise<boolean>;\n    getHostedPluginInstanceURI(): Promise<string>;\n    getHostedPluginURI(): Promise<string>;\n\n    runWatchCompilation(uri: string): Promise<void>;\n    stopWatchCompilation(uri: string): Promise<void>;\n    isWatchCompilationRunning(uri: string): Promise<boolean>;\n\n    isPluginValid(uri: string): Promise<boolean>;\n}\n\nexport interface HostedPluginClient {\n}\n\nexport interface DebugConfiguration {\n    port?: number;\n    debugMode?: string;\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { HostedPluginClient } from '../../common/plugin-protocol';\nimport { LogPart } from '../../common/types';\n\n@injectable()\nexport class HostedPluginWatcher {\n    private onPostMessage = new Emitter<{ pluginHostId: string, message: string }>();\n    private onLogMessage = new Emitter<LogPart>();\n\n    private readonly onDidDeployEmitter = new Emitter<void>();\n    readonly onDidDeploy = this.onDidDeployEmitter.event;\n\n    getHostedPluginClient(): HostedPluginClient {\n        const messageEmitter = this.onPostMessage;\n        const logEmitter = this.onLogMessage;\n        return {\n            postMessage(pluginHostId, message: string): Promise<void> {\n                messageEmitter.fire({ pluginHostId, message });\n                return Promise.resolve();\n            },\n            log(logPart: LogPart): Promise<void> {\n                logEmitter.fire(logPart);\n                return Promise.resolve();\n            },\n            onDidDeploy: () => this.onDidDeployEmitter.fire(undefined)\n        };\n    }\n\n    get onPostMessageEvent(): Event<{ pluginHostId: string, message: string }> {\n        return this.onPostMessage.event;\n    }\n\n    get onLogMessageEvent(): Event<LogPart> {\n        return this.onLogMessage.event;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\n"],"sourceRoot":""}