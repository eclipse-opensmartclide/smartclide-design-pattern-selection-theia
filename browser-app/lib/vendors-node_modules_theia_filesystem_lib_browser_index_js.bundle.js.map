{"version":3,"sources":["webpack://browser-app/../node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-container.ts","webpack://browser-app/../node_modules/@theia/filesystem/src/browser/file-dialog/index.ts","webpack://browser-app/../node_modules/@theia/filesystem/src/browser/file-resource.ts","webpack://browser-app/../node_modules/@theia/filesystem/src/browser/filesystem-watcher.ts","webpack://browser-app/../node_modules/@theia/filesystem/src/browser/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;AAGlF,yHAAuF;AACvF,gIAAsF;AACtF,2IAAyG;AACzG,6JAAsD;AACtD,gKAAwD;AACxD,0JAAoD;AAEpD,SAAgB,yBAAyB,CAAC,MAA4B;IAClE,MAAM,KAAK,GAAG,mCAAuB,CAAC,MAAM,CAAC,CAAC;IAE9C,KAAK,CAAC,MAAM,CAAC,yBAAa,CAAC,CAAC;IAC5B,KAAK,CAAC,IAAI,CAAC,mCAAe,CAAC,CAAC,MAAM,EAAE,CAAC;IACrC,KAAK,CAAC,MAAM,CAAC,mBAAS,CAAC,CAAC,SAAS,CAAC,mCAAe,CAAC,CAAC;IAEnD,KAAK,CAAC,MAAM,CAAC,0BAAc,CAAC,CAAC;IAC7B,KAAK,CAAC,IAAI,CAAC,qCAAgB,CAAC,CAAC,MAAM,EAAE,CAAC;IAEtC,KAAK,CAAC,IAAI,CAAC,iCAAc,CAAC,CAAC,MAAM,EAAE,CAAC;IACpC,KAAK,CAAC,MAAM,CAAC,cAAI,CAAC,CAAC,SAAS,CAAC,iCAAc,CAAC,CAAC;IAE7C,OAAO,KAAK,CAAC;AACjB,CAAC;AAdD,8DAcC;AAED,SAAgB,6BAA6B,CAAC,MAA4B,EAAE,KAA0B;IAClG,MAAM,SAAS,GAAG,yBAAyB,CAAC,MAAM,CAAC,CAAC;IACpD,SAAS,CAAC,MAAM,CAAC,mBAAS,CAAC,CAAC,eAAe,iCACpC,0BAAgB,KACnB,WAAW,EAAE,KAAK,CAAC,aAAa,EAChC,MAAM,EAAE,IAAI,IACd,CAAC;IAEH,SAAS,CAAC,IAAI,CAAC,iCAAmB,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC3D,SAAS,CAAC,IAAI,CAAC,4BAAc,CAAC,CAAC,MAAM,EAAE,CAAC;IAExC,OAAO,SAAS,CAAC;AACrB,CAAC;AAZD,sEAYC;AAED,SAAgB,6BAA6B,CAAC,MAA4B,EAAE,KAA0B;IAClG,MAAM,SAAS,GAAG,yBAAyB,CAAC,MAAM,CAAC,CAAC;IACpD,SAAS,CAAC,MAAM,CAAC,mBAAS,CAAC,CAAC,eAAe,iCACpC,0BAAgB,KACnB,WAAW,EAAE,KAAK,EAClB,MAAM,EAAE,IAAI,IACd,CAAC;IAEH,SAAS,CAAC,IAAI,CAAC,iCAAmB,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC3D,SAAS,CAAC,IAAI,CAAC,4BAAc,CAAC,CAAC,MAAM,EAAE,CAAC;IAExC,OAAO,SAAS,CAAC;AACrB,CAAC;AAZD,sEAYC;;;;;;;;;;;;;AClED;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,4IAA8B;AAC9B,gKAAwC;AACxC,wLAAoD;AACpD,4JAAsC;;;;;;;;;;;;;ACnBtC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,+HAAkE;AAClE,oIAAkI;AAClI,0IAAyE;AACzE,2HAA8D;AAG9D,oHAA2K;AAC3K,kIAA8F;AAC9F,mIAAgE;AAChE,wJAAuE;AACvE,gKAAoE;AAOpE,IAAiB,mBAAmB,CAInC;AAJD,WAAiB,mBAAmB;IAChC,SAAgB,EAAE,CAAC,OAAoC;QACnD,OAAO,CAAC,CAAC,OAAO,IAAI,UAAU,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,CAAC;IACzF,CAAC;IAFe,sBAAE,KAEjB;AACL,CAAC,EAJgB,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAInC;AAOD,MAAa,YAAY;IAiBrB,YACa,GAAQ,EACE,WAAwB,EACxB,OAA4B;QAFtC,QAAG,GAAH,GAAG,CAAK;QACE,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAqB;QAlBzC,mBAAc,GAAG,IAAI,CAAC;QAGb,cAAS,GAAG,IAAI,iCAAoB,EAAE,CAAC;QACvC,+BAA0B,GAAG,IAAI,eAAO,EAAQ,CAAC;QAC3D,wBAAmB,GAAgB,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;QA+KxE,yBAAoB,GAAmC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE;YACxF,MAAM,OAAO,GAAG,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,KAAI,IAAI,CAAC,QAAQ,CAAC;YAClD,MAAM,OAAO,GAAG,mBAAmB,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;YACtE,IAAI,CAAC,OAAO,EAAE;gBACV,MAAM,wBAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;aAC/F;YACD,MAAM,IAAI,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC;YAC3B,IAAI;gBACA,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE;oBAC1D,YAAY,EAAE,OAAO,CAAC,QAAQ;oBAC9B,QAAQ,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ;oBAC3B,iBAAiB,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,iBAAiB;oBAC7C,IAAI;oBACJ,KAAK,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,QAAQ,GAAG;oBACZ,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;iBAC1B,CAAC;aACL;YAAC,OAAO,CAAC,EAAE;gBACR,IAAI,CAAC,YAAY,0BAAkB,IAAI,CAAC,CAAC,mBAAmB,2BAAuC,EAAE;oBACjG,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;oBAC7B,MAAM,wBAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;iBAC7E;gBACD,IAAI,CAAC,YAAY,0BAAkB,IAAI,CAAC,CAAC,mBAAmB,gCAA4C,EAAE;oBACtG,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;oBAC7B,MAAM,wBAAa,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;iBAC9E;gBACD,MAAM,CAAC,CAAC;aACX;QACL,CAAC,CAAC;QA/LE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC1D,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC1B,IAAI,CAAC,IAAI,EAAE,CAAC;aACf;QACL,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE;YACvD,IAAI,CAAC,CAAC,CAAC,WAAW,gBAAsB,IAAI,CAAC,CAAC,WAAW,cAAoB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACpH,IAAI,CAAC,IAAI,EAAE,CAAC;aACf;QACL,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI;YACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACzD;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACpB;QACD,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,yCAAyC,CAAC,CAAC,CAAC,EAAE;YAC/E,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBAC9B,IAAI,CAAC,0BAA0B,EAAE,CAAC;aACrC;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAlCD,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACD,IAAI,QAAQ;;QACR,aAAO,IAAI,CAAC,QAAQ,0CAAE,QAAQ,CAAC;IACnC,CAAC;IA+BD,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,OAA+B;;QAC9C,IAAI;YACA,MAAM,QAAQ,GAAG,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,YAAI,IAAI,CAAC,OAAO,0CAAE,QAAQ,EAAC;YAC7D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC/C,QAAQ;gBACR,IAAI,EAAE,qBAAa;gBACnB,cAAc,EAAE,IAAI,CAAC,cAAc;gBACnC,MAAM,EAAE,IAAI,CAAC,MAAM;aACtB,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG;gBACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;aACpB,CAAC;YACF,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAAC,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,YAAY,qCAAsB,IAAI,CAAC,CAAC,uBAAuB,2BAA2C,EAAE;gBAC7G,IAAI,MAAM,IAAI,CAAC,gBAAgB,CAAC,iEAAiE,CAAC,EAAE;oBAChG,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;iBACrC;aACJ;iBAAM,IAAI,CAAC,YAAY,0BAAkB,IAAI,CAAC,CAAC,mBAAmB,2BAAuC,EAAE;gBACxG,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;gBACjF,MAAM,WAAW,GAAG,iDAAwB,GAAG,IAAI,GAAG,IAAI,CAAC;gBAC3D,IAAI,WAAI,CAAC,MAAM,0CAAE,IAAI,MAAK,WAAW,IAAI,MAAM,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,kBAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAClI,IAAI,CAAC,MAAM,GAAG;wBACV,IAAI,EAAE,WAAW;qBACpB,CAAC;oBACF,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;iBACrC;aACJ;iBAAM,IAAI,CAAC,YAAY,0BAAkB,IAAI,CAAC,CAAC,mBAAmB,2BAAuC,EAAE;gBACxG,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;gBAC1B,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;gBAC7B,MAAM,wBAAa,CAAC,QAAQ,CAAC;oBACzB,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE;wBACF,GAAG,EAAE,IAAI,CAAC,GAAG;qBAChB;iBACJ,CAAC,CAAC;aACN;YACD,MAAM,CAAC,CAAC;SACX;IACL,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAA+B;;QAC5C,IAAI;YACA,MAAM,QAAQ,GAAG,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,YAAI,IAAI,CAAC,OAAO,0CAAE,QAAQ,EAAC;YAC7D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE;gBACrD,QAAQ;gBACR,IAAI,EAAE,qBAAa;gBACnB,cAAc,EAAE,IAAI,CAAC,cAAc;gBACnC,MAAM,EAAE,IAAI,CAAC,MAAM;aACtB,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG;gBACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;aACpB,CAAC;YACF,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;QAAC,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,YAAY,qCAAsB,IAAI,CAAC,CAAC,uBAAuB,2BAA2C,EAAE;gBAC7G,IAAI,MAAM,IAAI,CAAC,gBAAgB,CAAC,iEAAiE,CAAC,EAAE;oBAChG,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACnC;aACJ;iBAAM,IAAI,CAAC,YAAY,0BAAkB,IAAI,CAAC,CAAC,mBAAmB,2BAAuC,EAAE;gBACxG,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;gBACjF,MAAM,WAAW,GAAG,iDAAwB,GAAG,IAAI,GAAG,IAAI,CAAC;gBAC3D,IAAI,WAAI,CAAC,MAAM,0CAAE,IAAI,MAAK,WAAW,IAAI,MAAM,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,kBAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAClI,IAAI,CAAC,MAAM,GAAG;wBACV,IAAI,EAAE,WAAW;qBACpB,CAAC;oBACF,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACnC;aACJ;iBAAM,IAAI,CAAC,YAAY,0BAAkB,IAAI,CAAC,CAAC,mBAAmB,2BAAuC,EAAE;gBACxG,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;gBAC1B,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;gBAC7B,MAAM,wBAAa,CAAC,QAAQ,CAAC;oBACzB,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE;wBACF,GAAG,EAAE,IAAI,CAAC,GAAG;qBAChB;iBACJ,CAAC,CAAC;aACN;YACD,MAAM,CAAC,CAAC;SACX;IACL,CAAC;IAED,YAAY,CAAC,OAAe,EAAE,OAA6B;QACvD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,UAAU,CAAC,OAAyB,EAAE,OAA6B;QAC/D,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IAES,KAAK,CAAC,OAAO,CAAC,OAAkC,EAAE,OAA6B;QACrF,MAAM,OAAO,GAAG,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,KAAI,IAAI,CAAC,QAAQ,CAAC;QAClD,MAAM,OAAO,GAAG,mBAAmB,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;QACtE,MAAM,IAAI,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC;QAC3B,IAAI;YACA,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE;gBACzD,QAAQ,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ;gBAC3B,iBAAiB,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,iBAAiB;gBAC7C,IAAI;gBACJ,KAAK,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK;aACxB,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG;gBACZ,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B,CAAC;SACL;QAAC,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,YAAY,0BAAkB,IAAI,CAAC,CAAC,mBAAmB,gCAA4C,EAAE;gBACtG,IAAI,IAAI,KAAK,qBAAa,IAAI,MAAM,IAAI,CAAC,eAAe,EAAE,EAAE;oBACxD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,kCAAO,OAAO,KAAE,OAAO,EAAE,EAAE,IAAI,kCAAO,OAAO,KAAE,IAAI,EAAE,qBAAa,GAAE,EAAE,IAAG,CAAC;iBACxG;gBACD,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;gBAC7B,MAAM,wBAAa,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;aAC9E;YACD,MAAM,CAAC,CAAC;SACX;IACL,CAAC;IAGS,0BAA0B;QAChC,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,wBAAwC,EAAE;YACjF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC;SACvD;aAAM;YACH,OAAO,IAAI,CAAC,kBAAkB,CAAC;SAClC;IACL,CAAC;IAkCD,KAAK,CAAC,aAAa;QACf,kBAAkB;QAClB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;QACnF,OAAO,OAAO,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAES,KAAK,CAAC,IAAI;QAChB,IAAI,MAAM,IAAI,CAAC,QAAQ,EAAE,EAAE;YACvB,OAAO;SACV;QACD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;IACS,KAAK,CAAC,QAAQ;QACpB,IAAI;YACA,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;YACjF,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;SAC7D;QAAC,WAAM;YACJ,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;SACxB;IACL,CAAC;IAES,KAAK,CAAC,eAAe;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;IAC1C,CAAC;IAES,KAAK,CAAC,gBAAgB,CAAC,KAAa;QAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;CAEJ;AApPD,oCAoPC;AAGD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAQ7B,KAAK,CAAC,OAAO,CAAC,GAAQ;QAClB,IAAI,IAAI,CAAC;QACT,IAAI;YACA,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAC9C;QAAC,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,CAAC,CAAC,YAAY,0BAAkB,IAAI,CAAC,CAAC,mBAAmB,2BAAuC,CAAC,EAAE;gBACpG,MAAM,CAAC,CAAC;aACX;SACJ;QACD,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,gCAAgC,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;SAC3F;QACD,OAAO,IAAI,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE;YAC3C,eAAe,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;YAChD,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,KAAK,CAAC;SAC/D,CAAC,CAAC;IACP,CAAC;IAES,KAAK,CAAC,eAAe,CAAC,GAAQ;QACpC,MAAM,MAAM,GAAG,IAAI,uBAAa,CAAC;YAC7B,KAAK,EAAE,aAAa,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,wCAAwC;YAC3F,GAAG,EAAE,iDAAiD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,uBAAuB;YAChH,EAAE,EAAE,KAAK;YACT,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;QACH,OAAO,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;IAES,KAAK,CAAC,gBAAgB,CAAC,GAAQ,EAAE,KAAa;QACpD,MAAM,MAAM,GAAG,IAAI,uBAAa,CAAC;YAC7B,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,6FAA6F,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW;YAChJ,EAAE,EAAE,KAAK;YACT,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;QACH,OAAO,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;CAEJ;AA3CG;IADC,kBAAM,CAAC,0BAAW,CAAC;8BACY,0BAAW;yDAAC;AAG5C;IADC,kBAAM,CAAC,8BAAa,CAAC;8BACY,8BAAa;2DAAC;AANvC,oBAAoB;IADhC,sBAAU,EAAE;GACA,oBAAoB,CA8ChC;AA9CY,oDAAoB;;;;;;;;;;;;;ACnSjC;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,+HAAiF;AACjF,0IAAqF;AACrF,2HAAuE;AAGvE,kIAA6C;AAU7C,IAAiB,UAAU,CAgB1B;AAhBD,WAAiB,UAAU;IACvB,SAAgB,SAAS,CAAC,MAAkB,EAAE,GAAQ;QAClD,OAAO,MAAM,CAAC,IAAI,oBAA2B,IAAI,GAAG,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC9F,CAAC;IAFe,oBAAS,YAExB;IACD,SAAgB,OAAO,CAAC,MAAkB,EAAE,GAAQ;QAChD,OAAO,MAAM,CAAC,IAAI,kBAAyB,IAAI,GAAG,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC5F,CAAC;IAFe,kBAAO,UAEtB;IACD,SAAgB,SAAS,CAAC,MAAkB,EAAE,GAAQ;QAClD,OAAO,MAAM,CAAC,IAAI,oBAA2B,IAAI,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IACrF,CAAC;IAFe,oBAAS,YAExB;IACD,SAAgB,UAAU,CAAC,MAAkB,EAAE,GAAQ;QACnD,OAAO,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC9E,CAAC;IAFe,qBAAU,aAEzB;IACD,SAAgB,SAAS,CAAC,MAAkB,EAAE,GAAQ;QAClD,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC/E,CAAC;IAFe,oBAAS,YAExB;AACL,CAAC,EAhBgB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAgB1B;AAMD,IAAiB,eAAe,CAgB/B;AAhBD,WAAiB,eAAe;IAC5B,SAAgB,SAAS,CAAC,KAAsB,EAAE,GAAQ;QACtD,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IACnE,CAAC;IAFe,yBAAS,YAExB;IACD,SAAgB,OAAO,CAAC,KAAsB,EAAE,GAAQ;QACpD,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IACjE,CAAC;IAFe,uBAAO,UAEtB;IACD,SAAgB,SAAS,CAAC,KAAsB,EAAE,GAAQ;QACtD,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IACnE,CAAC;IAFe,yBAAS,YAExB;IACD,SAAgB,UAAU,CAAC,KAAsB,EAAE,GAAQ;QACvD,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IACpE,CAAC;IAFe,0BAAU,aAEzB;IACD,SAAgB,SAAS,CAAC,KAAsB,EAAE,GAAQ;QACtD,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IAC7F,CAAC;IAFe,yBAAS,YAExB;AACL,CAAC,EAhBgB,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAgB/B;AASD,IAAiB,aAAa,CAI7B;AAJD,WAAiB,aAAa;IAC1B,SAAgB,QAAQ,CAAC,EAAE,SAAS,EAAE,SAAS,EAAiB;QAC5D,OAAO,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvE,CAAC;IAFe,sBAAQ,WAEvB;AACL,CAAC,EAJgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAI7B;AASD,MAAa,oBAAoB;IAAjC;QAEuB,kBAAa,GAAG,IAAI,eAAO,EAAK,CAAC;QAC3C,WAAM,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAExB,qBAAgB,GAAG,IAAI,eAAO,EAAK,CAAC;QAC9C,cAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAE9B,iBAAY,GAAG,IAAI,eAAO,EAAK,CAAC;QAC1C,UAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAEtB,cAAS,GAAG,IAAI,iCAAoB,CACnD,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,YAAY,CACpB,CAAC;IAeN,CAAC;IAbG,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,KAA6C;QACxD,MAAM,sBAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,MAAe,EAAE,KAA6C;QACxE,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;QACxE,MAAM,sBAAc,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACnD,CAAC;CAEJ;AA9BD,oDA8BC;AAED;;;;;;;;;GASG;AAEH,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAA9B;QAEuB,cAAS,GAAG,IAAI,iCAAoB,EAAE,CAAC;QACvC,iBAAY,GAAG,IAAI,iCAAoB,EAAE,CAAC;QAE1C,yBAAoB,GAAG,IAAI,eAAO,EAAmB,CAAC;QACzE;;WAEG;QACM,mBAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;QAEvC,sBAAiB,GAAG,IAAI,oBAAoB,EAAa,CAAC;QAC7E;;WAEG;QACM,iBAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;QACtD;;WAEG;QACM,oBAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;QAC5D;;;;WAIG;QACM,gBAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QAEjC,sBAAiB,GAAG,IAAI,oBAAoB,EAAa,CAAC;QAC7E;;WAEG;QACM,iBAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;QACtD;;WAEG;QACM,oBAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;QAC5D;;;;WAIG;QACM,gBAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QAEjC,oBAAe,GAAG,IAAI,oBAAoB,EAAiB,CAAC;QAC/E;;WAEG;QACM,eAAU,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;QAClD;;WAEG;QACM,kBAAa,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;QACxD;;;;WAIG;QACM,cAAS,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;IAyDpD,CAAC;IAnDa,IAAI;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAE1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,KAAK,CAAC,EAAE;YAChE,IAAI,KAAK,CAAC,SAAS,mBAAyB,EAAE;gBAC1C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAC1D;iBAAM,IAAI,KAAK,CAAC,SAAS,mBAAyB,EAAE;gBACjD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAC1D;iBAAM,IAAI,KAAK,CAAC,SAAS,iBAAuB,IAAI,KAAK,CAAC,MAAM,EAAE;gBAC/D,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aACvF;QACL,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,KAAK,CAAC,EAAE;YAChE,IAAI,KAAK,CAAC,SAAS,mBAAyB,EAAE;gBAC1C,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAC/D;iBAAM,IAAI,KAAK,CAAC,SAAS,mBAAyB,EAAE;gBACjD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAC/D;iBAAM,IAAI,KAAK,CAAC,SAAS,iBAAuB,IAAI,KAAK,CAAC,MAAM,EAAE;gBAC/D,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAC5F;QACL,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE;YAC/D,IAAI,KAAK,CAAC,SAAS,mBAAyB,EAAE;gBAC1C,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAChE;iBAAM,IAAI,KAAK,CAAC,SAAS,mBAAyB,EAAE;gBACjD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAChE;iBAAM,IAAI,KAAK,CAAC,SAAS,iBAAuB,IAAI,KAAK,CAAC,MAAM,EAAE;gBAC/D,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAC7F;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;OAEG;IACH,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,gBAAgB,CAAC,GAAQ;QAC3B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;CAEJ;AAtDG;IADC,kBAAM,CAAC,0BAAW,CAAC;8BACY,0BAAW;sDAAC;AAG5C;IADC,yBAAa,EAAE;;;;6CAiCf;AA/FQ,iBAAiB;IAD7B,sBAAU,EAAE;GACA,iBAAiB,CAkH7B;AAlHY,8CAAiB;;;;;;;;;;;;;ACtI9B;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;AAElF,gIAA2B;AAC3B,kIAA4B;AAC5B,sIAA8B;AAC9B,sJAAyC;AACzC,8IAAqC;AACrC,oIAAgC","file":"vendors-node_modules_theia_filesystem_lib_browser_index_js.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { Tree, TreeModel, TreeProps, defaultTreeProps } from '@theia/core/lib/browser';\nimport { createFileTreeContainer, FileTreeModel, FileTreeWidget } from '../file-tree';\nimport { OpenFileDialog, OpenFileDialogProps, SaveFileDialog, SaveFileDialogProps } from './file-dialog';\nimport { FileDialogModel } from './file-dialog-model';\nimport { FileDialogWidget } from './file-dialog-widget';\nimport { FileDialogTree } from './file-dialog-tree';\n\nexport function createFileDialogContainer(parent: interfaces.Container): Container {\n    const child = createFileTreeContainer(parent);\n\n    child.unbind(FileTreeModel);\n    child.bind(FileDialogModel).toSelf();\n    child.rebind(TreeModel).toService(FileDialogModel);\n\n    child.unbind(FileTreeWidget);\n    child.bind(FileDialogWidget).toSelf();\n\n    child.bind(FileDialogTree).toSelf();\n    child.rebind(Tree).toService(FileDialogTree);\n\n    return child;\n}\n\nexport function createOpenFileDialogContainer(parent: interfaces.Container, props: OpenFileDialogProps): Container {\n    const container = createFileDialogContainer(parent);\n    container.rebind(TreeProps).toConstantValue({\n        ...defaultTreeProps,\n        multiSelect: props.canSelectMany,\n        search: true\n    });\n\n    container.bind(OpenFileDialogProps).toConstantValue(props);\n    container.bind(OpenFileDialog).toSelf();\n\n    return container;\n}\n\nexport function createSaveFileDialogContainer(parent: interfaces.Container, props: SaveFileDialogProps): Container {\n    const container = createFileDialogContainer(parent);\n    container.rebind(TreeProps).toConstantValue({\n        ...defaultTreeProps,\n        multiSelect: false,\n        search: true\n    });\n\n    container.bind(SaveFileDialogProps).toConstantValue(props);\n    container.bind(SaveFileDialog).toSelf();\n\n    return container;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './file-dialog';\nexport * from './file-dialog-container';\nexport * from './file-dialog-tree-filters-renderer';\nexport * from './file-dialog-service';\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { Resource, ResourceVersion, ResourceResolver, ResourceError, ResourceSaveOptions } from '@theia/core/lib/common/resource';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { Readable, ReadableStream } from '@theia/core/lib/common/stream';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileOperation, FileOperationError, FileOperationResult, ETAG_DISABLED, FileSystemProviderCapabilities, FileReadStreamOptions, BinarySize } from '../common/files';\nimport { FileService, TextFileOperationError, TextFileOperationResult } from './file-service';\nimport { ConfirmDialog } from '@theia/core/lib/browser/dialogs';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { GENERAL_MAX_FILE_SIZE_MB } from './filesystem-preferences';\n\nexport interface FileResourceVersion extends ResourceVersion {\n    readonly encoding: string;\n    readonly mtime: number;\n    readonly etag: string;\n}\nexport namespace FileResourceVersion {\n    export function is(version: ResourceVersion | undefined): version is FileResourceVersion {\n        return !!version && 'encoding' in version && 'mtime' in version && 'etag' in version;\n    }\n}\n\nexport interface FileResourceOptions {\n    shouldOverwrite: () => Promise<boolean>\n    shouldOpenAsText: (error: string) => Promise<boolean>\n}\n\nexport class FileResource implements Resource {\n\n    protected acceptTextOnly = true;\n    protected limits: FileReadStreamOptions['limits'];\n\n    protected readonly toDispose = new DisposableCollection();\n    protected readonly onDidChangeContentsEmitter = new Emitter<void>();\n    readonly onDidChangeContents: Event<void> = this.onDidChangeContentsEmitter.event;\n\n    protected _version: FileResourceVersion | undefined;\n    get version(): FileResourceVersion | undefined {\n        return this._version;\n    }\n    get encoding(): string | undefined {\n        return this._version?.encoding;\n    }\n\n    constructor(\n        readonly uri: URI,\n        protected readonly fileService: FileService,\n        protected readonly options: FileResourceOptions\n    ) {\n        this.toDispose.push(this.onDidChangeContentsEmitter);\n        this.toDispose.push(this.fileService.onDidFilesChange(event => {\n            if (event.contains(this.uri)) {\n                this.sync();\n            }\n        }));\n        this.toDispose.push(this.fileService.onDidRunOperation(e => {\n            if ((e.isOperation(FileOperation.DELETE) || e.isOperation(FileOperation.MOVE)) && e.resource.isEqualOrParent(this.uri)) {\n                this.sync();\n            }\n        }));\n        try {\n            this.toDispose.push(this.fileService.watch(this.uri));\n        } catch (e) {\n            console.error(e);\n        }\n        this.updateSavingContentChanges();\n        this.toDispose.push(this.fileService.onDidChangeFileSystemProviderCapabilities(e => {\n            if (e.scheme === this.uri.scheme) {\n                this.updateSavingContentChanges();\n            }\n        }));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    async readContents(options?: { encoding?: string }): Promise<string> {\n        try {\n            const encoding = options?.encoding || this.version?.encoding;\n            const stat = await this.fileService.read(this.uri, {\n                encoding,\n                etag: ETAG_DISABLED,\n                acceptTextOnly: this.acceptTextOnly,\n                limits: this.limits\n            });\n            this._version = {\n                encoding: stat.encoding,\n                etag: stat.etag,\n                mtime: stat.mtime\n            };\n            return stat.value;\n        } catch (e) {\n            if (e instanceof TextFileOperationError && e.textFileOperationResult === TextFileOperationResult.FILE_IS_BINARY) {\n                if (await this.shouldOpenAsText('The file is either binary or uses an unsupported text encoding.')) {\n                    this.acceptTextOnly = false;\n                    return this.readContents(options);\n                }\n            } else if (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_TOO_LARGE) {\n                const stat = await this.fileService.resolve(this.uri, { resolveMetadata: true });\n                const maxFileSize = GENERAL_MAX_FILE_SIZE_MB * 1024 * 1024;\n                if (this.limits?.size !== maxFileSize && await this.shouldOpenAsText(`The file is too large (${BinarySize.formatSize(stat.size)}).`)) {\n                    this.limits = {\n                        size: maxFileSize\n                    };\n                    return this.readContents(options);\n                }\n            } else if (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n                this._version = undefined;\n                const { message, stack } = e;\n                throw ResourceError.NotFound({\n                    message, stack,\n                    data: {\n                        uri: this.uri\n                    }\n                });\n            }\n            throw e;\n        }\n    }\n\n    async readStream(options?: { encoding?: string }): Promise<ReadableStream<string>> {\n        try {\n            const encoding = options?.encoding || this.version?.encoding;\n            const stat = await this.fileService.readStream(this.uri, {\n                encoding,\n                etag: ETAG_DISABLED,\n                acceptTextOnly: this.acceptTextOnly,\n                limits: this.limits\n            });\n            this._version = {\n                encoding: stat.encoding,\n                etag: stat.etag,\n                mtime: stat.mtime\n            };\n            return stat.value;\n        } catch (e) {\n            if (e instanceof TextFileOperationError && e.textFileOperationResult === TextFileOperationResult.FILE_IS_BINARY) {\n                if (await this.shouldOpenAsText('The file is either binary or uses an unsupported text encoding.')) {\n                    this.acceptTextOnly = false;\n                    return this.readStream(options);\n                }\n            } else if (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_TOO_LARGE) {\n                const stat = await this.fileService.resolve(this.uri, { resolveMetadata: true });\n                const maxFileSize = GENERAL_MAX_FILE_SIZE_MB * 1024 * 1024;\n                if (this.limits?.size !== maxFileSize && await this.shouldOpenAsText(`The file is too large (${BinarySize.formatSize(stat.size)}).`)) {\n                    this.limits = {\n                        size: maxFileSize\n                    };\n                    return this.readStream(options);\n                }\n            } else if (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n                this._version = undefined;\n                const { message, stack } = e;\n                throw ResourceError.NotFound({\n                    message, stack,\n                    data: {\n                        uri: this.uri\n                    }\n                });\n            }\n            throw e;\n        }\n    }\n\n    saveContents(content: string, options?: ResourceSaveOptions): Promise<void> {\n        return this.doWrite(content, options);\n    }\n\n    saveStream(content: Readable<string>, options?: ResourceSaveOptions): Promise<void> {\n        return this.doWrite(content, options);\n    }\n\n    protected async doWrite(content: string | Readable<string>, options?: ResourceSaveOptions): Promise<void> {\n        const version = options?.version || this._version;\n        const current = FileResourceVersion.is(version) ? version : undefined;\n        const etag = current?.etag;\n        try {\n            const stat = await this.fileService.write(this.uri, content, {\n                encoding: options?.encoding,\n                overwriteEncoding: options?.overwriteEncoding,\n                etag,\n                mtime: current?.mtime\n            });\n            this._version = {\n                etag: stat.etag,\n                mtime: stat.mtime,\n                encoding: stat.encoding\n            };\n        } catch (e) {\n            if (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE) {\n                if (etag !== ETAG_DISABLED && await this.shouldOverwrite()) {\n                    return this.doWrite(content, { ...options, version: { stat: { ...current, etag: ETAG_DISABLED } } });\n                }\n                const { message, stack } = e;\n                throw ResourceError.OutOfSync({ message, stack, data: { uri: this.uri } });\n            }\n            throw e;\n        }\n    }\n\n    saveContentChanges?: Resource['saveContentChanges'];\n    protected updateSavingContentChanges(): void {\n        if (this.fileService.hasCapability(this.uri, FileSystemProviderCapabilities.Update)) {\n            this.saveContentChanges = this.doSaveContentChanges;\n        } else {\n            delete this.saveContentChanges;\n        }\n    }\n    protected doSaveContentChanges: Resource['saveContentChanges'] = async (changes, options) => {\n        const version = options?.version || this._version;\n        const current = FileResourceVersion.is(version) ? version : undefined;\n        if (!current) {\n            throw ResourceError.NotFound({ message: 'has not been read yet', data: { uri: this.uri } });\n        }\n        const etag = current?.etag;\n        try {\n            const stat = await this.fileService.update(this.uri, changes, {\n                readEncoding: current.encoding,\n                encoding: options?.encoding,\n                overwriteEncoding: options?.overwriteEncoding,\n                etag,\n                mtime: current?.mtime\n            });\n            this._version = {\n                etag: stat.etag,\n                mtime: stat.mtime,\n                encoding: stat.encoding\n            };\n        } catch (e) {\n            if (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n                const { message, stack } = e;\n                throw ResourceError.NotFound({ message, stack, data: { uri: this.uri } });\n            }\n            if (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE) {\n                const { message, stack } = e;\n                throw ResourceError.OutOfSync({ message, stack, data: { uri: this.uri } });\n            }\n            throw e;\n        }\n    };\n\n    async guessEncoding(): Promise<string> {\n        // TODO limit size\n        const content = await this.fileService.read(this.uri, { autoGuessEncoding: true });\n        return content.encoding;\n    }\n\n    protected async sync(): Promise<void> {\n        if (await this.isInSync()) {\n            return;\n        }\n        this.onDidChangeContentsEmitter.fire(undefined);\n    }\n    protected async isInSync(): Promise<boolean> {\n        try {\n            const stat = await this.fileService.resolve(this.uri, { resolveMetadata: true });\n            return !!this.version && this.version.mtime >= stat.mtime;\n        } catch {\n            return !this.version;\n        }\n    }\n\n    protected async shouldOverwrite(): Promise<boolean> {\n        return this.options.shouldOverwrite();\n    }\n\n    protected async shouldOpenAsText(error: string): Promise<boolean> {\n        return this.options.shouldOpenAsText(error);\n    }\n\n}\n\n@injectable()\nexport class FileResourceResolver implements ResourceResolver {\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    async resolve(uri: URI): Promise<FileResource> {\n        let stat;\n        try {\n            stat = await this.fileService.resolve(uri);\n        } catch (e) {\n            if (!(e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND)) {\n                throw e;\n            }\n        }\n        if (stat && stat.isDirectory) {\n            throw new Error('The given uri is a directory: ' + this.labelProvider.getLongName(uri));\n        }\n        return new FileResource(uri, this.fileService, {\n            shouldOverwrite: () => this.shouldOverwrite(uri),\n            shouldOpenAsText: error => this.shouldOpenAsText(uri, error)\n        });\n    }\n\n    protected async shouldOverwrite(uri: URI): Promise<boolean> {\n        const dialog = new ConfirmDialog({\n            title: `The file '${this.labelProvider.getName(uri)}' has been changed on the file system.`,\n            msg: `Do you want to overwrite the changes made to '${this.labelProvider.getLongName(uri)}' on the file system?`,\n            ok: 'Yes',\n            cancel: 'No'\n        });\n        return !!await dialog.open();\n    }\n\n    protected async shouldOpenAsText(uri: URI, error: string): Promise<boolean> {\n        const dialog = new ConfirmDialog({\n            title: error,\n            msg: `Opening it might take some time and might make the IDE unresponsive. Do you want to open '${this.labelProvider.getLongName(uri)}' anyway?`,\n            ok: 'Yes',\n            cancel: 'No'\n        });\n        return !!await dialog.open();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Emitter, WaitUntilEvent } from '@theia/core/lib/common/event';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileChangeType, FileOperation } from '../common/files';\nimport { FileService } from './file-service';\n\nexport {\n    FileChangeType\n};\n\nexport interface FileChange {\n    uri: URI;\n    type: FileChangeType;\n}\nexport namespace FileChange {\n    export function isUpdated(change: FileChange, uri: URI): boolean {\n        return change.type === FileChangeType.UPDATED && uri.toString() === change.uri.toString();\n    }\n    export function isAdded(change: FileChange, uri: URI): boolean {\n        return change.type === FileChangeType.ADDED && uri.toString() === change.uri.toString();\n    }\n    export function isDeleted(change: FileChange, uri: URI): boolean {\n        return change.type === FileChangeType.DELETED && change.uri.isEqualOrParent(uri);\n    }\n    export function isAffected(change: FileChange, uri: URI): boolean {\n        return isDeleted(change, uri) || uri.toString() === change.uri.toString();\n    }\n    export function isChanged(change: FileChange, uri: URI): boolean {\n        return !isDeleted(change, uri) && uri.toString() === change.uri.toString();\n    }\n}\n\n/**\n * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `FileChangesEvent` instead\n */\nexport type FileChangeEvent = FileChange[];\nexport namespace FileChangeEvent {\n    export function isUpdated(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isUpdated(change, uri));\n    }\n    export function isAdded(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isAdded(change, uri));\n    }\n    export function isDeleted(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isDeleted(change, uri));\n    }\n    export function isAffected(event: FileChangeEvent, uri: URI): boolean {\n        return event.some(change => FileChange.isAffected(change, uri));\n    }\n    export function isChanged(event: FileChangeEvent, uri: URI): boolean {\n        return !isDeleted(event, uri) && event.some(change => FileChange.isChanged(change, uri));\n    }\n}\n\n/**\n * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `UserFileOperationEvent` instead\n */\nexport interface FileMoveEvent extends WaitUntilEvent {\n    sourceUri: URI\n    targetUri: URI\n}\nexport namespace FileMoveEvent {\n    export function isRename({ sourceUri, targetUri }: FileMoveEvent): boolean {\n        return sourceUri.parent.toString() === targetUri.parent.toString();\n    }\n}\n\n/**\n * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `UserFileOperationEvent` instead\n */\nexport interface FileEvent extends WaitUntilEvent {\n    uri: URI\n}\n\nexport class FileOperationEmitter<E extends WaitUntilEvent> implements Disposable {\n\n    protected readonly onWillEmitter = new Emitter<E>();\n    readonly onWill = this.onWillEmitter.event;\n\n    protected readonly onDidFailEmitter = new Emitter<E>();\n    readonly onDidFail = this.onDidFailEmitter.event;\n\n    protected readonly onDidEmitter = new Emitter<E>();\n    readonly onDid = this.onDidEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onWillEmitter,\n        this.onDidFailEmitter,\n        this.onDidEmitter\n    );\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    async fireWill(event: Pick<E, Exclude<keyof E, 'waitUntil'>>): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillEmitter, event);\n    }\n\n    async fireDid(failed: boolean, event: Pick<E, Exclude<keyof E, 'waitUntil'>>): Promise<void> {\n        const onDidEmitter = failed ? this.onDidFailEmitter : this.onDidEmitter;\n        await WaitUntilEvent.fire(onDidEmitter, event);\n    }\n\n}\n\n/**\n * React to file system events, including calls originating from the\n * application or event coming from the system's filesystem directly\n * (actual file watching).\n *\n * `on(will|did)(create|rename|delete)` events solely come from application\n * usage, not from actual filesystem.\n *\n * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `FileService.watch` instead\n */\n@injectable()\nexport class FileSystemWatcher implements Disposable {\n\n    protected readonly toDispose = new DisposableCollection();\n    protected readonly toRestartAll = new DisposableCollection();\n\n    protected readonly onFileChangedEmitter = new Emitter<FileChangeEvent>();\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `FileService.onDidFilesChange` instead\n     */\n    readonly onFilesChanged = this.onFileChangedEmitter.event;\n\n    protected readonly fileCreateEmitter = new FileOperationEmitter<FileEvent>();\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `FileService.onWillRunUserOperation` instead\n     */\n    readonly onWillCreate = this.fileCreateEmitter.onWill;\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `FileService.onDidFailUserOperation` instead\n     */\n    readonly onDidFailCreate = this.fileCreateEmitter.onDidFail;\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908),\n     * instead use `FileService.onDidRunUserOperation` for events triggered by user gestures\n     * or `FileService.onDidRunOperation` triggered by user gestures and programmatically\n     */\n    readonly onDidCreate = this.fileCreateEmitter.onDid;\n\n    protected readonly fileDeleteEmitter = new FileOperationEmitter<FileEvent>();\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `FileService.onWillRunUserOperation` instead\n     */\n    readonly onWillDelete = this.fileDeleteEmitter.onWill;\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `FileService.onDidFailUserOperation` instead\n     */\n    readonly onDidFailDelete = this.fileDeleteEmitter.onDidFail;\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908),\n     * instead use `FileService.onDidRunUserOperation` for events triggered by user gestures\n     * or `FileService.onDidRunOperation` triggered by user gestures and programmatically\n     */\n    readonly onDidDelete = this.fileDeleteEmitter.onDid;\n\n    protected readonly fileMoveEmitter = new FileOperationEmitter<FileMoveEvent>();\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `FileService.onWillRunUserOperation` instead\n     */\n    readonly onWillMove = this.fileMoveEmitter.onWill;\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908), use `FileService.onDidFailUserOperation` instead\n     */\n    readonly onDidFailMove = this.fileMoveEmitter.onDidFail;\n    /**\n     * @deprecated since 1.4.0 - in order to support VS Code FS API (https://github.com/eclipse-theia/theia/pull/7908),\n     * instead use `FileService.onDidRunUserOperation` for events triggered by user gestures\n     * or `FileService.onDidRunOperation` triggered by user gestures and programmatically\n     */\n    readonly onDidMove = this.fileMoveEmitter.onDid;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(this.onFileChangedEmitter);\n        this.toDispose.push(this.fileDeleteEmitter);\n        this.toDispose.push(this.fileMoveEmitter);\n\n        this.toDispose.push(this.fileService.onWillRunUserOperation(event => {\n            if (event.operation === FileOperation.CREATE) {\n                this.fileCreateEmitter.fireWill({ uri: event.target });\n            } else if (event.operation === FileOperation.DELETE) {\n                this.fileDeleteEmitter.fireWill({ uri: event.target });\n            } else if (event.operation === FileOperation.MOVE && event.source) {\n                this.fileMoveEmitter.fireWill({ sourceUri: event.source, targetUri: event.target });\n            }\n        }));\n        this.toDispose.push(this.fileService.onDidFailUserOperation(event => {\n            if (event.operation === FileOperation.CREATE) {\n                this.fileCreateEmitter.fireDid(true, { uri: event.target });\n            } else if (event.operation === FileOperation.DELETE) {\n                this.fileDeleteEmitter.fireDid(true, { uri: event.target });\n            } else if (event.operation === FileOperation.MOVE && event.source) {\n                this.fileMoveEmitter.fireDid(true, { sourceUri: event.source, targetUri: event.target });\n            }\n        }));\n        this.toDispose.push(this.fileService.onDidRunUserOperation(event => {\n            if (event.operation === FileOperation.CREATE) {\n                this.fileCreateEmitter.fireDid(false, { uri: event.target });\n            } else if (event.operation === FileOperation.DELETE) {\n                this.fileDeleteEmitter.fireDid(false, { uri: event.target });\n            } else if (event.operation === FileOperation.MOVE && event.source) {\n                this.fileMoveEmitter.fireDid(false, { sourceUri: event.source, targetUri: event.target });\n            }\n        }));\n    }\n\n    /**\n     * Stop watching.\n     */\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    /**\n     * Start file watching under the given uri.\n     *\n     * Resolve when watching is started.\n     * Return a disposable to stop file watching under the given uri.\n     */\n    async watchFileChanges(uri: URI): Promise<Disposable> {\n        return this.fileService.watch(uri);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './location';\nexport * from './file-tree';\nexport * from './file-dialog';\nexport * from './filesystem-preferences';\nexport * from './filesystem-watcher';\nexport * from './file-resource';\n"],"sourceRoot":""}